/// Interface to local `IPFS` instance.
interface api {
    /// The binary contents of an IPFS file.
    type ipfs-content = list<u8>;
    /// A path to an IPFS file.
    type ipfs-path = string;
    /// A DHT key.
    type dht-key = list<u8>;
    /// A DHT value.
    type dht-value = list<u8>;
    /// A PubSub topic.
    type pubsub-topic = string;
    /// A PubSub message from a topic subscription.
    record pubsub-message {
        /// The topic that the message was received on. 
        topic: pubsub-topic,
        /// The contents of the message.
        message: string,
    }

    /// Errors that occur in IPFS networking.
    enum errno {
        /// Unable to publish file to IPFS.
        file-add-error,
        /// Unable to get file from IPFS.
        file-get-error,
        /// Unable to pin file.
        file-pin-error,
        /// Unable to get DHT value,
        dht-get-error,
        /// Unable to parse a valid IPFS path.
        invalid-ipfs-path,
        /// Invalid CID.
        invalid-cid,
    }

    /// Uploads a file to IPFS.
    file-add: func(contents: ipfs-content) -> result<ipfs-path, errno>;
    /// Retrieves a file from IPFS.
    file-get: func(path: ipfs-path) -> result<ipfs-content, errno>;
    /// Pins a file by path to IPFS.
    file-pin: func(path: ipfs-path) -> result<bool, errno>;
    /// Puts a DHT key-value into IPFS.
    dht-put: func(key: dht-key, contents: ipfs-content) -> result<bool, errno>;
    /// Gets a DHT key-value from IPFS.
    dht-get: func(key: dht-key) -> result<dht-value, errno>;
    /// Subscribes to a PubSub topic.
    pubsub-subscribe: func(topic: pubsub-topic) -> result<bool, errno>;
}

world ipfs-api {
    export api;
}
