
interface api {
    enum errno {
    
    }

    /// The database connection object.
    resource sqlite {
        /// Open a connection to a new or existing SQLite database. The constructor for `sqlite3`.
        constructor();

        /// Destructor for sqlite3.
        close: func() -> void;
    }

    /// The prepared statement object.
    resource statement {
        /// Compile SQL text into byte-code that will do the work of querying or updating the database.
        constructor(db: sqlite, sql: string);

        /// Store application data into parameters of the original SQL.
        bind: func() -> void;

        /// Advance a statement to the next result row or to completion.
        step: func() -> void;

        /// Column values in the current result row for a statement.
        column: func() -> void;

        /// Destructor for the statement.
        finalize: func() -> void;
    }
}

/// World just for the Hermes 'sqlite' API.
world sqlite-api {
    import api;
}
