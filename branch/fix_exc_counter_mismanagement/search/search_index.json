{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Project Catalyst - Hermes \u00b6 How the docs are built \u00b6 MkDocs Material for MkDocs","title":"Project Catalyst - Hermes"},{"location":"#project-catalyst-hermes","text":"","title":"Project Catalyst - Hermes"},{"location":"#how-the-docs-are-built","text":"MkDocs Material for MkDocs","title":"How the docs are built"},{"location":"api/","text":"Hermes Rust docs \u00b6 OPEN FULL PAGE Workspace Dependency Graph \u00b6 External Dependencies Graph \u00b6 Build and Development Dependencies Graph \u00b6 Module trees \u00b6 hermes crate \u00b6 crate hermes \u251c\u2500\u2500 mod app : pub ( crate ) \u2502 \u251c\u2500\u2500 struct Application : pub ( crate ) \u2502 \u2514\u2500\u2500 struct ApplicationName : pub \u251c\u2500\u2500 mod cli : pub ( crate ) \u2502 \u251c\u2500\u2500 struct Cli : pub ( crate ) \u2502 \u251c\u2500\u2500 enum Commands : pub ( self ) \u2502 \u251c\u2500\u2500 mod app : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 enum Commands : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod package : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct PackageCommand : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod sign : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct SignCommand : pub ( crate ) \u2502 \u251c\u2500\u2500 mod build_info : pub ( self ) \u2502 \u251c\u2500\u2500 mod module : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 enum Commands : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod package : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct PackageCommand : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod sign : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct SignCommand : pub ( crate ) \u2502 \u251c\u2500\u2500 mod playground : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct Playground : pub \u2502 \u2514\u2500\u2500 mod run : pub ( self ) \u2502 \u2514\u2500\u2500 struct Run : pub ( crate ) \u251c\u2500\u2500 mod errors : pub ( crate ) \u2502 \u2514\u2500\u2500 struct Errors : pub ( crate ) \u251c\u2500\u2500 mod event : pub ( crate ) \u2502 \u251c\u2500\u2500 struct HermesEvent : pub ( crate ) \u2502 \u251c\u2500\u2500 trait HermesEventPayload : pub ( crate ) \u2502 \u251c\u2500\u2500 enum TargetApp : pub ( crate ) \u2502 \u251c\u2500\u2500 enum TargetModule : pub ( crate ) \u2502 \u2514\u2500\u2500 mod queue : pub \u2502 \u251c\u2500\u2500 struct HermesEventQueue : pub ( self ) \u2502 \u2514\u2500\u2500 mod exit : pub ( self ) \u2502 \u251c\u2500\u2500 enum Exit : pub \u2502 \u2514\u2500\u2500 struct ExitLock : pub \u251c\u2500\u2500 mod hdf5 : pub ( crate ) \u2502 \u251c\u2500\u2500 mod compression : pub ( self ) \u2502 \u251c\u2500\u2500 mod dir : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct Dir : pub ( crate ) \u2502 \u251c\u2500\u2500 mod file : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct File : pub ( crate ) \u2502 \u251c\u2500\u2500 mod path : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct Path : pub ( crate ) \u2502 \u2514\u2500\u2500 mod resources : pub ( crate ) \u2502 \u251c\u2500\u2500 trait ResourceTrait : pub ( crate ) \u2502 \u251c\u2500\u2500 mod builder : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 enum ResourceBuilder : pub ( crate ) \u2502 \u251c\u2500\u2500 mod bytes : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 struct BytesResource : pub ( crate ) \u2502 \u251c\u2500\u2500 mod fs : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct FsResource : pub ( crate ) \u2502 \u251c\u2500\u2500 mod hdf5 : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 enum Hdf5Resource : pub ( crate ) \u2502 \u2514\u2500\u2500 mod uri : pub ( self ) \u2502 \u2514\u2500\u2500 struct Uri : pub ( crate ) \u251c\u2500\u2500 mod ipfs : pub ( crate ) \u2502 \u251c\u2500\u2500 struct AppIpfsState : pub ( self ) \u2502 \u251c\u2500\u2500 struct HermesIpfsNode : pub ( crate ) \u2502 \u251c\u2500\u2500 mod api : pub ( self ) \u2502 \u2514\u2500\u2500 mod task : pub ( self ) \u2502 \u2514\u2500\u2500 enum IpfsCommand : pub ( crate ) \u251c\u2500\u2500 mod logger : pub ( crate ) \u2502 \u251c\u2500\u2500 enum LogLevel : pub ( crate ) \u2502 \u251c\u2500\u2500 struct LoggerConfig : pub ( crate ) \u2502 \u2514\u2500\u2500 struct LoggerConfigBuilder : pub ( crate ) \u251c\u2500\u2500 mod packaging : pub ( crate ) \u2502 \u251c\u2500\u2500 struct FileError : pub ( self ) \u2502 \u251c\u2500\u2500 struct MissingPackageFileError : pub ( crate ) \u2502 \u251c\u2500\u2500 mod app : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 struct ApplicationPackage : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod app_builder : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod author_payload : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct SignaturePayload : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct SignaturePayloadBuilder : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct SignaturePayloadModule : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct SignaturePayloadModuleBuilder : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod manifest : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct Manifest : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ManifestModule : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod serde_def : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ManifestModuleSerde : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct ManifestSerde : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod module_info : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct AppModuleInfo : pub ( crate ) \u2502 \u251c\u2500\u2500 mod hash : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 struct Blake2b256 : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 struct Blake2b256Hasher : pub ( crate ) \u2502 \u251c\u2500\u2500 mod metadata : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 struct Metadata : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 trait MetadataSchema : pub ( crate ) \u2502 \u251c\u2500\u2500 mod module : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 struct ModulePackage : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod author_payload : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct SignaturePayload : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct SignaturePayloadBuilder : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct SignaturePayloadConfig : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct SignaturePayloadSettings : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod config : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct Config : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct ConfigSchema : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod config_info : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct ConfigInfo : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod manifest : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct Manifest : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ManifestConfig : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ManifestSettings : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod serde_def : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ConfigSerde : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ManifestSerde : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct SettingsSerde : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 mod settings : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct SettingsSchema : pub ( crate ) \u2502 \u251c\u2500\u2500 mod package : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 struct Package : pub ( crate ) \u2502 \u251c\u2500\u2500 mod schema_validation : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct SchemaValidator : pub ( crate ) \u2502 \u2514\u2500\u2500 mod sign : pub ( crate ) \u2502 \u251c\u2500\u2500 mod certificate : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 struct Certificate : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod storage : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 struct CertificateStorage : pub ( self ) \u2502 \u251c\u2500\u2500 mod keys : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 struct PrivateKey : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 struct PublicKey : pub ( crate ) \u2502 \u2514\u2500\u2500 mod signature : pub ( crate ) \u2502 \u251c\u2500\u2500 struct Signature : pub ( crate ) \u2502 \u2514\u2500\u2500 trait SignaturePayloadEncoding : pub ( crate ) \u251c\u2500\u2500 mod pool : pub ( crate ) \u251c\u2500\u2500 mod reactor : pub ( crate ) \u2502 \u2514\u2500\u2500 struct Reactor : pub ( self ) \u251c\u2500\u2500 mod runtime_context : pub ( crate ) \u2502 \u2514\u2500\u2500 struct HermesRuntimeContext : pub ( crate ) \u2502 \u2514\u2500\u2500 type Data : pub ( self ) \u251c\u2500\u2500 mod runtime_extensions : pub ( crate ) \u2502 \u251c\u2500\u2500 mod app_config : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct SqliteConfig : pub ( crate ) \u2502 \u251c\u2500\u2500 mod bindings : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod unchecked_exports : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 enum Error : pub ( crate ) \u2502 \u251c\u2500\u2500 mod hermes : pub \u2502 \u2502 \u251c\u2500\u2500 mod binary : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod cardano : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum CardanoError : pub \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct State : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum SubscriptionType : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod block : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod chain_sync : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod event : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct OnCardanoBlockEvent : pub ( super ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct OnCardanoImmutableRollForwardEvent : pub ( super ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod network : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum Command : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 type CommandReceiver : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 type CommandSender : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct Handle : pub \u2502 \u2502 \u251c\u2500\u2500 mod cbor : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod cron : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod event : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct CronDuration : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct OnCronEvent : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod queue : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct CronEventQueue : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum CronJob : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct CronJobDelay : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod state : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct InternalState : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod crypto : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod bip32_ed25519 : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod bip39 : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod state : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 type State : pub ( super ) \u2502 \u2502 \u251c\u2500\u2500 mod hash : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod blake2b : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod http_gateway : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod event : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 type Body : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 type Code : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct HTTPEvent : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum HTTPEventMsg : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 type HeadersKV : pub \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 type Method : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 type Path : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct RedirectConfig : pub \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod gateway_task : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 type ClientConnectionInfo : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ClientIPAddr : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct Config : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ConnectionManager : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct EventUID : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct Hostname : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct LiveConnection : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct Processed : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod routing : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct Hostname : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 enum RouteType : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod http_request : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct State : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod event : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct OnHttpResponseEvent : pub ( super ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod tokio_runtime_task : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum Command : pub \u2502 \u2502 \u2502 \u251c\u2500\u2500 type CommandReceiver : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 type CommandSender : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum Connection : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct TokioTaskHandle : pub \u2502 \u2502 \u251c\u2500\u2500 mod init : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod event : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod integration_test : pub \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod event : pub \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum EventType : pub \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct OnBenchEvent : pub \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct OnTestEvent : pub \u2502 \u2502 \u251c\u2500\u2500 mod ipfs : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod event : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct OnTopicEvent : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod json : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod kv_store : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod event : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct KVUpdateEvent : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod localtime : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod time : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod logging : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct RteLogging : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod log_msg : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 mod sqlite : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod connection : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod core : pub ( super ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod core : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod state : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 type DbState : pub ( super ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 type ObjectPointer : pub ( super ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 type StatementState : pub ( super ) \u2502 \u2502 \u2514\u2500\u2500 mod statement : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod core : pub ( super ) \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u251c\u2500\u2500 mod init : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod errors : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 type RteInitResult : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct RuntimeExtensionError : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum RuntimeExtensionErrorKind : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct RuntimeExtensionErrors : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod executor : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct InstanceData : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod metadata : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct RteMetadata : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct RteMetadataInner : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod priority : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct RteInitPriority : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod trait_app : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct RteApp : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 trait RteInitApp : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod trait_event : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct RteEvent : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 trait RteInitEvent : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod trait_module : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 trait RteInitModule : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct RteModule : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod trait_runtime : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 trait RteInitRuntime : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 struct RteRuntime : pub ( crate ) \u2502 \u251c\u2500\u2500 mod resource_manager : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 struct ApplicationResourceStorage : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 struct ResourceStorage : pub ( crate ) \u2502 \u251c\u2500\u2500 mod utils : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod conversion : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod mul_add : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 trait SaturatingMulAdd : pub \u2502 \u2502 \u2514\u2500\u2500 mod regex_ranking : pub ( crate ) \u2502 \u2514\u2500\u2500 mod wasi : pub ( self ) \u2502 \u251c\u2500\u2500 mod cli : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u251c\u2500\u2500 mod clocks : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod monotonic : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod state : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct ClockState : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 mod wall : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u251c\u2500\u2500 mod filesystem : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 mod state : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 enum Descriptor : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 type Descriptors : pub ( crate ) \u2502 \u251c\u2500\u2500 mod io : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod error : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod poll : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 mod streams : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 mod state : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 trait InputStreamTrait : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 type InputStreams : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 trait OutputStreamTrait : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 type OutputStreams : pub ( crate ) \u2502 \u2514\u2500\u2500 mod random : pub ( crate ) \u2502 \u251c\u2500\u2500 mod insecure : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u251c\u2500\u2500 mod insecure_seed : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2514\u2500\u2500 mod secure : pub ( crate ) \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u251c\u2500\u2500 mod utils : pub ( crate ) \u251c\u2500\u2500 mod vfs : pub ( crate ) \u2502 \u251c\u2500\u2500 struct Vfs : pub ( crate ) \u2502 \u251c\u2500\u2500 mod bootstrap : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 struct DirToCreate : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 struct MountedDir : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 struct MountedFile : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct VfsBootstrapper : pub ( crate ) \u2502 \u251c\u2500\u2500 mod ipfs : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct IpfsVirtualFile : pub ( self ) \u2502 \u2514\u2500\u2500 mod permission : pub ( self ) \u2502 \u251c\u2500\u2500 enum PermissionLevel : pub ( crate ) \u2502 \u251c\u2500\u2500 struct PermissionNode : pub ( self ) \u2502 \u251c\u2500\u2500 type PermissionNodeRef : pub ( self ) \u2502 \u2514\u2500\u2500 struct PermissionsState : pub ( crate ) \u2514\u2500\u2500 mod wasm : pub ( crate ) \u251c\u2500\u2500 mod engine : pub ( self ) \u2502 \u2514\u2500\u2500 struct Engine : pub ( crate ) \u2514\u2500\u2500 mod module : pub \u251c\u2500\u2500 struct Module : pub \u251c\u2500\u2500 struct ModuleId : pub ( crate ) \u251c\u2500\u2500 struct ModuleInstance : pub \u2514\u2500\u2500 mod bench : pub #[cfg(feature = \"bench\" )] cardano-chain-follower crate \u00b6 src / api / rust - docs / cardano - chain - follower . lib . modules . tree error : [ Errno 2 ] No such file or directory : '/ docs / src / api / rust - docs / cardano - chain - follower . lib . modules . tree ' Module graphs \u00b6 hermes crate \u00b6 cardano-chain-follower crate \u00b6","title":"Index"},{"location":"api/#hermes-rust-docs","text":"OPEN FULL PAGE","title":"Hermes Rust docs"},{"location":"api/#workspace-dependency-graph","text":"","title":"Workspace Dependency Graph"},{"location":"api/#external-dependencies-graph","text":"","title":"External Dependencies Graph"},{"location":"api/#build-and-development-dependencies-graph","text":"","title":"Build and Development Dependencies Graph"},{"location":"api/#module-trees","text":"","title":"Module trees"},{"location":"api/#hermes-crate","text":"crate hermes \u251c\u2500\u2500 mod app : pub ( crate ) \u2502 \u251c\u2500\u2500 struct Application : pub ( crate ) \u2502 \u2514\u2500\u2500 struct ApplicationName : pub \u251c\u2500\u2500 mod cli : pub ( crate ) \u2502 \u251c\u2500\u2500 struct Cli : pub ( crate ) \u2502 \u251c\u2500\u2500 enum Commands : pub ( self ) \u2502 \u251c\u2500\u2500 mod app : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 enum Commands : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod package : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct PackageCommand : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod sign : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct SignCommand : pub ( crate ) \u2502 \u251c\u2500\u2500 mod build_info : pub ( self ) \u2502 \u251c\u2500\u2500 mod module : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 enum Commands : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod package : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct PackageCommand : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod sign : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct SignCommand : pub ( crate ) \u2502 \u251c\u2500\u2500 mod playground : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct Playground : pub \u2502 \u2514\u2500\u2500 mod run : pub ( self ) \u2502 \u2514\u2500\u2500 struct Run : pub ( crate ) \u251c\u2500\u2500 mod errors : pub ( crate ) \u2502 \u2514\u2500\u2500 struct Errors : pub ( crate ) \u251c\u2500\u2500 mod event : pub ( crate ) \u2502 \u251c\u2500\u2500 struct HermesEvent : pub ( crate ) \u2502 \u251c\u2500\u2500 trait HermesEventPayload : pub ( crate ) \u2502 \u251c\u2500\u2500 enum TargetApp : pub ( crate ) \u2502 \u251c\u2500\u2500 enum TargetModule : pub ( crate ) \u2502 \u2514\u2500\u2500 mod queue : pub \u2502 \u251c\u2500\u2500 struct HermesEventQueue : pub ( self ) \u2502 \u2514\u2500\u2500 mod exit : pub ( self ) \u2502 \u251c\u2500\u2500 enum Exit : pub \u2502 \u2514\u2500\u2500 struct ExitLock : pub \u251c\u2500\u2500 mod hdf5 : pub ( crate ) \u2502 \u251c\u2500\u2500 mod compression : pub ( self ) \u2502 \u251c\u2500\u2500 mod dir : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct Dir : pub ( crate ) \u2502 \u251c\u2500\u2500 mod file : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct File : pub ( crate ) \u2502 \u251c\u2500\u2500 mod path : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct Path : pub ( crate ) \u2502 \u2514\u2500\u2500 mod resources : pub ( crate ) \u2502 \u251c\u2500\u2500 trait ResourceTrait : pub ( crate ) \u2502 \u251c\u2500\u2500 mod builder : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 enum ResourceBuilder : pub ( crate ) \u2502 \u251c\u2500\u2500 mod bytes : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 struct BytesResource : pub ( crate ) \u2502 \u251c\u2500\u2500 mod fs : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct FsResource : pub ( crate ) \u2502 \u251c\u2500\u2500 mod hdf5 : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 enum Hdf5Resource : pub ( crate ) \u2502 \u2514\u2500\u2500 mod uri : pub ( self ) \u2502 \u2514\u2500\u2500 struct Uri : pub ( crate ) \u251c\u2500\u2500 mod ipfs : pub ( crate ) \u2502 \u251c\u2500\u2500 struct AppIpfsState : pub ( self ) \u2502 \u251c\u2500\u2500 struct HermesIpfsNode : pub ( crate ) \u2502 \u251c\u2500\u2500 mod api : pub ( self ) \u2502 \u2514\u2500\u2500 mod task : pub ( self ) \u2502 \u2514\u2500\u2500 enum IpfsCommand : pub ( crate ) \u251c\u2500\u2500 mod logger : pub ( crate ) \u2502 \u251c\u2500\u2500 enum LogLevel : pub ( crate ) \u2502 \u251c\u2500\u2500 struct LoggerConfig : pub ( crate ) \u2502 \u2514\u2500\u2500 struct LoggerConfigBuilder : pub ( crate ) \u251c\u2500\u2500 mod packaging : pub ( crate ) \u2502 \u251c\u2500\u2500 struct FileError : pub ( self ) \u2502 \u251c\u2500\u2500 struct MissingPackageFileError : pub ( crate ) \u2502 \u251c\u2500\u2500 mod app : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 struct ApplicationPackage : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod app_builder : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod author_payload : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct SignaturePayload : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct SignaturePayloadBuilder : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct SignaturePayloadModule : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct SignaturePayloadModuleBuilder : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod manifest : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct Manifest : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ManifestModule : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod serde_def : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ManifestModuleSerde : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct ManifestSerde : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod module_info : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct AppModuleInfo : pub ( crate ) \u2502 \u251c\u2500\u2500 mod hash : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 struct Blake2b256 : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 struct Blake2b256Hasher : pub ( crate ) \u2502 \u251c\u2500\u2500 mod metadata : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 struct Metadata : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 trait MetadataSchema : pub ( crate ) \u2502 \u251c\u2500\u2500 mod module : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 struct ModulePackage : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod author_payload : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct SignaturePayload : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct SignaturePayloadBuilder : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct SignaturePayloadConfig : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct SignaturePayloadSettings : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod config : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct Config : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct ConfigSchema : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod config_info : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct ConfigInfo : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod manifest : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct Manifest : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ManifestConfig : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ManifestSettings : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod serde_def : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ConfigSerde : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ManifestSerde : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct SettingsSerde : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 mod settings : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct SettingsSchema : pub ( crate ) \u2502 \u251c\u2500\u2500 mod package : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 struct Package : pub ( crate ) \u2502 \u251c\u2500\u2500 mod schema_validation : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct SchemaValidator : pub ( crate ) \u2502 \u2514\u2500\u2500 mod sign : pub ( crate ) \u2502 \u251c\u2500\u2500 mod certificate : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 struct Certificate : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod storage : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 struct CertificateStorage : pub ( self ) \u2502 \u251c\u2500\u2500 mod keys : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 struct PrivateKey : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 struct PublicKey : pub ( crate ) \u2502 \u2514\u2500\u2500 mod signature : pub ( crate ) \u2502 \u251c\u2500\u2500 struct Signature : pub ( crate ) \u2502 \u2514\u2500\u2500 trait SignaturePayloadEncoding : pub ( crate ) \u251c\u2500\u2500 mod pool : pub ( crate ) \u251c\u2500\u2500 mod reactor : pub ( crate ) \u2502 \u2514\u2500\u2500 struct Reactor : pub ( self ) \u251c\u2500\u2500 mod runtime_context : pub ( crate ) \u2502 \u2514\u2500\u2500 struct HermesRuntimeContext : pub ( crate ) \u2502 \u2514\u2500\u2500 type Data : pub ( self ) \u251c\u2500\u2500 mod runtime_extensions : pub ( crate ) \u2502 \u251c\u2500\u2500 mod app_config : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct SqliteConfig : pub ( crate ) \u2502 \u251c\u2500\u2500 mod bindings : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod unchecked_exports : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 enum Error : pub ( crate ) \u2502 \u251c\u2500\u2500 mod hermes : pub \u2502 \u2502 \u251c\u2500\u2500 mod binary : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod cardano : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum CardanoError : pub \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct State : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum SubscriptionType : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod block : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod chain_sync : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod event : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct OnCardanoBlockEvent : pub ( super ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct OnCardanoImmutableRollForwardEvent : pub ( super ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod network : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum Command : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 type CommandReceiver : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 type CommandSender : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct Handle : pub \u2502 \u2502 \u251c\u2500\u2500 mod cbor : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod cron : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod event : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct CronDuration : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct OnCronEvent : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod queue : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct CronEventQueue : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum CronJob : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct CronJobDelay : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod state : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct InternalState : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod crypto : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod bip32_ed25519 : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod bip39 : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod state : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 type State : pub ( super ) \u2502 \u2502 \u251c\u2500\u2500 mod hash : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod blake2b : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod http_gateway : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod event : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 type Body : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 type Code : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct HTTPEvent : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum HTTPEventMsg : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 type HeadersKV : pub \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 type Method : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 type Path : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct RedirectConfig : pub \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod gateway_task : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 type ClientConnectionInfo : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ClientIPAddr : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct Config : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct ConnectionManager : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct EventUID : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct Hostname : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct LiveConnection : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct Processed : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod routing : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct Hostname : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 enum RouteType : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod http_request : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct State : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod event : pub ( self ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct OnHttpResponseEvent : pub ( super ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod tokio_runtime_task : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum Command : pub \u2502 \u2502 \u2502 \u251c\u2500\u2500 type CommandReceiver : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 type CommandSender : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum Connection : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct TokioTaskHandle : pub \u2502 \u2502 \u251c\u2500\u2500 mod init : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod event : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod integration_test : pub \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod event : pub \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum EventType : pub \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct OnBenchEvent : pub \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct OnTestEvent : pub \u2502 \u2502 \u251c\u2500\u2500 mod ipfs : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod event : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct OnTopicEvent : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod json : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod kv_store : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod event : pub ( crate ) \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct KVUpdateEvent : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod localtime : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod time : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod logging : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct RteLogging : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod log_msg : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 mod sqlite : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod connection : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 mod core : pub ( super ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod core : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod state : pub ( self ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 type DbState : pub ( super ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 type ObjectPointer : pub ( super ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 type StatementState : pub ( super ) \u2502 \u2502 \u2514\u2500\u2500 mod statement : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod core : pub ( super ) \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u251c\u2500\u2500 mod init : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod errors : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 type RteInitResult : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct RuntimeExtensionError : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 enum RuntimeExtensionErrorKind : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct RuntimeExtensionErrors : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod executor : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct InstanceData : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod metadata : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct RteMetadata : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct RteMetadataInner : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod priority : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct RteInitPriority : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod trait_app : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct RteApp : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 trait RteInitApp : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod trait_event : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 struct RteEvent : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 trait RteInitEvent : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod trait_module : pub ( crate ) \u2502 \u2502 \u2502 \u251c\u2500\u2500 trait RteInitModule : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct RteModule : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod trait_runtime : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 trait RteInitRuntime : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 struct RteRuntime : pub ( crate ) \u2502 \u251c\u2500\u2500 mod resource_manager : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 struct ApplicationResourceStorage : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 struct ResourceStorage : pub ( crate ) \u2502 \u251c\u2500\u2500 mod utils : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod conversion : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod mul_add : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 trait SaturatingMulAdd : pub \u2502 \u2502 \u2514\u2500\u2500 mod regex_ranking : pub ( crate ) \u2502 \u2514\u2500\u2500 mod wasi : pub ( self ) \u2502 \u251c\u2500\u2500 mod cli : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u251c\u2500\u2500 mod clocks : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod monotonic : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod state : pub ( self ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 struct ClockState : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 mod wall : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u251c\u2500\u2500 mod filesystem : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 mod state : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 enum Descriptor : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 type Descriptors : pub ( crate ) \u2502 \u251c\u2500\u2500 mod io : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod error : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 mod poll : pub ( crate ) \u2502 \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 mod streams : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 mod host : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 mod state : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 trait InputStreamTrait : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 type InputStreams : pub ( crate ) \u2502 \u2502 \u251c\u2500\u2500 trait OutputStreamTrait : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 type OutputStreams : pub ( crate ) \u2502 \u2514\u2500\u2500 mod random : pub ( crate ) \u2502 \u251c\u2500\u2500 mod insecure : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u251c\u2500\u2500 mod insecure_seed : pub ( crate ) \u2502 \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u2502 \u2514\u2500\u2500 mod secure : pub ( crate ) \u2502 \u2514\u2500\u2500 mod host : pub ( self ) \u251c\u2500\u2500 mod utils : pub ( crate ) \u251c\u2500\u2500 mod vfs : pub ( crate ) \u2502 \u251c\u2500\u2500 struct Vfs : pub ( crate ) \u2502 \u251c\u2500\u2500 mod bootstrap : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 struct DirToCreate : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 struct MountedDir : pub ( self ) \u2502 \u2502 \u251c\u2500\u2500 struct MountedFile : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct VfsBootstrapper : pub ( crate ) \u2502 \u251c\u2500\u2500 mod ipfs : pub ( self ) \u2502 \u2502 \u2514\u2500\u2500 struct IpfsVirtualFile : pub ( self ) \u2502 \u2514\u2500\u2500 mod permission : pub ( self ) \u2502 \u251c\u2500\u2500 enum PermissionLevel : pub ( crate ) \u2502 \u251c\u2500\u2500 struct PermissionNode : pub ( self ) \u2502 \u251c\u2500\u2500 type PermissionNodeRef : pub ( self ) \u2502 \u2514\u2500\u2500 struct PermissionsState : pub ( crate ) \u2514\u2500\u2500 mod wasm : pub ( crate ) \u251c\u2500\u2500 mod engine : pub ( self ) \u2502 \u2514\u2500\u2500 struct Engine : pub ( crate ) \u2514\u2500\u2500 mod module : pub \u251c\u2500\u2500 struct Module : pub \u251c\u2500\u2500 struct ModuleId : pub ( crate ) \u251c\u2500\u2500 struct ModuleInstance : pub \u2514\u2500\u2500 mod bench : pub #[cfg(feature = \"bench\" )]","title":"hermes crate"},{"location":"api/#cardano-chain-follower-crate","text":"src / api / rust - docs / cardano - chain - follower . lib . modules . tree error : [ Errno 2 ] No such file or directory : '/ docs / src / api / rust - docs / cardano - chain - follower . lib . modules . tree '","title":"cardano-chain-follower crate"},{"location":"api/#module-graphs","text":"","title":"Module graphs"},{"location":"api/#hermes-crate_1","text":"","title":"hermes crate"},{"location":"api/#cardano-chain-follower-crate_1","text":"","title":"cardano-chain-follower crate"},{"location":"api/rust-docs/static.files/SourceSerif4-LICENSE-a2cfd9d5/","text":"Copyright 2014-2021 Adobe (http://www.adobe.com/), with Reserved Font Name 'Source'. All Rights Reserved. Source is a trademark of Adobe in the United States and/or other countries. Copyright 2014 - 2023 Adobe (http://www.adobe.com/), with Reserved Font Name \u2018Source\u2019. All Rights Reserved. Source is a trademark of Adobe in the United States and/or other countries. This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is copied below, and is also available with a FAQ at: http://scripts.sil.org/OFL SIL OPEN FONT LICENSE Version 1.1 - 26 February 2007 \u00b6 PREAMBLE The goals of the Open Font License (OFL) are to stimulate worldwide development of collaborative font projects, to support the font creation efforts of academic and linguistic communities, and to provide a free and open framework in which fonts may be shared and improved in partnership with others. The OFL allows the licensed fonts to be used, studied, modified and redistributed freely as long as they are not sold by themselves. The fonts, including any derivative works, can be bundled, embedded, redistributed and/or sold with any software provided that any reserved names are not used by derivative works. The fonts and derivatives, however, cannot be released under any other type of license. The requirement for fonts to remain under this license does not apply to any document created using the fonts or their derivatives. DEFINITIONS \"Font Software\" refers to the set of files released by the Copyright Holder(s) under this license and clearly marked as such. This may include source files, build scripts and documentation. \"Reserved Font Name\" refers to any names specified as such after the copyright statement(s). \"Original Version\" refers to the collection of Font Software components as distributed by the Copyright Holder(s). \"Modified Version\" refers to any derivative made by adding to, deleting, or substituting -- in part or in whole -- any of the components of the Original Version, by changing formats or by porting the Font Software to a new environment. \"Author\" refers to any designer, engineer, programmer, technical writer or other person who contributed to the Font Software. PERMISSION & CONDITIONS Permission is hereby granted, free of charge, to any person obtaining a copy of the Font Software, to use, study, copy, merge, embed, modify, redistribute, and sell modified and unmodified copies of the Font Software, subject to the following conditions: 1) Neither the Font Software nor any of its individual components, in Original or Modified Versions, may be sold by itself. 2) Original or Modified Versions of the Font Software may be bundled, redistributed and/or sold with any software, provided that each copy contains the above copyright notice and this license. These can be included either as stand-alone text files, human-readable headers or in the appropriate machine-readable metadata fields within text or binary files as long as those fields can be easily viewed by the user. 3) No Modified Version of the Font Software may use the Reserved Font Name(s) unless explicit written permission is granted by the corresponding Copyright Holder. This restriction only applies to the primary font name as presented to the users. 4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font Software shall not be used to promote, endorse or advertise any Modified Version, except to acknowledge the contribution(s) of the Copyright Holder(s) and the Author(s) or with their explicit written permission. 5) The Font Software, modified or unmodified, in part or in whole, must be distributed entirely under this license, and must not be distributed under any other license. The requirement for fonts to remain under this license does not apply to any document created using the Font Software. TERMINATION This license becomes null and void if any of the above conditions are not met. DISCLAIMER THE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.","title":"SourceSerif4 LICENSE a2cfd9d5"},{"location":"api/rust-docs/static.files/SourceSerif4-LICENSE-a2cfd9d5/#sil-open-font-license-version-11-26-february-2007","text":"PREAMBLE The goals of the Open Font License (OFL) are to stimulate worldwide development of collaborative font projects, to support the font creation efforts of academic and linguistic communities, and to provide a free and open framework in which fonts may be shared and improved in partnership with others. The OFL allows the licensed fonts to be used, studied, modified and redistributed freely as long as they are not sold by themselves. The fonts, including any derivative works, can be bundled, embedded, redistributed and/or sold with any software provided that any reserved names are not used by derivative works. The fonts and derivatives, however, cannot be released under any other type of license. The requirement for fonts to remain under this license does not apply to any document created using the fonts or their derivatives. DEFINITIONS \"Font Software\" refers to the set of files released by the Copyright Holder(s) under this license and clearly marked as such. This may include source files, build scripts and documentation. \"Reserved Font Name\" refers to any names specified as such after the copyright statement(s). \"Original Version\" refers to the collection of Font Software components as distributed by the Copyright Holder(s). \"Modified Version\" refers to any derivative made by adding to, deleting, or substituting -- in part or in whole -- any of the components of the Original Version, by changing formats or by porting the Font Software to a new environment. \"Author\" refers to any designer, engineer, programmer, technical writer or other person who contributed to the Font Software. PERMISSION & CONDITIONS Permission is hereby granted, free of charge, to any person obtaining a copy of the Font Software, to use, study, copy, merge, embed, modify, redistribute, and sell modified and unmodified copies of the Font Software, subject to the following conditions: 1) Neither the Font Software nor any of its individual components, in Original or Modified Versions, may be sold by itself. 2) Original or Modified Versions of the Font Software may be bundled, redistributed and/or sold with any software, provided that each copy contains the above copyright notice and this license. These can be included either as stand-alone text files, human-readable headers or in the appropriate machine-readable metadata fields within text or binary files as long as those fields can be easily viewed by the user. 3) No Modified Version of the Font Software may use the Reserved Font Name(s) unless explicit written permission is granted by the corresponding Copyright Holder. This restriction only applies to the primary font name as presented to the users. 4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font Software shall not be used to promote, endorse or advertise any Modified Version, except to acknowledge the contribution(s) of the Copyright Holder(s) and the Author(s) or with their explicit written permission. 5) The Font Software, modified or unmodified, in part or in whole, must be distributed entirely under this license, and must not be distributed under any other license. The requirement for fonts to remain under this license does not apply to any document created using the Font Software. TERMINATION This license becomes null and void if any of the above conditions are not met. DISCLAIMER THE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.","title":"SIL OPEN FONT LICENSE Version 1.1 - 26 February 2007"},{"location":"api/wasi-hermes/hermes/","text":"World hermes This import every single API and exports every single entrypoint for a module. Modules ONLY need to import API's they actually use. Modules only need to implement the exports they require. Take note of any permissions attached to a particular API before using it. Imports: interface wasi:cli/environment@0.2.6 interface wasi:cli/exit@0.2.6 interface wasi:io/error@0.2.6 interface wasi:io/poll@0.2.6 interface wasi:io/streams@0.2.6 interface wasi:cli/stdin@0.2.6 interface wasi:cli/stdout@0.2.6 interface wasi:cli/stderr@0.2.6 interface wasi:clocks/monotonic-clock@0.2.6 interface wasi:clocks/wall-clock@0.2.6 interface wasi:filesystem/types@0.2.6 interface wasi:filesystem/preopens@0.2.6 interface wasi:random/random@0.2.6 interface wasi:random/insecure@0.2.6 interface wasi:random/insecure-seed@0.2.6 interface hermes:binary/api interface hermes:hash/api interface hermes:cbor/api interface hermes:cardano/api interface hermes:cron/api interface hermes:crypto/api interface hermes:init/api interface hermes:ipfs/api interface hermes:json/api interface hermes:kv-store/api interface hermes:localtime/api interface hermes:logging/api interface hermes:sqlite/api interface hermes:http-request/api Exports: interface hermes:cardano/event-on-block interface hermes:cardano/event-on-immutable-roll-forward interface hermes:cron/event interface hermes:init/event interface hermes:ipfs/event interface hermes:kv-store/event interface hermes:integration-test/event interface hermes:http-gateway/event interface hermes:http-request/event Import interface wasi:cli/environment@0.2.6 Functions get-environment: func Get the POSIX-style environment variables. Each environment variable is provided as a pair of string variable names and string value. Morally, these are a value import, but until value imports are available in the component model, this import function should return the same values each time it is called. Return values list<( string , string )> get-arguments: func Get the POSIX-style arguments to the program. Return values list< string > initial-cwd: func Return a path that programs should use as their initial current working directory, interpreting . as shorthand for this. Return values option< string > Import interface wasi:cli/exit@0.2.6 Functions exit: func Exit the current instance and any linked instances. Params status : result Import interface wasi:io/error@0.2.6 Types resource error A resource which represents some error information. The only method provided by this resource is to-debug-string , which provides some human-readable information about the error. In the wasi:io package, this resource is returned through the wasi:io/streams/stream-error type. To provide more specific error information, other interfaces may offer functions to \"downcast\" this error into more specific types. For example, errors returned from streams derived from filesystem types can be described using the filesystem's own error-code type. This is done using the function wasi:filesystem/types/filesystem-error-code , which takes a borrow<error> parameter and returns an option<wasi:filesystem/types/error-code> . The set of functions which can \"downcast\" an error into a more concrete type is open. Functions [method]error.to-debug-string: func Returns a string that is suitable to assist humans in debugging this error. WARNING: The returned string should not be consumed mechanically! It may change across platforms, hosts, or other implementation details. Parsing this string is a major platform-compatibility hazard. Params self : borrow< error > Return values string Import interface wasi:io/poll@0.2.6 A poll API intended to let users wait for I/O events on multiple handles at once. Types resource pollable pollable represents a single I/O event which may be ready, or not. Functions [method]pollable.ready: func Return the readiness of a pollable. This function never blocks. Returns true when the pollable is ready, and false otherwise. Params self : borrow< pollable > Return values bool [method]pollable.block: func block returns immediately if the pollable is ready, and otherwise blocks until ready. This function is equivalent to calling poll.poll on a list containing only this pollable. Params self : borrow< pollable > poll: func Poll for completion on a set of pollables. This function takes a list of pollables, which identify I/O sources of interest, and waits until one or more of the events is ready for I/O. The result list<u32> contains one or more indices of handles in the argument list that is ready for I/O. This function traps if either: the list is empty, or: the list contains more elements than can be indexed with a u32 value. A timeout can be implemented by adding a pollable from the wasi-clocks API to the list. This function does not return a result ; polling in itself does not do any I/O so it doesn't fail. If any of the I/O sources identified by the pollables has an error, it is indicated by marking the source as being ready for I/O. Params in : list<borrow< pollable >> Return values list< u32 > Import interface wasi:io/streams@0.2.6 WASI I/O is an I/O abstraction API which is currently focused on providing stream types. In the future, the component model is expected to add built-in stream types; when it does, they are expected to subsume this API. Types type error error #### `type pollable` [`pollable`](#pollable) #### `variant stream-error` An error for input-stream and output-stream operations. Variant Cases last-operation-failed : own< error > The last operation (a write or flush) failed before completion. More information is available in the error payload. After this, the stream will be closed. All future operations return stream-error::closed . closed The stream is closed: no more input will be accepted by the stream. A closed output-stream will return this error on all future operations. resource input-stream An input bytestream. input-stream s are non-blocking to the extent practical on underlying platforms. I/O operations always return promptly; if fewer bytes are promptly available than requested, they return the number of bytes promptly available, which could even be zero. To wait for data to be available, use the subscribe function to obtain a pollable which can be polled for using wasi:io/poll . resource output-stream An output bytestream. output-stream s are non-blocking to the extent practical on underlying platforms. Except where specified otherwise, I/O operations also always return promptly, after the number of bytes that can be written promptly, which could even be zero. To wait for the stream to be ready to accept data, the subscribe function to obtain a pollable which can be polled for using wasi:io/poll . Dropping an output-stream while there's still an active write in progress may result in the data being lost. Before dropping the stream, be sure to fully flush your writes. Functions [method]input-stream.read: func Perform a non-blocking read from the stream. When the source of a read is binary data, the bytes from the source are returned verbatim. When the source of a read is known to the implementation to be text, bytes containing the UTF-8 encoding of the text are returned. This function returns a list of bytes containing the read data, when successful. The returned list will contain up to len bytes; it may return fewer than requested, but not more. The list is empty when no bytes are available for reading at this time. The pollable given by subscribe will be ready when more bytes are available. This function fails with a stream-error when the operation encounters an error, giving last-operation-failed , or when the stream is closed, giving closed . When the caller gives a len of 0, it represents a request to read 0 bytes. If the stream is still open, this call should succeed and return an empty list, or otherwise fail with closed . The len parameter is a u64 , which could represent a list of u8 which is not possible to allocate in wasm32, or not desirable to allocate as as a return value by the callee. The callee may return a list of bytes less than len in size while more bytes are available for reading. Params self : borrow< input-stream > len : u64 Return values result<list< u8 >, stream-error > [method]input-stream.blocking-read: func Read bytes from a stream, after blocking until at least one byte can be read. Except for blocking, behavior is identical to read . Params self : borrow< input-stream > len : u64 Return values result<list< u8 >, stream-error > [method]input-stream.skip: func Skip bytes from a stream. Returns number of bytes skipped. Behaves identical to read , except instead of returning a list of bytes, returns the number of bytes consumed from the stream. Params self : borrow< input-stream > len : u64 Return values result< u64 , stream-error > [method]input-stream.blocking-skip: func Skip bytes from a stream, after blocking until at least one byte can be skipped. Except for blocking behavior, identical to skip . Params self : borrow< input-stream > len : u64 Return values result< u64 , stream-error > [method]input-stream.subscribe: func Create a pollable which will resolve once either the specified stream has bytes available to read or the other end of the stream has been closed. The created pollable is a child resource of the input-stream . Implementations may trap if the input-stream is dropped before all derived pollable s created with this function are dropped. Params self : borrow< input-stream > Return values own< pollable > [method]output-stream.check-write: func Check readiness for writing. This function never blocks. Returns the number of bytes permitted for the next call to write , or an error. Calling write with more bytes than this function has permitted will trap. When this function returns 0 bytes, the subscribe pollable will become ready when this function will report at least 1 byte, or an error. Params self : borrow< output-stream > Return values result< u64 , stream-error > [method]output-stream.write: func Perform a write. This function never blocks. When the destination of a write is binary data, the bytes from contents are written verbatim. When the destination of a write is known to the implementation to be text, the bytes of contents are transcoded from UTF-8 into the encoding of the destination and then written. Precondition: check-write gave permit of Ok(n) and contents has a length of less than or equal to n. Otherwise, this function will trap. returns Err(closed) without writing if the stream has closed since the last call to check-write provided a permit. Params self : borrow< output-stream > contents : list< u8 > Return values result<_, stream-error > [method]output-stream.blocking-write-and-flush: func Perform a write of up to 4096 bytes, and then flush the stream. Block until all of these operations are complete, or an error occurs. This is a convenience wrapper around the use of check-write , subscribe , write , and flush , and is implemented with the following pseudo-code: let pollable = this.subscribe(); while !contents.is_empty() { // Wait for the stream to become writable pollable.block(); let Ok(n) = this.check-write(); // eliding error handling let len = min(n, contents.len()); let (chunk, rest) = contents.split_at(len); this.write(chunk ); // eliding error handling contents = rest; } this.flush(); // Wait for completion of `flush` pollable.block(); // Check for any errors that arose during `flush` let _ = this.check-write(); // eliding error handling Params self : borrow< output-stream > contents : list< u8 > Return values result<_, stream-error > [method]output-stream.flush: func Request to flush buffered output. This function never blocks. This tells the output-stream that the caller intends any buffered output to be flushed. the output which is expected to be flushed is all that has been passed to write prior to this call. Upon calling this function, the output-stream will not accept any writes ( check-write will return ok(0) ) until the flush has completed. The subscribe pollable will become ready when the flush has completed and the stream can accept more writes. Params self : borrow< output-stream > Return values result<_, stream-error > [method]output-stream.blocking-flush: func Request to flush buffered output, and block until flush completes and stream is ready for writing again. Params self : borrow< output-stream > Return values result<_, stream-error > [method]output-stream.subscribe: func Create a pollable which will resolve once the output-stream is ready for more writing, or an error has occurred. When this pollable is ready, check-write will return ok(n) with n>0, or an error. If the stream is closed, this pollable is always ready immediately. The created pollable is a child resource of the output-stream . Implementations may trap if the output-stream is dropped before all derived pollable s created with this function are dropped. Params self : borrow< output-stream > Return values own< pollable > [method]output-stream.write-zeroes: func Write zeroes to a stream. This should be used precisely like write with the exact same preconditions (must use check-write first), but instead of passing a list of bytes, you simply pass the number of zero-bytes that should be written. Params self : borrow< output-stream > len : u64 Return values result<_, stream-error > [method]output-stream.blocking-write-zeroes-and-flush: func Perform a write of up to 4096 zeroes, and then flush the stream. Block until all of these operations are complete, or an error occurs. This is a convenience wrapper around the use of check-write , subscribe , write-zeroes , and flush , and is implemented with the following pseudo-code: let pollable = this.subscribe(); while num_zeroes != 0 { // Wait for the stream to become writable pollable.block(); let Ok(n) = this.check-write(); // eliding error handling let len = min(n, num_zeroes); this.write-zeroes(len); // eliding error handling num_zeroes -= len; } this.flush(); // Wait for completion of `flush` pollable.block(); // Check for any errors that arose during `flush` let _ = this.check-write(); // eliding error handling Params self : borrow< output-stream > len : u64 Return values result<_, stream-error > [method]output-stream.splice: func Read from one stream and write to another. The behavior of splice is equivalent to: calling check-write on the output-stream calling read on the input-stream with the smaller of the check-write permitted length and the len provided to splice calling write on the output-stream with that read data. Any error reported by the call to check-write , read , or write ends the splice and reports that error. This function returns the number of bytes transferred; it may be less than len . Params self : borrow< output-stream > src : borrow< input-stream > len : u64 Return values result< u64 , stream-error > [method]output-stream.blocking-splice: func Read from one stream and write to another, with blocking. This is similar to splice , except that it blocks until the output-stream is ready for writing, and the input-stream is ready for reading, before performing the splice . Params self : borrow< output-stream > src : borrow< input-stream > len : u64 Return values result< u64 , stream-error > Import interface wasi:cli/stdin@0.2.6 Types type input-stream input-stream ---- Functions get-stdin: func Return values own< input-stream > Import interface wasi:cli/stdout@0.2.6 Types type output-stream output-stream ---- Functions get-stdout: func Return values own< output-stream > Import interface wasi:cli/stderr@0.2.6 Types type output-stream output-stream ---- Functions get-stderr: func Return values own< output-stream > Import interface wasi:clocks/monotonic-clock@0.2.6 WASI Monotonic Clock is a clock API intended to let users measure elapsed time. It is intended to be portable at least between Unix-family platforms and Windows. A monotonic clock is a clock which has an unspecified initial value, and successive reads of the clock will produce non-decreasing values. Types type pollable pollable #### `type instant` `u64` An instant in time, in nanoseconds. An instant is relative to an unspecified initial value, and can only be compared to instances from the same monotonic-clock. type duration u64 A duration of time, in nanoseconds. Functions now: func Read the current value of the clock. The clock is monotonic, therefore calling this function repeatedly will produce a sequence of non-decreasing values. Return values instant resolution: func Query the resolution of the clock. Returns the duration of time corresponding to a clock tick. Return values duration subscribe-instant: func Create a pollable which will resolve once the specified instant has occurred. Params when : instant Return values own< pollable > subscribe-duration: func Create a pollable that will resolve after the specified duration has elapsed from the time this function is invoked. Params when : duration Return values own< pollable > Import interface wasi:clocks/wall-clock@0.2.6 WASI Wall Clock is a clock API intended to let users query the current time. The name \"wall\" makes an analogy to a \"clock on the wall\", which is not necessarily monotonic as it may be reset. It is intended to be portable at least between Unix-family platforms and Windows. A wall clock is a clock which measures the date and time according to some external reference. External references may be reset, so this clock is not necessarily monotonic, making it unsuitable for measuring elapsed time. It is intended for reporting the current date and time for humans. Types record datetime A time and date in seconds plus nanoseconds. Record Fields seconds : u64 nanoseconds : u32 Functions now: func Read the current value of the clock. This clock is not monotonic, therefore calling this function repeatedly will not necessarily produce a sequence of non-decreasing values. The returned timestamps represent the number of seconds since 1970-01-01T00:00:00Z, also known as POSIX's Seconds Since the Epoch , also known as Unix Time . The nanoseconds field of the output is always less than 1000000000. Return values datetime resolution: func Query the resolution of the clock. The nanoseconds field of the output is always less than 1000000000. Return values datetime Import interface wasi:filesystem/types@0.2.6 WASI filesystem is a filesystem API primarily intended to let users run WASI programs that access their files on their existing filesystems, without significant overhead. It is intended to be roughly portable between Unix-family platforms and Windows, though it does not hide many of the major differences. Paths are passed as interface-type string s, meaning they must consist of a sequence of Unicode Scalar Values (USVs). Some filesystems may contain paths which are not accessible by this API. The directory separator in WASI is always the forward-slash ( / ). All paths in WASI are relative paths, and are interpreted relative to a descriptor referring to a base directory. If a path argument to any WASI function starts with / , or if any step of resolving a path , including .. and symbolic link steps, reaches a directory outside of the base directory, or reaches a symlink to an absolute or rooted path in the underlying filesystem, the function fails with error-code::not-permitted . For more information about WASI path resolution and sandboxing, see WASI filesystem path resolution . Types type input-stream input-stream #### `type output-stream` [`output-stream`](#output_stream) #### `type error` [`error`](#error) #### `type datetime` [`datetime`](#datetime) #### `type filesize` `u64` File size or length of a region within a file. enum descriptor-type The type of a filesystem object referenced by a descriptor. Note: This was called filetype in earlier versions of WASI. Enum Cases unknown The type of the descriptor or file is unknown or is different from any of the other types specified. block-device The descriptor refers to a block device inode. character-device The descriptor refers to a character device inode. directory The descriptor refers to a directory inode. fifo The descriptor refers to a named pipe. symbolic-link The file refers to a symbolic link inode. regular-file The descriptor refers to a regular file inode. socket The descriptor refers to a socket. flags descriptor-flags Descriptor flags. Note: This was called fdflags in earlier versions of WASI. Flags members read : Read mode: Data can be read. write : Write mode: Data can be written to. file-integrity-sync : Request that writes be performed according to synchronized I/O file integrity completion. The data stored in the file and the file's metadata are synchronized. This is similar to `O_SYNC` in POSIX. The precise semantics of this operation have not yet been defined for WASI. At this time, it should be interpreted as a request, and not a requirement. data-integrity-sync : Request that writes be performed according to synchronized I/O data integrity completion. Only the data stored in the file is synchronized. This is similar to `O_DSYNC` in POSIX. The precise semantics of this operation have not yet been defined for WASI. At this time, it should be interpreted as a request, and not a requirement. requested-write-sync : Requests that reads be performed at the same level of integrity requested for writes. This is similar to `O_RSYNC` in POSIX. The precise semantics of this operation have not yet been defined for WASI. At this time, it should be interpreted as a request, and not a requirement. mutate-directory : Mutating directories mode: Directory contents may be mutated. When this flag is unset on a descriptor, operations using the descriptor which would create, rename, delete, modify the data or metadata of filesystem objects, or obtain another handle which would permit any of those, shall fail with error-code::read-only if they would otherwise succeed. This may only be set on directories. flags path-flags Flags determining the method of how paths are resolved. Flags members symlink-follow : As long as the resolved path corresponds to a symbolic link, it is expanded. flags open-flags Open flags used by open-at . Flags members create : Create file if it does not exist, similar to `O_CREAT` in POSIX. directory : Fail if not a directory, similar to `O_DIRECTORY` in POSIX. exclusive : Fail if file already exists, similar to `O_EXCL` in POSIX. truncate : Truncate file to size 0, similar to `O_TRUNC` in POSIX. type link-count u64 Number of hard links to an inode. record descriptor-stat File attributes. Note: This was called filestat in earlier versions of WASI. Record Fields type : descriptor-type File type. link-count : link-count Number of hard links to the file. size : filesize For regular files, the file size in bytes. For symbolic links, the length in bytes of the pathname contained in the symbolic link. data-access-timestamp : option< datetime > Last data access timestamp. If the option is none, the platform doesn't maintain an access timestamp for this file. data-modification-timestamp : option< datetime > Last data modification timestamp. If the option is none, the platform doesn't maintain a modification timestamp for this file. status-change-timestamp : option< datetime > Last file status-change timestamp. If the option is none, the platform doesn't maintain a status-change timestamp for this file. variant new-timestamp When setting a timestamp, this gives the value to set it to. Variant Cases no-change Leave the timestamp set to its previous value. now Set the timestamp to the current time of the system clock associated with the filesystem. timestamp : datetime Set the timestamp to the given value. record directory-entry A directory entry. Record Fields type : descriptor-type The type of the file referred to by this directory entry. name : string The name of the object. enum error-code Error codes returned by functions, similar to errno in POSIX. Not all of these error codes are returned by the functions provided by this API; some are used in higher-level library layers, and others are provided merely for alignment with POSIX. Enum Cases access Permission denied, similar to `EACCES` in POSIX. would-block Resource unavailable, or operation would block, similar to `EAGAIN` and `EWOULDBLOCK` in POSIX. already Connection already in progress, similar to `EALREADY` in POSIX. bad-descriptor Bad descriptor, similar to `EBADF` in POSIX. busy Device or resource busy, similar to `EBUSY` in POSIX. deadlock Resource deadlock would occur, similar to `EDEADLK` in POSIX. quota Storage quota exceeded, similar to `EDQUOT` in POSIX. exist File exists, similar to `EEXIST` in POSIX. file-too-large File too large, similar to `EFBIG` in POSIX. illegal-byte-sequence Illegal byte sequence, similar to `EILSEQ` in POSIX. in-progress Operation in progress, similar to `EINPROGRESS` in POSIX. interrupted Interrupted function, similar to `EINTR` in POSIX. invalid Invalid argument, similar to `EINVAL` in POSIX. io I/O error, similar to `EIO` in POSIX. is-directory Is a directory, similar to `EISDIR` in POSIX. loop Too many levels of symbolic links, similar to `ELOOP` in POSIX. too-many-links Too many links, similar to `EMLINK` in POSIX. message-size Message too large, similar to `EMSGSIZE` in POSIX. name-too-long Filename too long, similar to `ENAMETOOLONG` in POSIX. no-device No such device, similar to `ENODEV` in POSIX. no-entry No such file or directory, similar to `ENOENT` in POSIX. no-lock No locks available, similar to `ENOLCK` in POSIX. insufficient-memory Not enough space, similar to `ENOMEM` in POSIX. insufficient-space No space left on device, similar to `ENOSPC` in POSIX. not-directory Not a directory or a symbolic link to a directory, similar to `ENOTDIR` in POSIX. not-empty Directory not empty, similar to `ENOTEMPTY` in POSIX. not-recoverable State not recoverable, similar to `ENOTRECOVERABLE` in POSIX. unsupported Not supported, similar to `ENOTSUP` and `ENOSYS` in POSIX. no-tty Inappropriate I/O control operation, similar to `ENOTTY` in POSIX. no-such-device No such device or address, similar to `ENXIO` in POSIX. overflow Value too large to be stored in data type, similar to `EOVERFLOW` in POSIX. not-permitted Operation not permitted, similar to `EPERM` in POSIX. pipe Broken pipe, similar to `EPIPE` in POSIX. read-only Read-only file system, similar to `EROFS` in POSIX. invalid-seek Invalid seek, similar to `ESPIPE` in POSIX. text-file-busy Text file busy, similar to `ETXTBSY` in POSIX. cross-device Cross-device link, similar to `EXDEV` in POSIX. enum advice File or memory access pattern advisory information. Enum Cases normal The application has no advice to give on its behavior with respect to the specified data. sequential The application expects to access the specified data sequentially from lower offsets to higher offsets. random The application expects to access the specified data in a random order. will-need The application expects to access the specified data in the near future. dont-need The application expects that it will not access the specified data in the near future. no-reuse The application expects to access the specified data once and then not reuse it thereafter. record metadata-hash-value A 128-bit hash value, split into parts because wasm doesn't have a 128-bit integer type. Record Fields lower : u64 64 bits of a 128-bit hash value. upper : u64 Another 64 bits of a 128-bit hash value. resource descriptor A descriptor is a reference to a filesystem object, which may be a file, directory, named pipe, special file, or other object on which filesystem calls may be made. resource directory-entry-stream A stream of directory entries. Functions [method]descriptor.read-via-stream: func Return a stream for reading from a file, if available. May fail with an error-code describing why the file cannot be read. Multiple read, write, and append streams may be active on the same open file and they do not interfere with each other. Note: This allows using read-stream , which is similar to read in POSIX. Params self : borrow< descriptor > offset : filesize Return values result<own< input-stream >, error-code > [method]descriptor.write-via-stream: func Return a stream for writing to a file, if available. May fail with an error-code describing why the file cannot be written. Note: This allows using write-stream , which is similar to write in POSIX. Params self : borrow< descriptor > offset : filesize Return values result<own< output-stream >, error-code > [method]descriptor.append-via-stream: func Return a stream for appending to a file, if available. May fail with an error-code describing why the file cannot be appended. Note: This allows using write-stream , which is similar to write with O_APPEND in POSIX. Params self : borrow< descriptor > Return values result<own< output-stream >, error-code > [method]descriptor.advise: func Provide file advisory information on a descriptor. This is similar to posix_fadvise in POSIX. Params self : borrow< descriptor > offset : filesize length : filesize advice : advice Return values result<_, error-code > [method]descriptor.sync-data: func Synchronize the data of a file to disk. This function succeeds with no effect if the file descriptor is not opened for writing. Note: This is similar to fdatasync in POSIX. Params self : borrow< descriptor > Return values result<_, error-code > [method]descriptor.get-flags: func Get flags associated with a descriptor. Note: This returns similar flags to fcntl(fd, F_GETFL) in POSIX. Note: This returns the value that was the fs_flags value returned from fdstat_get in earlier versions of WASI. Params self : borrow< descriptor > Return values result< descriptor-flags , error-code > [method]descriptor.get-type: func Get the dynamic type of a descriptor. Note: This returns the same value as the type field of the fd-stat returned by stat , stat-at and similar. Note: This returns similar flags to the st_mode & S_IFMT value provided by fstat in POSIX. Note: This returns the value that was the fs_filetype value returned from fdstat_get in earlier versions of WASI. Params self : borrow< descriptor > Return values result< descriptor-type , error-code > [method]descriptor.set-size: func Adjust the size of an open file. If this increases the file's size, the extra bytes are filled with zeros. Note: This was called fd_filestat_set_size in earlier versions of WASI. Params self : borrow< descriptor > size : filesize Return values result<_, error-code > [method]descriptor.set-times: func Adjust the timestamps of an open file or directory. Note: This is similar to futimens in POSIX. Note: This was called fd_filestat_set_times in earlier versions of WASI. Params self : borrow< descriptor > data-access-timestamp : new-timestamp data-modification-timestamp : new-timestamp Return values result<_, error-code > [method]descriptor.read: func Read from a descriptor, without using and updating the descriptor's offset. This function returns a list of bytes containing the data that was read, along with a bool which, when true, indicates that the end of the file was reached. The returned list will contain up to length bytes; it may return fewer than requested, if the end of the file is reached or if the I/O operation is interrupted. In the future, this may change to return a stream<u8, error-code> . Note: This is similar to pread in POSIX. Params self : borrow< descriptor > length : filesize offset : filesize Return values result<(list< u8 >, bool ), error-code > [method]descriptor.write: func Write to a descriptor, without using and updating the descriptor's offset. It is valid to write past the end of a file; the file is extended to the extent of the write, with bytes between the previous end and the start of the write set to zero. In the future, this may change to take a stream<u8, error-code> . Note: This is similar to pwrite in POSIX. Params self : borrow< descriptor > buffer : list< u8 > offset : filesize Return values result< filesize , error-code > [method]descriptor.read-directory: func Read directory entries from a directory. On filesystems where directories contain entries referring to themselves and their parents, often named . and .. respectively, these entries are omitted. This always returns a new stream which starts at the beginning of the directory. Multiple streams may be active on the same directory, and they do not interfere with each other. Params self : borrow< descriptor > Return values result<own< directory-entry-stream >, error-code > [method]descriptor.sync: func Synchronize the data and metadata of a file to disk. This function succeeds with no effect if the file descriptor is not opened for writing. Note: This is similar to fsync in POSIX. Params self : borrow< descriptor > Return values result<_, error-code > [method]descriptor.create-directory-at: func Create a directory. Note: This is similar to mkdirat in POSIX. Params self : borrow< descriptor > path : string Return values result<_, error-code > [method]descriptor.stat: func Return the attributes of an open file or directory. Note: This is similar to fstat in POSIX, except that it does not return device and inode information. For testing whether two descriptors refer to the same underlying filesystem object, use is-same-object . To obtain additional data that can be used do determine whether a file has been modified, use metadata-hash . Note: This was called fd_filestat_get in earlier versions of WASI. Params self : borrow< descriptor > Return values result< descriptor-stat , error-code > [method]descriptor.stat-at: func Return the attributes of a file or directory. Note: This is similar to fstatat in POSIX, except that it does not return device and inode information. See the stat description for a discussion of alternatives. Note: This was called path_filestat_get in earlier versions of WASI. Params self : borrow< descriptor > path-flags : path-flags path : string Return values result< descriptor-stat , error-code > [method]descriptor.set-times-at: func Adjust the timestamps of a file or directory. Note: This is similar to utimensat in POSIX. Note: This was called path_filestat_set_times in earlier versions of WASI. Params self : borrow< descriptor > path-flags : path-flags path : string data-access-timestamp : new-timestamp data-modification-timestamp : new-timestamp Return values result<_, error-code > [method]descriptor.link-at: func Create a hard link. Fails with error-code::no-entry if the old path does not exist, with error-code::exist if the new path already exists, and error-code::not-permitted if the old path is not a file. Note: This is similar to linkat in POSIX. Params self : borrow< descriptor > old-path-flags : path-flags old-path : string new-descriptor : borrow< descriptor > new-path : string Return values result<_, error-code > [method]descriptor.open-at: func Open a file or directory. If flags contains descriptor-flags::mutate-directory , and the base descriptor doesn't have descriptor-flags::mutate-directory set, open-at fails with error-code::read-only . If flags contains write or mutate-directory , or open-flags contains truncate or create , and the base descriptor doesn't have descriptor-flags::mutate-directory set, open-at fails with error-code::read-only . Note: This is similar to openat in POSIX. Params self : borrow< descriptor > path-flags : path-flags path : string open-flags : open-flags flags : descriptor-flags Return values result<own< descriptor >, error-code > [method]descriptor.readlink-at: func Read the contents of a symbolic link. If the contents contain an absolute or rooted path in the underlying filesystem, this function fails with error-code::not-permitted . Note: This is similar to readlinkat in POSIX. Params self : borrow< descriptor > path : string Return values result< string , error-code > [method]descriptor.remove-directory-at: func Remove a directory. Return error-code::not-empty if the directory is not empty. Note: This is similar to unlinkat(fd, path, AT_REMOVEDIR) in POSIX. Params self : borrow< descriptor > path : string Return values result<_, error-code > [method]descriptor.rename-at: func Rename a filesystem object. Note: This is similar to renameat in POSIX. Params self : borrow< descriptor > old-path : string new-descriptor : borrow< descriptor > new-path : string Return values result<_, error-code > [method]descriptor.symlink-at: func Create a symbolic link (also known as a \"symlink\"). If old-path starts with / , the function fails with error-code::not-permitted . Note: This is similar to symlinkat in POSIX. Params self : borrow< descriptor > old-path : string new-path : string Return values result<_, error-code > [method]descriptor.unlink-file-at: func Unlink a filesystem object that is not a directory. Return error-code::is-directory if the path refers to a directory. Note: This is similar to unlinkat(fd, path, 0) in POSIX. Params self : borrow< descriptor > path : string Return values result<_, error-code > [method]descriptor.is-same-object: func Test whether two descriptors refer to the same filesystem object. In POSIX, this corresponds to testing whether the two descriptors have the same device ( st_dev ) and inode ( st_ino or d_ino ) numbers. wasi-filesystem does not expose device and inode numbers, so this function may be used instead. Params self : borrow< descriptor > other : borrow< descriptor > Return values bool [method]descriptor.metadata-hash: func Return a hash of the metadata associated with a filesystem object referred to by a descriptor. This returns a hash of the last-modification timestamp and file size, and may also include the inode number, device number, birth timestamp, and other metadata fields that may change when the file is modified or replaced. It may also include a secret value chosen by the implementation and not otherwise exposed. Implementations are encouraged to provide the following properties: If the file is not modified or replaced, the computed hash value should usually not change. If the object is modified or replaced, the computed hash value should usually change. The inputs to the hash should not be easily computable from the computed hash. However, none of these is required. Params self : borrow< descriptor > Return values result< metadata-hash-value , error-code > [method]descriptor.metadata-hash-at: func Return a hash of the metadata associated with a filesystem object referred to by a directory descriptor and a relative path. This performs the same hash computation as metadata-hash . Params self : borrow< descriptor > path-flags : path-flags path : string Return values result< metadata-hash-value , error-code > [method]directory-entry-stream.read-directory-entry: func Read a single directory entry from a directory-entry-stream . Params self : borrow< directory-entry-stream > Return values result<option< directory-entry >, error-code > filesystem-error-code: func Attempts to extract a filesystem-related error-code from the stream error provided. Stream operations which return stream-error::last-operation-failed have a payload with more information about the operation that failed. This payload can be passed through to this function to see if there's filesystem-related information about the error to return. Note that this function is fallible because not all stream-related errors are filesystem-related errors. Params err : borrow< error > Return values option< error-code > Import interface wasi:filesystem/preopens@0.2.6 Types type descriptor descriptor ---- Functions get-directories: func Return the set of preopened directories, and their paths. Return values list<(own< descriptor >, string )> Import interface wasi:random/random@0.2.6 WASI Random is a random data API. It is intended to be portable at least between Unix-family platforms and Windows. Functions get-random-bytes: func Return len cryptographically-secure random or pseudo-random bytes. This function must produce data at least as cryptographically secure and fast as an adequately seeded cryptographically-secure pseudo-random number generator (CSPRNG). It must not block, from the perspective of the calling program, under any circumstances, including on the first request and on requests for numbers of bytes. The returned data must always be unpredictable. This function must always return fresh data. Deterministic environments must omit this function, rather than implementing it with deterministic data. Params len : u64 Return values list< u8 > get-random-u64: func Return a cryptographically-secure random or pseudo-random u64 value. This function returns the same type of data as get-random-bytes , represented as a u64 . Return values u64 Import interface wasi:random/insecure@0.2.6 The insecure interface for insecure pseudo-random numbers. It is intended to be portable at least between Unix-family platforms and Windows. Functions get-insecure-random-bytes: func Return len insecure pseudo-random bytes. This function is not cryptographically secure. Do not use it for anything related to security. There are no requirements on the values of the returned bytes, however implementations are encouraged to return evenly distributed values with a long period. Params len : u64 Return values list< u8 > get-insecure-random-u64: func Return an insecure pseudo-random u64 value. This function returns the same type of pseudo-random data as get-insecure-random-bytes , represented as a u64 . Return values u64 Import interface wasi:random/insecure-seed@0.2.6 The insecure-seed interface for seeding hash-map DoS resistance. It is intended to be portable at least between Unix-family platforms and Windows. Functions insecure-seed: func Return a 128-bit value that may contain a pseudo-random value. The returned value is not required to be computed from a CSPRNG, and may even be entirely deterministic. Host implementations are encouraged to provide pseudo-random values to any program exposed to attacker-controlled content, to enable DoS protection built into many languages' hash-map implementations. This function is intended to only be called once, by a source language to initialize Denial Of Service (DoS) protection in its hash-map implementation. Expected future evolution This will likely be changed to a value import, to prevent it from being called multiple times and potentially used for purposes other than DoS protection. Return values ( u64 , u64 ) Import interface hermes:binary/api Binary Data API Binary Data types and functions. Permissions This API is ALWAYS available. cspell: words Binary API Interface - Imports ONLY Types type bstr bstr Binary String (bstr) is a list of bytes. This type is used to indicate the data is an arbitrary array of bytes. tuple b128 128 bit value Tuple Fields 0 : u64 1 : u64 tuple b256 256 bit value Tuple Fields 0 : u64 1 : u64 2 : u64 3 : u64 tuple b512 512 bit value Tuple Fields 0 : u64 1 : u64 2 : u64 3 : u64 4 : u64 5 : u64 6 : u64 7 : u64 Import interface hermes:hash/api Data Hash API Hashing Data types and functions. Permissions This API is ALWAYS available. Hashing API Interface - Imports ONLY Types type bstr bstr #### `type b256` [`b256`](#b256) #### `type blake2b256` [`b256`](#b256) A 256-bit (32-byte) cryptographic hash value produced by the BLAKE2b hash function. enum errno Errors that can occur during hashing. Enum Cases key-too-big hash-too-big The key exceeds the supported size of the hash function. salt-too-big The hash size requested is larger than supported by the hash function. personal-too-big The salt exceeds the supported size of the hash function. invalid-digest-byte-length The personal exceeds the supported size of the hash function. Functions blake2s: func BLAKE2s Hash Function Hash a binary buffer with BLAKE2s. Parameters buf : The binary data buffer to hash. outlen : Optional. The size of the digest. If the outlen is not defined, it defaults to 32. Returns Either a buffer the size requested, with the hash. Or an error: hash_too_big if outlen is specified and is > 32 bytes. invalid_digest_byte_length if outlen is specified and is = 0. Params buf : bstr outlen : option< u8 > Return values result< bstr , errno > blake2smac: func BLAKE2sMac Hash Function Hash a binary buffer with BLAKE2s with MAC (Message Authentication Code) mode. Parameters buf : The binary data buffer to hash. outlen : Optional. The size of the digest. If the outlen is not defined, it defaults to 32. key : The key to use with the hash. With MAC mode, key is needed to be defined Should not be > 32 bytes. salt : Optional. Salt uses to increase the randomness and uniqueness of the hash output Should not be > 8 bytes. If not defined, salt is not used. personal : Optional. Personal allows to add customization to the hash function behavior. Should not be > 8 bytes. If not defined, personal is not used. Returns Either a buffer the size requested, with the hash. Or an error: key_too_big if key is > 32 bytes. hash_too_big if outlen is specified and is > 32 bytes. salt_too_big if salt is specified and is > 8 bytes. personal_too_big if personal is specified and is > 8 bytes. Note: key length is checked before outlen so if both sizes are invalid, only key_too_big will be returned. If salt length exceeds 8 bytes, salt_too_big will be returned. if personal length exceeds 8 bytes, personal_too_big will be returned. Params buf : bstr outlen : option< u8 > key : bstr salt : option< bstr > personal : option< bstr > Return values result< bstr , errno > blake2b: func BLAKE2b Hash Function Hash a binary buffer with BLAKE2b. Parameters buf : The binary data buffer to hash. outlen : Optional. The size of the digest. If the outlen is not defined, it defaults to 64. Returns Either a buffer the size requested, with the hash. Or an error: hash_too_big if outlen is specified and is > 64 bytes. invalid_digest_byte_length if outlen is specified and is = 0. Params buf : bstr outlen : option< u8 > Return values result< bstr , errno > blake2bmac: func BLAKE2bMac Hash Function Hash a binary buffer with BLAKE2b with MAC (Message Authentication Code) mode. Parameters buf : The binary data buffer to hash. outlen : Optional. The size of the digest. If the outlen is not defined, it defaults to 64. key : The key to use with the hash. With MAC mode, key is needed to be defined Should not be > 64 bytes. salt : Optional. Salt uses to increase the randomness and uniqueness of the hash output Should not be > 16 bytes. If not defined, salt is not used. personal : Optional. Personal allows to add customization to the hash function behavior. Should not be > 16 bytes. If not defined, personal is not used. Returns Either a buffer the size requested, with the hash. Or an error: key_too_big if key is specified and is > 64 bytes. hash_too_big if outlen is specified and is > 64 bytes. salt_too_big if salt is specified and is > 16 bytes. personal_too_big if personal is specified and is > 16 bytes. Note: key length is checked before outlen so if both sizes are invalid, only key_too_big will be returned. If salt length exceeds 16 bytes, salt_too_big will be returned. if personal length exceeds 16 bytes, personal_too_big will be returned. Params buf : bstr outlen : option< u8 > key : bstr salt : option< bstr > personal : option< bstr > Return values result< bstr , errno > blake3: func BLAKE3 Hash Function Hash a binary buffer with BLAKE3. Parameters buf : The binary data buffer to hash. outlen : Optional. The size of the digest. If the outlen is not defined, it defaults to 32. key : Optional. The key to use with the hash. If not defined, the hash is not keyed. Should not be > 32 bytes. Returns Either a buffer the size requested, with the hash. Or an error: key_too_big if key is specified and is > 32 bytes. hash_too_big if outlen is specified and is > 32 bytes. Note: key length is checked before outlen so if both sizes are invalid, only key_too_big will be returned. Params buf : bstr outlen : option< u8 > key : option< bstr > Return values result< bstr , errno > Import interface hermes:cbor/api CBOR API CBOR Data types and functions. Permissions This API is ALWAYS available. cspell: words CBOR API Interface - Imports ONLY Types type bstr bstr #### `type cbor` [`bstr`](#bstr) CBOR is a binary cbor data type. This type is used to indicate the binary array MUST be CBOR data. Import interface hermes:cardano/api Cardano Blockchain API Cardano Blockchain API functionality exposed to the Hermes WASM Modules. Permissions This API is ALWAYS available. Types type blake2b256 blake2b256 #### `type cbor` [`cbor`](#cbor) #### `type slot` `u64` Slot on the Cardano blockchain. type txn-idx u16 Cardano transaction index. type txn-hash blake2b256 Cardano transaction hash. variant cardano-network Cardano blockchain network. Variant Cases mainnet Cardano Mainnet Network :- \"NetworkId\": 1, \"NetworkMagic\": 764824073 preprod Cardano Preprod Network :- \"NetworkId\": 0, \"NetworkMagic\": 1 preview Cardano Preview Network :- \"NetworkId\": 0, \"NetworkMagic\": 2 testnet-magic : u32 Custom Test Network :- \"NetworkId\": 0, \"NetworkMagic\": u32 variant sync-slot A sync slot variation. Variant Cases genesis Genesis (first block) of the blockchain. specific : slot A specific slot in the blockchain. tip The live tip of the blockchain, following the upstream node. immutable-tip The immutable tip of the blockchain e.g., The last block which has reached the absolute finality and can never rolls back. enum subscribe-error Errors that can happen for subscribing to blocks Enum Cases invalid-start-slot The slot requested is not valid. enum create-network-error Errors that can happen when initialize network. Enum Cases network-not-supported Network not supported. enum block-error Errors that can happen for block. Enum Cases block-not-found Block is not found. enum transaction-error Errors that can happen for transaction. Enum Cases txn-not-found Transaction not found resource network Cardano network resource block Cardano block resource transaction Cardano transaction resource subscription-id Functions [static]network.new: func Create a new Cardano network instance. Parameters network : The Cardano network to connect to (e.g., Mainnet, Preprod, Preview). Returns ok(network) : A resource network, if successfully create network resource. error(create-network-error) : If creating network resource failed. Params network : cardano-network Return values result<own< network >, create-network-error > [method]network.subscribe-block: func Subscribe to blockchain block events, start from a specified starting point. This sets up a subscription to receive new block and block rollback updates starting from the given start . Parameters start : The slot to begin following from. Returns ok(u32) : A unsigned integer represent the underlying 32-bit representation of subscription ID resource. this subscription. Use to distinguishes events from different subscribers and provides control over subscription management.The ID must be unique across all active subscriptions. error(subscribe-error) : If subscription failed. Params self : borrow< network > start : sync-slot Return values result< u32 , subscribe-error > [method]network.subscribe-immutable-roll-forward: func Subscribe to blockchain immutable rolls forward. This sets up a subscription to receive event when the immutable part of the blockchain roll forwards. Parameters start : The slot to begin following from. Returns ok(u32) : A unsigned integer represent the underlying 32-bit representation of subscription ID resource. this subscription. Use to distinguishes events from different subscribers and provides control over subscription management.The ID must be unique across all active subscriptions. error(subscribe-error) : If subscription failed. Params self : borrow< network > start : sync-slot Return values result< u32 , subscribe-error > [method]network.get-block: func Get a block relative to start by step . Parameters start : Slot to begin retrieval from, current tip if None . step - 0 : the block at start , will return None if there is no block exactly at this start slot. - +n : the n \u2011th block after the given start slot. \u2013 \u2011n : the n \u2011th block before the given start slot. Note: For both +n and -n , the start does not need to be a true block. They will return the block which appears at this block offset, given the arbitrary start point. IF the start block does exist, it will never returned with a positive or negative step , as it is step 0. Example, Given three consecutive blocks at slots 100 , 200 and 300 the following will be returned: start = 100, step = 0 -> 100 (Exact match) start = 100, step = 2 -> 300 (Skips 200) start = 150, step = 1 -> 200 (Rounds up from 150) start = 200, step = 1 -> 300 (Forward iteration) start = 300, step = -2 -> 100 (Skips 200) start = 250, step = -2 -> 100 (Rounds down to 200 first) Returns Returns a block resource, None if block cannot be retrieved. Params self : borrow< network > start : option< slot > step : s64 Return values option<own< block >> [method]network.get-tips: func Retrieve the current tips of the blockchain. Returns A tuple of two slots: The immutable tip. The mutable tip. None if the tips cannot be retrieved. Params self : borrow< network > Return values option<( slot , slot )> [method]block.is-immutable: func Returns whether the block is part of the immutable section of the chain. Returns true if the block is in the immutable part. false if the block is in the mutable part. Params self : borrow< block > Return values bool [method]block.is-rollback: func Returns whether the block is the first block of a rollback. Returns ok(bool) True if the block is the first block of a rollback, otherwise, False. error(block-error) : If block cannot be retrieved. Params self : borrow< block > Return values result< bool , block-error > [method]block.get-txn: func Retrieves a transaction at the specified index within the block. Parameters index : The index of the transaction to retrieve. Returns ok(transaction) : A transaction resource at the given index error(transaction-error) : If a transaction data does not exist in the block at the given index. Params self : borrow< block > index : txn-idx Return values result<own< transaction >, transaction-error > [method]block.get-slot: func Retrieves the slot number that this block belongs to. Returns slot : The slot number of the block. Params self : borrow< block > Return values slot [method]block.raw: func Returns the raw CBOR representation of the block. Returns cbor : The CBOR format of the block. Params self : borrow< block > Return values cbor [method]block.get-fork: func Fork count is a counter that is incremented every time there is a roll-back in live-chain. It is used to help followers determine how far to roll-back to resynchronize without storing full block history. The fork count starts at 1 for live blocks and increments if the live chain tip is purged due to a detected fork, but it does not track the exact number of forks reported by peers. 0 - for all immutable data 1 - for any data read from the blockchain during a backfill on initial sync 2+ - for each subsequent rollback detected while reading live blocks. Note: This fork terminology is different from fork in blockchain. ** Returns ** u64 : The fork count. Params self : borrow< block > Return values u64 [method]transaction.get-metadata: func Returns the transaction auxiliary metadata in CBOR format. Parameters label : A metadata label used as a key to get the associated metadata. Returns option<cbor> : The CBOR format of the metadata, None if the label requested is not present. Params self : borrow< transaction > label : u64 Return values option< cbor > [method]transaction.get-txn-hash: func Returns the transaction hash. Returns option<txn-hash> : Cardano transaction hash - Blake2b-256, None if cannot retrieve the transaction hash. Params self : borrow< transaction > Return values option< txn-hash > [method]transaction.raw: func Returns the raw CBOR representation of the transaction. Returns option<cbor> : The CBOR format of the transaction, None if cannot retrieve the raw transaction. Params self : borrow< transaction > Return values option< cbor > [method]subscription-id.get-network: func Returns the network that this subscription is in. Returns cardano-network : The Cardano network that this subscription is in. Params self : borrow< subscription-id > Return values cardano-network [method]subscription-id.unsubscribe: func Unsubscribing block event of this subscription-id instance. Once this function is called, the subscription instance, subscription-id will be removed. Params self : borrow< subscription-id > Import interface hermes:cron/api Cron API Allow time based scheduling of events. Permissions This API is ALWAYS available. cspell: words crontabs mkcron retrigger retriggering CRON API Interface - Imports ONLY Types type instant instant #### `type cron-event-tag` `string` A Tag used to mark a delivered cron event. type cron-sched string A cron schedule in crontab format. record cron-tagged A tagged crontab entry It is valid for multiple crontab entries at the same time to have different tags. It is valid for crontab entries at different times to have the same tag. BUT there can only ever be 1 crontab entry at a specified time with a specified tag. ie, when + tag is uniquely identifying of every crontab entry. See: crontab.5 man page for details on cron schedule format. Record Fields when : cron-sched The crontab entry in standard cron format. The Time is ALWAYS relative to UTC and does not account for local time. If Localtime adjustment is required it must be handled by the module. tag : cron-event-tag The tag associated with the crontab entry. variant cron-component A discreet time entry used to help convert numeric times into crontab entries. Variant Cases all Maps to `*` in a cron schedule (ie, match all) at : u8 Match an absolute time/date range : ( u8 , u8 ) Match an inclusive list of time/date values. type cron-time cron-time A list of cron time components Functions add: func Schedule Recurrent CRON event Cron events will be delivered to the on-cron event handler. Parameters entry : The crontab entry to add. when : When the event triggers. Standard crontab format. tag : A tag which will accompany the triggered event. retrigger : true : The event will re-trigger every time the crontab entry matches until cancelled. false : The event will automatically cancel after it is generated once. Returns true : Crontab added successfully. (Or the crontab event already exists) false : Crontab failed to be added. Note: If the crontab entry already exists, the retrigger flag can be changed by calling this function. This could be useful where a retriggering crontab event is desired to be stopped, but ONLY after it has triggered once more. Params entry : cron-tagged retrigger : bool Return values bool delay: func Schedule A Single cron event after a fixed delay. Allows for easy timed wait events to be delivered without requiring datetime calculations or formatting cron entries. Parameters duration : How many nanoseconds to delay. The delay will be AT LEAST this long. tag : A tag which will accompany the triggered event. Returns true : Crontab added successfully. false : Crontab failed to be added. Note: This is a convenience function which will automatically calculate the crontab entry needed to trigger the event after the requested duration . It is added as a non-retriggering event. Listing the crontabs after this call will list the delay in addition to all other crontab entries. Params duration : instant tag : cron-event-tag Return values bool ls: func List currently active cron schedule. Allows for management of scheduled cron events. Parameters tag : Optional, the tag to limit the list to. If none then all crons listed. Returns A list of tuples containing the scheduled crontabs and their tags, along with the current retrigger flag. The list is sorted from most crontab that will trigger soonest to latest. Crontabs are only listed once, in the case where a crontab may be scheduled may times before a later one. 0 - cron-tagged - The Tagged crontab event. 1 - bool - The state of the retrigger flag. Params tag : option< cron-event-tag > Return values list<( cron-tagged , bool )> rm: func Remove the requested crontab. Allows for management of scheduled cron events. Parameters when : The crontab entry to add. Standard crontab format. tag : A tag which will accompany the triggered event. Returns true : The requested crontab was deleted and will not trigger. false : The requested crontab does not exist. Params entry : cron-tagged Return values bool mkcron: func Make a crontab entry from individual time values. Crates the properly formatted cron entry from numeric cron time components. Convenience function to make building cron strings simpler when they are calculated from data. Parameters dow - DayOfWeek (0-7, 0 or 7 = Sunday) month - Month of the year (1-12, 1 = January) day - Day in the month (1-31) hour - Hour in the day (0-23) minute - Minute in the hour (0-59) Returns A matching cron-sched ready for use in the cron functions above. Note: No checking is done to determine if the requested date is valid. If a particular component is out of its allowable range it will be silently clamped within the allowable range of each parameter. Redundant entries will be removed. For example specifying a month as 3 and 2-4 will remove the individual month and only produce the range. Params dow : cron-time month : cron-time day : cron-time hour : cron-time minute : cron-time Return values cron-sched Import interface hermes:crypto/api Crypto API Crypto API functionality exposed to the Hermes WASM Modules. Permissions This API is ALWAYS available. Crypto API Interface Types type bstr bstr #### `type b256` [`b256`](#b256) #### `type b512` [`b512`](#b512) #### `enum errno` Errors that can occurs. Enum Cases prefix-too-long invalid-mnemonic-length The prefix is longer than the maximum allowed length, max is 3. word-not-found The mnemonic length is not a multiple of 3 or not in the range of 12 - 24. invalid-mnemonic A word in the mnemonic is not found in the word list. invalid-derivational-path The mnemonic is invalid. generate-entropy-failed The derivational path is invalid. unsupported-language Failed to generate entropy. type bip32-ed25519-private-key b256 bip32-ed25519 Private Key type bip32-ed25519-extended-private-key b512 bip32-ed25519 Extended Private Key type bip32-ed25519-public-key b256 bip32-ed25519 Public Key type bip32-ed25519-signature b512 bip32-ed25519 Signature type mnemonic-phrase mnemonic-phrase Mnemonic type passphrase passphrase Passphrase type path string Derivation path type prefix prefix #### `resource bip32-ed25519` Functions generate-mnemonic: func Generate BIP39 Mnemonic Function Generate a new BIP39 mnemonic phrase with the given size, prefix and language. Parameters size : The size of the mnemonic. Must be a multiple of 3 and in the range of 12 - 24. prefix : The prefix for the mnemonic. Must be a list of 1 - 3 words. language : Optional. The language to use for the mnemonic. If not provided, the default language is used. Returns Either a list of mnemonic words. Or an error if the mnemonic could not be generated: prefix-too-long : The prefix is longer than the maximum allowed length, max is 3. invalid-mnemonic-length : The mnemonic length is not a multiple of 3 or not in the range of 12 - 24. word-not-found : A word in the mnemonic is not found in the word list. generate-entropy-failed : Failed to generate entropy. Params size : u8 prefix : prefix language : option< string > Return values result< mnemonic-phrase , errno > [constructor]bip32-ed25519: func Create a new BIP32-Ed25519 Crypto resource Parameters mnemonic-phrase : BIP39 mnemonic. passphrase : Optional BIP39 passphrase. Params mnemonic : mnemonic-phrase passphrase : option< passphrase > Return values own< bip32-ed25519 > [method]bip32-ed25519.public-key: func Get the public key for this private key. Params self : borrow< bip32-ed25519 > Return values bip32-ed25519-public-key [method]bip32-ed25519.sign-data: func Sign data with the Private key, and return it. Parameters data : The data to sign. Params self : borrow< bip32-ed25519 > data : bstr Return values bip32-ed25519-signature [method]bip32-ed25519.check-sig: func Check a signature on a set of data. Parameters data : The data to check. sig : The signature to check. Returns true : Signature checked OK. false : Signature check failed. Params self : borrow< bip32-ed25519 > data : bstr sig : bip32-ed25519-signature Return values bool [method]bip32-ed25519.derive: func Derive a new private key from the current private key. Parameters path : Derivation path. Note: uses BIP32 HD key derivation. Params self : borrow< bip32-ed25519 > path : path Return values own< bip32-ed25519 > Import interface hermes:init/api Interface to Hermes runtime control flow. Permissions This API is ONLY Available to Integration Tests and is not normally exposed. Functions done: func Perform Hermes event queue shutdown. Params status-code : u8 Import interface hermes:ipfs/api Interface to local IPFS instance. Types type dht-key dht-key A DHT key. type dht-value dht-value A DHT value. type ipfs-file ipfs-file The binary contents of an IPFS file. type ipfs-path string A path to an IPFS file. type message-data message-data PubSub Message Data type message-id message-id PubSub Message ID type peer-id string The ID of a peer. type pubsub-topic string A PubSub topic. variant ipfs-content This is content that can be validated. Variant Cases dht : ( dht-key , dht-value ) DHT value pubsub : ( pubsub-topic , message-data ) record pubsub-message A PubSub message from a topic subscription. Record Fields topic : pubsub-topic The topic that the message was received on. message : message-data The contents of the message. publisher : option< peer-id > Optional Peer ID that published the message. enum errno Errors that occur in IPFS networking. Enum Cases dht-get-error Unable to get DHT value. dht-put-error Unable to put DHT value. file-add-error Unable to publish file to IPFS. file-get-error Unable to get file from IPFS. file-pin-error Unable to pin file. invalid-cid Invalid CID. invalid-dht-key Invalid DHT key. invalid-dht-value Invalid DHT value. invalid-ipfs-path Unable to parse a valid IPFS path. invalid-peer-id Invalid Peer ID. invalid-pubsub-message Invalid PubSub message. peer-eviction-error Unable to evict peer. pubsub-publish-error Unable to publish to IPFS topic. pubsub-subscribe-error Unable to subscribe to IPFS topic. service-unavailable IPFS service is unavailable. Functions dht-put: func Puts a DHT key-value into IPFS. Params key : dht-key value : dht-value Return values result< bool , errno > dht-get: func Gets a DHT key-value from IPFS. Params key : dht-key Return values result< dht-value , errno > ipfs-content-validate: func Validates IPFS content from DHT or PubSub. Params content : ipfs-content Return values result< bool , errno > file-add: func Uploads a file to IPFS. Params contents : ipfs-file Return values result< ipfs-path , errno > file-get: func Retrieves a file from IPFS. Params path : ipfs-path Return values result< ipfs-file , errno > file-pin: func Pins an IPFS file by path. Params path : ipfs-path Return values result< bool , errno > file-unpin: func Un-pins an IPFS file by path. Params path : ipfs-path Return values result< bool , errno > peer-evict: func Evict peer from network. Params peer : peer-id Return values result< bool , errno > pubsub-publish: func Publish a message to a topic. Params topic : pubsub-topic message : message-data Return values result< message-id , errno > pubsub-subscribe: func Subscribes to a PubSub topic. Params topic : pubsub-topic Return values result< bool , errno > Import interface hermes:json/api JSON API JSON Data types and functions. Permissions This API is ALWAYS available. cspell: words JSON API Interface - Imports ONLY Types type json string JSON is just a string. This type is used to indicate the string MUST be properly formatted JSON. Import interface hermes:kv-store/api Interface to local in-memory K-V database instance. This API is atomic. It is safe to call it from multiple wasm modules in the same application. The atomic nature of these calls allows multiple wasm modules to communicate without data race conditions through the KV store. These are primitive operations, and the caller is expected to provide more complex semaphore/mutex logic on top of these building blocks, if required. There is no support for multi-key atomic operations, the application is required to manage multi-key updates given the functionality provided here. For example, a single Key could be used to \"Lock\" a set of other keys. There is no protection against deadlock, if a key is used as a semaphore/mutex then it is the responsibility of the applications modules to properly manage them. Types type bstr bstr #### `type cbor` [`cbor`](#cbor) #### `type json` [`json`](#json) #### `variant kv-values` A time and date in seconds plus nanoseconds. Variant Cases kv-string : string kv-s64 : s64 A String kv-u64 : u64 Just use the largest signed integer type supported kv-f64 : f64 Just use the largest integer type supported kv-bstr : bstr Just use the largest float type supported kv-cbor : cbor A byte string kv-json : json CBOR data Functions kv-set: func Set a value in the local key-value store Setting None will cause the Key to be deleted from the KV store. Params key : string value : option< kv-values > kv-get-default: func Get a value from the local key-value store Returns the default if not set. Params key : string default : option< kv-values > Return values option< kv-values > kv-get: func Get a value from the local key-value store Returns None if the Key does not exist in the KV Store. This is a convenience function, and is equivalent to kv-get-default(key, none) Params key : string Return values option< kv-values > kv-get-set: func Get a value, and then set it (Atomic) Setting None will cause the Key to be deleted from the KV store. Params key : string value : option< kv-values > Return values option< kv-values > kv-add: func Get a value, and then add to it (Atomic) Adding to a string will concatenate the string. String concatenation will only occur up to the maximum possible size of a string value. Concatenation beyond the maximum size will result in truncation. Adding to a numeric will have the expected behavior (rounded to nearest if necessary). The original type does not change, so: f64 + u64 = f64 . s64 + f64 = s64 If the value overflows or under-flows it will saturate at the limit. This behavior allows us to decrement values by using the signed version, so u64(10) + s64(-5) = u64(5)) If a string is added to a numeric, nothing happens. If a numeric is added to a string, it is converted to a string first, and then concatenated Note: There will be no spaces added. So \"My string\" + u32(77) = \"My string77\" Params key : string value : option< kv-values > Return values option< kv-values > kv-cas: func Check if the Key equals a test value (exact match) and if it does, store the new value. In all cases, the current value is returned. If the types are NOT the same, the comparison will fail, even if the values are equivalent. For example: u64(7) != s64(7) , f64(-1) != s64(-1) . Params key : string test : option< kv-values > value : option< kv-values > Return values option< kv-values > kv-subscribe: func Subscribe to any updates made to a particular Key. After this call, this module will receive Key Update events when a key is written. It returns the current value of the Key and None if it is not set. Params key : string Return values option< kv-values > kv-unsubscribe: func Unsubscribe to any updates made to a particular Key. After this call, this module will no longer receive Key Update events when a key is written. It returns the current value of the Key and None if it is not set. Params key : string Return values option< kv-values > Import interface hermes:localtime/api Localtime API Localtime API functionality exposed to the Hermes WASM Modules. Permissions This API is ALWAYS available. Logging API Interface Types type datetime datetime #### `type timezone` `string` The timezone we are localized for. record localtime Time in localtime format. Record Fields year : u64 month : u8 Year dow : u8 Month (0-11) day : u8 Day of week (0-6) hh : u8 Day (1-31) mm : u8 Hour (0-23) ss : u8 Minute (0-59) ns : u32 Second (0-59) tz : timezone Nanoseconds enum errno Errors that can occur converting times Enum Cases invalid-localtime unknown-timezone year-out-of-range Functions get-localtime: func Get localtime from a datetime or now. Parameters when : The datetime we want to convert (Optional, if not set it will convert now ). tz : The timezone to use. (Optional, if not set uses the local machines configured local timezone.) Returns localtime : the converted time. errno : An error indicating why conversion failed. Params when : option< datetime > tz : option< timezone > Return values result< localtime , errno > alt-localtime: func Get a new localtime from a localtime, by recalculating time for a new timezone. Parameters time : The localtime to convert. tz : The timezone to use. (Optional, if not set uses the local machines configured local timezone.) Returns localtime : the converted time. errno : An error indicating why conversion failed. Params time : localtime tz : option< timezone > Return values result< localtime , errno > get-datetime: func Get a datetime from a localtime. Parameters time : The localtime to convert. Returns datetime : the converted time. errno : An error indicating why conversion failed. Params time : localtime Return values result< datetime , errno > Import interface hermes:logging/api Logging API Logging API functionality exposed to the Hermes WASM Modules. Permissions This API is ALWAYS available. Logging API Interface Types type json json #### `enum level` The supported logging levels Enum Cases debug Debug Log Level trace Tracing Log level info General Informational Log Level warn Warning about something that might be a problem. error A very serious error Functions log: func Generate a Log The Hermes API will add extra information to the log, such as the instance of the webasm module being logged. The Webasm module does not need to concern itself with this kind of information, and should log as if it is the only instance. It also should not log any webasm shared context, except where it is relevant to the log message itself. The log level will be forced to INFO level. Parameters level : The log level this message is for. file : The name of the src file being logged from. (Optional) function : The function within the file being logged from. (Optional) line : The line of code the log was generated from. (Optional) col : The column of code the log was generated from. (Optional) ctx : The logging context. (Should have no newlines or formatting). msg : A Single line message to be logged. (Should have no newlines or formatting). data : A Free form json payload that will be logged with the msg. This must be valid JSON. Notes The data parameter may contain a record of the format: { \"bt\" : [ <string> , <string> ] } The logger will interpret this as a backtrace where each entry in the array is one line of the backtrace. The format of the backtrace lines is up to the webasm module generating the log. The individual backtrace entries may contain line breaks if the backtrace entry is multiline. Multiline backtrace entries should be de-dented, relative to the first line. This is to allow the display to properly format multiline entries. This format is designed to keep the broadest flexibility for multiple languages capabilities. The backtrace must be sorted with most recent lines of the backtrace occurring first in the array. Backtrace must be contained in a single log call. Multiple log calls will be considered independent logs. Params level : level file : option< string > function : option< string > line : option< u32 > col : option< u32 > ctx : option< string > msg : string data : option< json > Import interface hermes:sqlite/api cspell: words errcode SQLite API SQLite API functionality exposed to the Hermes WASM Modules, predominantly relying on sqlite3 . Permissions This API is ALWAYS available. SQLite API Interface Types record error-info Represents an error with a code and a message. Record Fields code : s32 The numeric result code of the error. message : string The error message associated with the error code. variant errno Errors that indicate that something has gone wrong. Variant Cases sqlite : s32 An error caused from internal SQLite engine. converting-c-string An error caused during the conversion of a CString. invalid-in-memory-config The in-memory configuration provided is invalid. invalid-persistent-config The persistent configuration provided is invalid. missing-database-name-for-persistent-config The database name is missing in the persistent configuration. failed-opening-database Failed to open the database. failed-setting-database-size Failed to set the database size limit. unknown-column-type Unknown column type is retrieved. forbidden-pragma-command `PRAGMA` commands are not allowed to execute inside Hermes. returned-null-pointer Unhandled null pointer is returned while interacting with the database. converting-numeric The numeric value is truncated or improperly converted during the execution. variant value The value of a column in a specific data format. Variant Cases blob : list< u8 > A blob or a UTF-8 text in bytes. double : f64 Real number. int32 : s32 32-bit integer. int64 : s64 64-bit integer. null Null value. text : string UTF-8 text. enum step-result The result of advancing a prepared SQLite statement by one step. Enum Cases done Indicates that the statement has finished executing. row Indicates that there is a new row of result. resource sqlite The database connection object. resource statement The prepared statement object. Functions [method]sqlite.close: func Closes a database connection, destructor for sqlite3 . Ideally, applications should finalize all prepared statements associated with the sqlite3 object prior to attempting to close the object. If the database connection is associated with unfinalized prepared statements, then the function will leave the database connection open and return the busy error code. If an sqlite3 object is destroyed while a transaction is open, the transaction is automatically rolled back. Params self : borrow< sqlite > Return values result<_, errno > [method]sqlite.errcode: func Retrieves the numeric result code for the most recent failed SQLite operation on a database connection. Returns The error object containing numeric code and detail message for the most recent failed SQLite operation. If there is no recent failed, none is returned. Params self : borrow< sqlite > Return values option< error-info > [method]sqlite.prepare: func Compiles SQL text into byte-code that will do the work of querying or updating the database. Parameters db : Database handle. sql : SQL statement, UTF-8 encoded. Returns A compiled prepared statement that can be executed using sqlite3_step() . If there is an error or the input text contains no SQL (if the input is an empty string or a comment) then an error code is returned. Params self : borrow< sqlite > sql : string Return values result<own< statement >, errno > [method]sqlite.execute: func Executes an SQL query directly without preparing it into a statement and returns the result. Parameters sql : SQL statement, UTF-8 encoded. Params self : borrow< sqlite > sql : string Return values result<_, errno > [method]statement.bind: func Stores application data into parameters of the original SQL. Parameters index : The index of the SQL parameter to be set. value : The value to bind to the parameter. Params self : borrow< statement > index : u32 value : value Return values result<_, errno > [method]statement.step: func Advances a statement to the next result row or to completion. After a prepared statement has been prepared, this function must be called one or more times to evaluate the statement. Returns A step-result indicating the status of the step. Params self : borrow< statement > Return values result< step-result , errno > [method]statement.column: func Returns information about a single column of the current result row of a query. If the SQL statement does not currently point to a valid row, or if the column index is out of range, the result is undefined. Parameters index : The index of the column for which information should be returned. The leftmost column of the result set has the index 0. Returns The value of a result column in a specific data format. Params self : borrow< statement > index : u32 Return values result< value , errno > [method]statement.reset: func Reset a prepared statement object back to its initial state, ready to be re-executed. This function clears all previous bindings, resets the statement to the beginning, and prepares it for another execution. This must be called before reusing a statement with new parameter bindings. Params self : borrow< statement > Return values result<_, errno > [method]statement.finalize: func Destroys a prepared statement object. If the most recent evaluation of the statement encountered no errors or if the statement is never been evaluated, then the function results without errors. If the most recent evaluation of statement failed, then the function results the appropriate error code. The application must finalize every prepared statement in order to avoid resource leaks. It is a grievous error for the application to try to use a prepared statement after it has been finalized. Any use of a prepared statement after it has been finalized can result in undefined and undesirable behavior such as segfaults and heap corruption. Params self : borrow< statement > Return values result<_, errno > open: func Opens a connection to a new or existing SQLite database. Parameters readonly : If set to true, the database is opened in read-only mode. An error is returned if the database doesn't already exist. memory : If set to true, the database will be opened as an in-memory database. Returns If the database is opened (and/or created) successfully, then the sqlite3 object is returned. Otherwise an error code is returned. Params readonly : bool memory : bool Return values result<own< sqlite >, errno > Import interface hermes:http-request/api Http-request API Http request interface Types enum error-code Error codes. Enum Cases internal Internal error when trying to send the request missing-scheme Either `http://` or `https://` scheme is required http-connection-failed HTTP connection failed https-connection-failed HTTPs connection failed http-send-failed HTTP send failed https-send-failed HTTPs send failed record payload HTTP request payload (caller manages full body formatting) Record Fields host-uri : string Host URI (scheme + domain, no path), e.g., \"http://example.com\" port : u16 Port (e.g., 80 for HTTP, 443 for HTTPS) body : list< u8 > Raw HTTP request (including method, path, headers, and body) request-id : option< u64 > Optional request identifier for tracking Functions send: func Send an HTTP request. Parameters p : The payload of a request to be sent. Returns true if the request was sent successfully, false otherwise. Params p : payload Return values result<_, error-code > Export interface hermes:cardano/event-on-block Types type block block #### `type subscription-id` [`subscription-id`](#subscription_id) #### `type cbor` [`cbor`](#cbor) ---- Functions on-cardano-block: func Trigger when a Cardano block event is fired. Parameters subscription-id : A unique identifier of the block subscription. block : A block resource where information of the block can be retrieve. Params subscription-id : borrow< subscription-id > block : borrow< block > Export interface hermes:cardano/event-on-immutable-roll-forward Types type block block #### `type subscription-id` [`subscription-id`](#subscription_id) ---- Functions on-cardano-immutable-roll-forward: func Trigger when a Cardano immutable roll-forward event is fired. Parameters subscription-id : A unique identifier of the block subscription. block : A block resource where information of the block can be retrieve. Notes Roll-forward events are guaranteed to be fully processed before the next block event is delivered. The block event delivered immediately after a roll-forward will correspond to the block at the roll-forward target slot . This means that roll-forward processing does not need to reset or re-subscribe the blockchain follower. Params subscription-id : borrow< subscription-id > block : borrow< block > Export interface hermes:cron/event Types type cron-event-tag cron-event-tag #### `type cron-tagged` [`cron-tagged`](#cron_tagged) ---- Functions on-cron: func Triggered when a cron event fires. This event is only ever generated for the application that added the cron job. The module must export this interface to use it. Parameters event : The tagged cron event that was triggered. last : This cron event will not retrigger. Returns: true - retrigger. (Ignored if the cron event is final ). false - stop the cron. Params event : cron-tagged last : bool Return values bool Export interface hermes:init/event Functions init: func Perform application start up initialization. This will only ever be called once when the application this module is a part of is started. The module must export this interface to use it. Returns: true - Initialization is successful, the application may commence. false - Fatal error during Initialization. DO NOT START APPLICATION. Return values bool Export interface hermes:ipfs/event Types type pubsub-message pubsub-message ---- Functions on-topic: func Triggers when a message is received on a topic. Params message : pubsub-message Return values bool Export interface hermes:kv-store/event Types type kv-values kv-values ---- Functions kv-update: func A Subscribed key has updated. This will only ever be called if the module has subscribed to updates using kv-subscribe Returns: Nothing. Params key : string value : kv-values Export interface hermes:integration-test/event Types record test-result Time in localtime format. Record Fields name : string status : bool Name of the test Functions test: func Run or List a WASM provided integration test. This is a single entrypoint in a wasm component, which can provide multiple tests. Each test must be numbered from 0-n, with no gaps. test : u32 - The test number to run/list run : bool - True = Run the test, False = Just list the test name. Returns: None - There is no test at that test number. test-result - The result of the test, if the test was not run, just returns the name and status is True. Otherwise the test is executed, and the result is the result of the test run. Params test : u32 run : bool Return values option< test-result > bench: func Run or List a WASM provided benchmark test. This is a single entrypoint in a wasm component, which can provide multiple benchmarks. Each benchmark must be numbered from 0-n, with no gaps. Each time this function is called the bench function is run exactly once. test : u32 - The bench number to run/list run : bool - True = Run the benchmark, False = Just list the test name. Returns: None - There is no test at that test number. test-result - The result of the test, if the test was not run, just returns the name and status is True. Otherwise the test is executed, and the result is the result of the test run. Params test : u32 run : bool Return values option< test-result > Export interface hermes:http-gateway/event Types type bstr bstr #### `tuple header` Tuple Fields 0 : string 1 : list< string > type headers headers #### `record http-response` Record Fields code : u16 headers : headers body : bstr variant http-gateway-response Variant Cases http : http-response internal-redirect : string Functions reply: func Params body : bstr headers : headers path : string method : string Return values option< http-gateway-response > Export interface hermes:http-request/event Functions on-http-response: func Params request-id : option< u64 > response : list< u8 >","title":"Hermes"},{"location":"api/wasi-hermes/hermes/binary/","text":"World all Imports: interface hermes:binary/api Import interface hermes:binary/api Binary Data API Binary Data types and functions. Permissions This API is ALWAYS available. cspell: words Binary API Interface - Imports ONLY Types type bstr bstr Binary String (bstr) is a list of bytes. This type is used to indicate the data is an arbitrary array of bytes. tuple b128 128 bit value Tuple Fields 0 : u64 1 : u64 tuple b256 256 bit value Tuple Fields 0 : u64 1 : u64 2 : u64 3 : u64 tuple b512 512 bit value Tuple Fields 0 : u64 1 : u64 2 : u64 3 : u64 4 : u64 5 : u64 6 : u64 7 : u64","title":"Binary"},{"location":"api/wasi-hermes/hermes/cardano/","text":"World all Imports: interface hermes:binary/api interface hermes:hash/api interface hermes:cbor/api interface hermes:cardano/api Exports: interface hermes:cardano/event-on-block interface hermes:cardano/event-on-immutable-roll-forward Import interface hermes:binary/api Binary Data API Binary Data types and functions. Permissions This API is ALWAYS available. cspell: words Binary API Interface - Imports ONLY Types type bstr bstr Binary String (bstr) is a list of bytes. This type is used to indicate the data is an arbitrary array of bytes. tuple b128 128 bit value Tuple Fields 0 : u64 1 : u64 tuple b256 256 bit value Tuple Fields 0 : u64 1 : u64 2 : u64 3 : u64 tuple b512 512 bit value Tuple Fields 0 : u64 1 : u64 2 : u64 3 : u64 4 : u64 5 : u64 6 : u64 7 : u64 Import interface hermes:hash/api Data Hash API Hashing Data types and functions. Permissions This API is ALWAYS available. Hashing API Interface - Imports ONLY Types type bstr bstr #### `type b256` [`b256`](#b256) #### `type blake2b256` [`b256`](#b256) A 256-bit (32-byte) cryptographic hash value produced by the BLAKE2b hash function. enum errno Errors that can occur during hashing. Enum Cases key-too-big hash-too-big The key exceeds the supported size of the hash function. salt-too-big The hash size requested is larger than supported by the hash function. personal-too-big The salt exceeds the supported size of the hash function. invalid-digest-byte-length The personal exceeds the supported size of the hash function. Functions blake2s: func BLAKE2s Hash Function Hash a binary buffer with BLAKE2s. Parameters buf : The binary data buffer to hash. outlen : Optional. The size of the digest. If the outlen is not defined, it defaults to 32. Returns Either a buffer the size requested, with the hash. Or an error: hash_too_big if outlen is specified and is > 32 bytes. invalid_digest_byte_length if outlen is specified and is = 0. Params buf : bstr outlen : option< u8 > Return values result< bstr , errno > blake2smac: func BLAKE2sMac Hash Function Hash a binary buffer with BLAKE2s with MAC (Message Authentication Code) mode. Parameters buf : The binary data buffer to hash. outlen : Optional. The size of the digest. If the outlen is not defined, it defaults to 32. key : The key to use with the hash. With MAC mode, key is needed to be defined Should not be > 32 bytes. salt : Optional. Salt uses to increase the randomness and uniqueness of the hash output Should not be > 8 bytes. If not defined, salt is not used. personal : Optional. Personal allows to add customization to the hash function behavior. Should not be > 8 bytes. If not defined, personal is not used. Returns Either a buffer the size requested, with the hash. Or an error: key_too_big if key is > 32 bytes. hash_too_big if outlen is specified and is > 32 bytes. salt_too_big if salt is specified and is > 8 bytes. personal_too_big if personal is specified and is > 8 bytes. Note: key length is checked before outlen so if both sizes are invalid, only key_too_big will be returned. If salt length exceeds 8 bytes, salt_too_big will be returned. if personal length exceeds 8 bytes, personal_too_big will be returned. Params buf : bstr outlen : option< u8 > key : bstr salt : option< bstr > personal : option< bstr > Return values result< bstr , errno > blake2b: func BLAKE2b Hash Function Hash a binary buffer with BLAKE2b. Parameters buf : The binary data buffer to hash. outlen : Optional. The size of the digest. If the outlen is not defined, it defaults to 64. Returns Either a buffer the size requested, with the hash. Or an error: hash_too_big if outlen is specified and is > 64 bytes. invalid_digest_byte_length if outlen is specified and is = 0. Params buf : bstr outlen : option< u8 > Return values result< bstr , errno > blake2bmac: func BLAKE2bMac Hash Function Hash a binary buffer with BLAKE2b with MAC (Message Authentication Code) mode. Parameters buf : The binary data buffer to hash. outlen : Optional. The size of the digest. If the outlen is not defined, it defaults to 64. key : The key to use with the hash. With MAC mode, key is needed to be defined Should not be > 64 bytes. salt : Optional. Salt uses to increase the randomness and uniqueness of the hash output Should not be > 16 bytes. If not defined, salt is not used. personal : Optional. Personal allows to add customization to the hash function behavior. Should not be > 16 bytes. If not defined, personal is not used. Returns Either a buffer the size requested, with the hash. Or an error: key_too_big if key is specified and is > 64 bytes. hash_too_big if outlen is specified and is > 64 bytes. salt_too_big if salt is specified and is > 16 bytes. personal_too_big if personal is specified and is > 16 bytes. Note: key length is checked before outlen so if both sizes are invalid, only key_too_big will be returned. If salt length exceeds 16 bytes, salt_too_big will be returned. if personal length exceeds 16 bytes, personal_too_big will be returned. Params buf : bstr outlen : option< u8 > key : bstr salt : option< bstr > personal : option< bstr > Return values result< bstr , errno > blake3: func BLAKE3 Hash Function Hash a binary buffer with BLAKE3. Parameters buf : The binary data buffer to hash. outlen : Optional. The size of the digest. If the outlen is not defined, it defaults to 32. key : Optional. The key to use with the hash. If not defined, the hash is not keyed. Should not be > 32 bytes. Returns Either a buffer the size requested, with the hash. Or an error: key_too_big if key is specified and is > 32 bytes. hash_too_big if outlen is specified and is > 32 bytes. Note: key length is checked before outlen so if both sizes are invalid, only key_too_big will be returned. Params buf : bstr outlen : option< u8 > key : option< bstr > Return values result< bstr , errno > Import interface hermes:cbor/api CBOR API CBOR Data types and functions. Permissions This API is ALWAYS available. cspell: words CBOR API Interface - Imports ONLY Types type bstr bstr #### `type cbor` [`bstr`](#bstr) CBOR is a binary cbor data type. This type is used to indicate the binary array MUST be CBOR data. Import interface hermes:cardano/api Cardano Blockchain API Cardano Blockchain API functionality exposed to the Hermes WASM Modules. Permissions This API is ALWAYS available. Types type blake2b256 blake2b256 #### `type cbor` [`cbor`](#cbor) #### `type slot` `u64` Slot on the Cardano blockchain. type txn-idx u16 Cardano transaction index. type txn-hash blake2b256 Cardano transaction hash. variant cardano-network Cardano blockchain network. Variant Cases mainnet Cardano Mainnet Network :- \"NetworkId\": 1, \"NetworkMagic\": 764824073 preprod Cardano Preprod Network :- \"NetworkId\": 0, \"NetworkMagic\": 1 preview Cardano Preview Network :- \"NetworkId\": 0, \"NetworkMagic\": 2 testnet-magic : u32 Custom Test Network :- \"NetworkId\": 0, \"NetworkMagic\": u32 variant sync-slot A sync slot variation. Variant Cases genesis Genesis (first block) of the blockchain. specific : slot A specific slot in the blockchain. tip The live tip of the blockchain, following the upstream node. immutable-tip The immutable tip of the blockchain e.g., The last block which has reached the absolute finality and can never rolls back. enum subscribe-error Errors that can happen for subscribing to blocks Enum Cases invalid-start-slot The slot requested is not valid. enum create-network-error Errors that can happen when initialize network. Enum Cases network-not-supported Network not supported. enum block-error Errors that can happen for block. Enum Cases block-not-found Block is not found. enum transaction-error Errors that can happen for transaction. Enum Cases txn-not-found Transaction not found resource network Cardano network resource block Cardano block resource transaction Cardano transaction resource subscription-id Functions [static]network.new: func Create a new Cardano network instance. Parameters network : The Cardano network to connect to (e.g., Mainnet, Preprod, Preview). Returns ok(network) : A resource network, if successfully create network resource. error(create-network-error) : If creating network resource failed. Params network : cardano-network Return values result<own< network >, create-network-error > [method]network.subscribe-block: func Subscribe to blockchain block events, start from a specified starting point. This sets up a subscription to receive new block and block rollback updates starting from the given start . Parameters start : The slot to begin following from. Returns ok(u32) : A unsigned integer represent the underlying 32-bit representation of subscription ID resource. this subscription. Use to distinguishes events from different subscribers and provides control over subscription management.The ID must be unique across all active subscriptions. error(subscribe-error) : If subscription failed. Params self : borrow< network > start : sync-slot Return values result< u32 , subscribe-error > [method]network.subscribe-immutable-roll-forward: func Subscribe to blockchain immutable rolls forward. This sets up a subscription to receive event when the immutable part of the blockchain roll forwards. Parameters start : The slot to begin following from. Returns ok(u32) : A unsigned integer represent the underlying 32-bit representation of subscription ID resource. this subscription. Use to distinguishes events from different subscribers and provides control over subscription management.The ID must be unique across all active subscriptions. error(subscribe-error) : If subscription failed. Params self : borrow< network > start : sync-slot Return values result< u32 , subscribe-error > [method]network.get-block: func Get a block relative to start by step . Parameters start : Slot to begin retrieval from, current tip if None . step - 0 : the block at start , will return None if there is no block exactly at this start slot. - +n : the n \u2011th block after the given start slot. \u2013 \u2011n : the n \u2011th block before the given start slot. Note: For both +n and -n , the start does not need to be a true block. They will return the block which appears at this block offset, given the arbitrary start point. IF the start block does exist, it will never returned with a positive or negative step , as it is step 0. Example, Given three consecutive blocks at slots 100 , 200 and 300 the following will be returned: start = 100, step = 0 -> 100 (Exact match) start = 100, step = 2 -> 300 (Skips 200) start = 150, step = 1 -> 200 (Rounds up from 150) start = 200, step = 1 -> 300 (Forward iteration) start = 300, step = -2 -> 100 (Skips 200) start = 250, step = -2 -> 100 (Rounds down to 200 first) Returns Returns a block resource, None if block cannot be retrieved. Params self : borrow< network > start : option< slot > step : s64 Return values option<own< block >> [method]network.get-tips: func Retrieve the current tips of the blockchain. Returns A tuple of two slots: The immutable tip. The mutable tip. None if the tips cannot be retrieved. Params self : borrow< network > Return values option<( slot , slot )> [method]block.is-immutable: func Returns whether the block is part of the immutable section of the chain. Returns true if the block is in the immutable part. false if the block is in the mutable part. Params self : borrow< block > Return values bool [method]block.is-rollback: func Returns whether the block is the first block of a rollback. Returns ok(bool) True if the block is the first block of a rollback, otherwise, False. error(block-error) : If block cannot be retrieved. Params self : borrow< block > Return values result< bool , block-error > [method]block.get-txn: func Retrieves a transaction at the specified index within the block. Parameters index : The index of the transaction to retrieve. Returns ok(transaction) : A transaction resource at the given index error(transaction-error) : If a transaction data does not exist in the block at the given index. Params self : borrow< block > index : txn-idx Return values result<own< transaction >, transaction-error > [method]block.get-slot: func Retrieves the slot number that this block belongs to. Returns slot : The slot number of the block. Params self : borrow< block > Return values slot [method]block.raw: func Returns the raw CBOR representation of the block. Returns cbor : The CBOR format of the block. Params self : borrow< block > Return values cbor [method]block.get-fork: func Fork count is a counter that is incremented every time there is a roll-back in live-chain. It is used to help followers determine how far to roll-back to resynchronize without storing full block history. The fork count starts at 1 for live blocks and increments if the live chain tip is purged due to a detected fork, but it does not track the exact number of forks reported by peers. 0 - for all immutable data 1 - for any data read from the blockchain during a backfill on initial sync 2+ - for each subsequent rollback detected while reading live blocks. Note: This fork terminology is different from fork in blockchain. ** Returns ** u64 : The fork count. Params self : borrow< block > Return values u64 [method]transaction.get-metadata: func Returns the transaction auxiliary metadata in CBOR format. Parameters label : A metadata label used as a key to get the associated metadata. Returns option<cbor> : The CBOR format of the metadata, None if the label requested is not present. Params self : borrow< transaction > label : u64 Return values option< cbor > [method]transaction.get-txn-hash: func Returns the transaction hash. Returns option<txn-hash> : Cardano transaction hash - Blake2b-256, None if cannot retrieve the transaction hash. Params self : borrow< transaction > Return values option< txn-hash > [method]transaction.raw: func Returns the raw CBOR representation of the transaction. Returns option<cbor> : The CBOR format of the transaction, None if cannot retrieve the raw transaction. Params self : borrow< transaction > Return values option< cbor > [method]subscription-id.get-network: func Returns the network that this subscription is in. Returns cardano-network : The Cardano network that this subscription is in. Params self : borrow< subscription-id > Return values cardano-network [method]subscription-id.unsubscribe: func Unsubscribing block event of this subscription-id instance. Once this function is called, the subscription instance, subscription-id will be removed. Params self : borrow< subscription-id > Export interface hermes:cardano/event-on-block Types type block block #### `type subscription-id` [`subscription-id`](#subscription_id) #### `type cbor` [`cbor`](#cbor) ---- Functions on-cardano-block: func Trigger when a Cardano block event is fired. Parameters subscription-id : A unique identifier of the block subscription. block : A block resource where information of the block can be retrieve. Params subscription-id : borrow< subscription-id > block : borrow< block > Export interface hermes:cardano/event-on-immutable-roll-forward Types type block block #### `type subscription-id` [`subscription-id`](#subscription_id) ---- Functions on-cardano-immutable-roll-forward: func Trigger when a Cardano immutable roll-forward event is fired. Parameters subscription-id : A unique identifier of the block subscription. block : A block resource where information of the block can be retrieve. Notes Roll-forward events are guaranteed to be fully processed before the next block event is delivered. The block event delivered immediately after a roll-forward will correspond to the block at the roll-forward target slot . This means that roll-forward processing does not need to reset or re-subscribe the blockchain follower. Params subscription-id : borrow< subscription-id > block : borrow< block >","title":"Cardano"},{"location":"api/wasi-hermes/hermes/cbor/","text":"World all Imports: interface hermes:binary/api interface hermes:cbor/api Import interface hermes:binary/api Binary Data API Binary Data types and functions. Permissions This API is ALWAYS available. cspell: words Binary API Interface - Imports ONLY Types type bstr bstr Binary String (bstr) is a list of bytes. This type is used to indicate the data is an arbitrary array of bytes. tuple b128 128 bit value Tuple Fields 0 : u64 1 : u64 tuple b256 256 bit value Tuple Fields 0 : u64 1 : u64 2 : u64 3 : u64 tuple b512 512 bit value Tuple Fields 0 : u64 1 : u64 2 : u64 3 : u64 4 : u64 5 : u64 6 : u64 7 : u64 Import interface hermes:cbor/api CBOR API CBOR Data types and functions. Permissions This API is ALWAYS available. cspell: words CBOR API Interface - Imports ONLY Types type bstr bstr #### `type cbor` [`bstr`](#bstr) CBOR is a binary cbor data type. This type is used to indicate the binary array MUST be CBOR data.","title":"Cbor"},{"location":"api/wasi-hermes/hermes/cron/","text":"World all Imports: interface wasi:io/poll@0.2.6 interface wasi:clocks/monotonic-clock@0.2.6 interface hermes:cron/api Exports: interface hermes:cron/event Import interface wasi:io/poll@0.2.6 A poll API intended to let users wait for I/O events on multiple handles at once. Types resource pollable pollable represents a single I/O event which may be ready, or not. Functions [method]pollable.ready: func Return the readiness of a pollable. This function never blocks. Returns true when the pollable is ready, and false otherwise. Params self : borrow< pollable > Return values bool [method]pollable.block: func block returns immediately if the pollable is ready, and otherwise blocks until ready. This function is equivalent to calling poll.poll on a list containing only this pollable. Params self : borrow< pollable > poll: func Poll for completion on a set of pollables. This function takes a list of pollables, which identify I/O sources of interest, and waits until one or more of the events is ready for I/O. The result list<u32> contains one or more indices of handles in the argument list that is ready for I/O. This function traps if either: the list is empty, or: the list contains more elements than can be indexed with a u32 value. A timeout can be implemented by adding a pollable from the wasi-clocks API to the list. This function does not return a result ; polling in itself does not do any I/O so it doesn't fail. If any of the I/O sources identified by the pollables has an error, it is indicated by marking the source as being ready for I/O. Params in : list<borrow< pollable >> Return values list< u32 > Import interface wasi:clocks/monotonic-clock@0.2.6 WASI Monotonic Clock is a clock API intended to let users measure elapsed time. It is intended to be portable at least between Unix-family platforms and Windows. A monotonic clock is a clock which has an unspecified initial value, and successive reads of the clock will produce non-decreasing values. Types type pollable pollable #### `type instant` `u64` An instant in time, in nanoseconds. An instant is relative to an unspecified initial value, and can only be compared to instances from the same monotonic-clock. type duration u64 A duration of time, in nanoseconds. Functions now: func Read the current value of the clock. The clock is monotonic, therefore calling this function repeatedly will produce a sequence of non-decreasing values. Return values instant resolution: func Query the resolution of the clock. Returns the duration of time corresponding to a clock tick. Return values duration subscribe-instant: func Create a pollable which will resolve once the specified instant has occurred. Params when : instant Return values own< pollable > subscribe-duration: func Create a pollable that will resolve after the specified duration has elapsed from the time this function is invoked. Params when : duration Return values own< pollable > Import interface hermes:cron/api Cron API Allow time based scheduling of events. Permissions This API is ALWAYS available. cspell: words crontabs mkcron retrigger retriggering CRON API Interface - Imports ONLY Types type instant instant #### `type cron-event-tag` `string` A Tag used to mark a delivered cron event. type cron-sched string A cron schedule in crontab format. record cron-tagged A tagged crontab entry It is valid for multiple crontab entries at the same time to have different tags. It is valid for crontab entries at different times to have the same tag. BUT there can only ever be 1 crontab entry at a specified time with a specified tag. ie, when + tag is uniquely identifying of every crontab entry. See: crontab.5 man page for details on cron schedule format. Record Fields when : cron-sched The crontab entry in standard cron format. The Time is ALWAYS relative to UTC and does not account for local time. If Localtime adjustment is required it must be handled by the module. tag : cron-event-tag The tag associated with the crontab entry. variant cron-component A discreet time entry used to help convert numeric times into crontab entries. Variant Cases all Maps to `*` in a cron schedule (ie, match all) at : u8 Match an absolute time/date range : ( u8 , u8 ) Match an inclusive list of time/date values. type cron-time cron-time A list of cron time components Functions add: func Schedule Recurrent CRON event Cron events will be delivered to the on-cron event handler. Parameters entry : The crontab entry to add. when : When the event triggers. Standard crontab format. tag : A tag which will accompany the triggered event. retrigger : true : The event will re-trigger every time the crontab entry matches until cancelled. false : The event will automatically cancel after it is generated once. Returns true : Crontab added successfully. (Or the crontab event already exists) false : Crontab failed to be added. Note: If the crontab entry already exists, the retrigger flag can be changed by calling this function. This could be useful where a retriggering crontab event is desired to be stopped, but ONLY after it has triggered once more. Params entry : cron-tagged retrigger : bool Return values bool delay: func Schedule A Single cron event after a fixed delay. Allows for easy timed wait events to be delivered without requiring datetime calculations or formatting cron entries. Parameters duration : How many nanoseconds to delay. The delay will be AT LEAST this long. tag : A tag which will accompany the triggered event. Returns true : Crontab added successfully. false : Crontab failed to be added. Note: This is a convenience function which will automatically calculate the crontab entry needed to trigger the event after the requested duration . It is added as a non-retriggering event. Listing the crontabs after this call will list the delay in addition to all other crontab entries. Params duration : instant tag : cron-event-tag Return values bool ls: func List currently active cron schedule. Allows for management of scheduled cron events. Parameters tag : Optional, the tag to limit the list to. If none then all crons listed. Returns A list of tuples containing the scheduled crontabs and their tags, along with the current retrigger flag. The list is sorted from most crontab that will trigger soonest to latest. Crontabs are only listed once, in the case where a crontab may be scheduled may times before a later one. 0 - cron-tagged - The Tagged crontab event. 1 - bool - The state of the retrigger flag. Params tag : option< cron-event-tag > Return values list<( cron-tagged , bool )> rm: func Remove the requested crontab. Allows for management of scheduled cron events. Parameters when : The crontab entry to add. Standard crontab format. tag : A tag which will accompany the triggered event. Returns true : The requested crontab was deleted and will not trigger. false : The requested crontab does not exist. Params entry : cron-tagged Return values bool mkcron: func Make a crontab entry from individual time values. Crates the properly formatted cron entry from numeric cron time components. Convenience function to make building cron strings simpler when they are calculated from data. Parameters dow - DayOfWeek (0-7, 0 or 7 = Sunday) month - Month of the year (1-12, 1 = January) day - Day in the month (1-31) hour - Hour in the day (0-23) minute - Minute in the hour (0-59) Returns A matching cron-sched ready for use in the cron functions above. Note: No checking is done to determine if the requested date is valid. If a particular component is out of its allowable range it will be silently clamped within the allowable range of each parameter. Redundant entries will be removed. For example specifying a month as 3 and 2-4 will remove the individual month and only produce the range. Params dow : cron-time month : cron-time day : cron-time hour : cron-time minute : cron-time Return values cron-sched Export interface hermes:cron/event Types type cron-event-tag cron-event-tag #### `type cron-tagged` [`cron-tagged`](#cron_tagged) ---- Functions on-cron: func Triggered when a cron event fires. This event is only ever generated for the application that added the cron job. The module must export this interface to use it. Parameters event : The tagged cron event that was triggered. last : This cron event will not retrigger. Returns: true - retrigger. (Ignored if the cron event is final ). false - stop the cron. Params event : cron-tagged last : bool Return values bool","title":"Cron"},{"location":"api/wasi-hermes/hermes/crypto/","text":"World all Imports: interface hermes:binary/api interface hermes:crypto/api Import interface hermes:binary/api Binary Data API Binary Data types and functions. Permissions This API is ALWAYS available. cspell: words Binary API Interface - Imports ONLY Types type bstr bstr Binary String (bstr) is a list of bytes. This type is used to indicate the data is an arbitrary array of bytes. tuple b128 128 bit value Tuple Fields 0 : u64 1 : u64 tuple b256 256 bit value Tuple Fields 0 : u64 1 : u64 2 : u64 3 : u64 tuple b512 512 bit value Tuple Fields 0 : u64 1 : u64 2 : u64 3 : u64 4 : u64 5 : u64 6 : u64 7 : u64 Import interface hermes:crypto/api Crypto API Crypto API functionality exposed to the Hermes WASM Modules. Permissions This API is ALWAYS available. Crypto API Interface Types type bstr bstr #### `type b256` [`b256`](#b256) #### `type b512` [`b512`](#b512) #### `enum errno` Errors that can occurs. Enum Cases prefix-too-long invalid-mnemonic-length The prefix is longer than the maximum allowed length, max is 3. word-not-found The mnemonic length is not a multiple of 3 or not in the range of 12 - 24. invalid-mnemonic A word in the mnemonic is not found in the word list. invalid-derivational-path The mnemonic is invalid. generate-entropy-failed The derivational path is invalid. unsupported-language Failed to generate entropy. type bip32-ed25519-private-key b256 bip32-ed25519 Private Key type bip32-ed25519-extended-private-key b512 bip32-ed25519 Extended Private Key type bip32-ed25519-public-key b256 bip32-ed25519 Public Key type bip32-ed25519-signature b512 bip32-ed25519 Signature type mnemonic-phrase mnemonic-phrase Mnemonic type passphrase passphrase Passphrase type path string Derivation path type prefix prefix #### `resource bip32-ed25519` Functions generate-mnemonic: func Generate BIP39 Mnemonic Function Generate a new BIP39 mnemonic phrase with the given size, prefix and language. Parameters size : The size of the mnemonic. Must be a multiple of 3 and in the range of 12 - 24. prefix : The prefix for the mnemonic. Must be a list of 1 - 3 words. language : Optional. The language to use for the mnemonic. If not provided, the default language is used. Returns Either a list of mnemonic words. Or an error if the mnemonic could not be generated: prefix-too-long : The prefix is longer than the maximum allowed length, max is 3. invalid-mnemonic-length : The mnemonic length is not a multiple of 3 or not in the range of 12 - 24. word-not-found : A word in the mnemonic is not found in the word list. generate-entropy-failed : Failed to generate entropy. Params size : u8 prefix : prefix language : option< string > Return values result< mnemonic-phrase , errno > [constructor]bip32-ed25519: func Create a new BIP32-Ed25519 Crypto resource Parameters mnemonic-phrase : BIP39 mnemonic. passphrase : Optional BIP39 passphrase. Params mnemonic : mnemonic-phrase passphrase : option< passphrase > Return values own< bip32-ed25519 > [method]bip32-ed25519.public-key: func Get the public key for this private key. Params self : borrow< bip32-ed25519 > Return values bip32-ed25519-public-key [method]bip32-ed25519.sign-data: func Sign data with the Private key, and return it. Parameters data : The data to sign. Params self : borrow< bip32-ed25519 > data : bstr Return values bip32-ed25519-signature [method]bip32-ed25519.check-sig: func Check a signature on a set of data. Parameters data : The data to check. sig : The signature to check. Returns true : Signature checked OK. false : Signature check failed. Params self : borrow< bip32-ed25519 > data : bstr sig : bip32-ed25519-signature Return values bool [method]bip32-ed25519.derive: func Derive a new private key from the current private key. Parameters path : Derivation path. Note: uses BIP32 HD key derivation. Params self : borrow< bip32-ed25519 > path : path Return values own< bip32-ed25519 >","title":"Crypto"},{"location":"api/wasi-hermes/hermes/hash/","text":"World all Imports: interface hermes:binary/api interface hermes:hash/api Import interface hermes:binary/api Binary Data API Binary Data types and functions. Permissions This API is ALWAYS available. cspell: words Binary API Interface - Imports ONLY Types type bstr bstr Binary String (bstr) is a list of bytes. This type is used to indicate the data is an arbitrary array of bytes. tuple b128 128 bit value Tuple Fields 0 : u64 1 : u64 tuple b256 256 bit value Tuple Fields 0 : u64 1 : u64 2 : u64 3 : u64 tuple b512 512 bit value Tuple Fields 0 : u64 1 : u64 2 : u64 3 : u64 4 : u64 5 : u64 6 : u64 7 : u64 Import interface hermes:hash/api Data Hash API Hashing Data types and functions. Permissions This API is ALWAYS available. Hashing API Interface - Imports ONLY Types type bstr bstr #### `type b256` [`b256`](#b256) #### `type blake2b256` [`b256`](#b256) A 256-bit (32-byte) cryptographic hash value produced by the BLAKE2b hash function. enum errno Errors that can occur during hashing. Enum Cases key-too-big hash-too-big The key exceeds the supported size of the hash function. salt-too-big The hash size requested is larger than supported by the hash function. personal-too-big The salt exceeds the supported size of the hash function. invalid-digest-byte-length The personal exceeds the supported size of the hash function. Functions blake2s: func BLAKE2s Hash Function Hash a binary buffer with BLAKE2s. Parameters buf : The binary data buffer to hash. outlen : Optional. The size of the digest. If the outlen is not defined, it defaults to 32. Returns Either a buffer the size requested, with the hash. Or an error: hash_too_big if outlen is specified and is > 32 bytes. invalid_digest_byte_length if outlen is specified and is = 0. Params buf : bstr outlen : option< u8 > Return values result< bstr , errno > blake2smac: func BLAKE2sMac Hash Function Hash a binary buffer with BLAKE2s with MAC (Message Authentication Code) mode. Parameters buf : The binary data buffer to hash. outlen : Optional. The size of the digest. If the outlen is not defined, it defaults to 32. key : The key to use with the hash. With MAC mode, key is needed to be defined Should not be > 32 bytes. salt : Optional. Salt uses to increase the randomness and uniqueness of the hash output Should not be > 8 bytes. If not defined, salt is not used. personal : Optional. Personal allows to add customization to the hash function behavior. Should not be > 8 bytes. If not defined, personal is not used. Returns Either a buffer the size requested, with the hash. Or an error: key_too_big if key is > 32 bytes. hash_too_big if outlen is specified and is > 32 bytes. salt_too_big if salt is specified and is > 8 bytes. personal_too_big if personal is specified and is > 8 bytes. Note: key length is checked before outlen so if both sizes are invalid, only key_too_big will be returned. If salt length exceeds 8 bytes, salt_too_big will be returned. if personal length exceeds 8 bytes, personal_too_big will be returned. Params buf : bstr outlen : option< u8 > key : bstr salt : option< bstr > personal : option< bstr > Return values result< bstr , errno > blake2b: func BLAKE2b Hash Function Hash a binary buffer with BLAKE2b. Parameters buf : The binary data buffer to hash. outlen : Optional. The size of the digest. If the outlen is not defined, it defaults to 64. Returns Either a buffer the size requested, with the hash. Or an error: hash_too_big if outlen is specified and is > 64 bytes. invalid_digest_byte_length if outlen is specified and is = 0. Params buf : bstr outlen : option< u8 > Return values result< bstr , errno > blake2bmac: func BLAKE2bMac Hash Function Hash a binary buffer with BLAKE2b with MAC (Message Authentication Code) mode. Parameters buf : The binary data buffer to hash. outlen : Optional. The size of the digest. If the outlen is not defined, it defaults to 64. key : The key to use with the hash. With MAC mode, key is needed to be defined Should not be > 64 bytes. salt : Optional. Salt uses to increase the randomness and uniqueness of the hash output Should not be > 16 bytes. If not defined, salt is not used. personal : Optional. Personal allows to add customization to the hash function behavior. Should not be > 16 bytes. If not defined, personal is not used. Returns Either a buffer the size requested, with the hash. Or an error: key_too_big if key is specified and is > 64 bytes. hash_too_big if outlen is specified and is > 64 bytes. salt_too_big if salt is specified and is > 16 bytes. personal_too_big if personal is specified and is > 16 bytes. Note: key length is checked before outlen so if both sizes are invalid, only key_too_big will be returned. If salt length exceeds 16 bytes, salt_too_big will be returned. if personal length exceeds 16 bytes, personal_too_big will be returned. Params buf : bstr outlen : option< u8 > key : bstr salt : option< bstr > personal : option< bstr > Return values result< bstr , errno > blake3: func BLAKE3 Hash Function Hash a binary buffer with BLAKE3. Parameters buf : The binary data buffer to hash. outlen : Optional. The size of the digest. If the outlen is not defined, it defaults to 32. key : Optional. The key to use with the hash. If not defined, the hash is not keyed. Should not be > 32 bytes. Returns Either a buffer the size requested, with the hash. Or an error: key_too_big if key is specified and is > 32 bytes. hash_too_big if outlen is specified and is > 32 bytes. Note: key length is checked before outlen so if both sizes are invalid, only key_too_big will be returned. Params buf : bstr outlen : option< u8 > key : option< bstr > Return values result< bstr , errno >","title":"Hash"},{"location":"api/wasi-hermes/hermes/init/","text":"World all Imports: interface hermes:init/api Exports: interface hermes:init/event Import interface hermes:init/api Interface to Hermes runtime control flow. Permissions This API is ONLY Available to Integration Tests and is not normally exposed. Functions done: func Perform Hermes event queue shutdown. Params status-code : u8 Export interface hermes:init/event Functions init: func Perform application start up initialization. This will only ever be called once when the application this module is a part of is started. The module must export this interface to use it. Returns: true - Initialization is successful, the application may commence. false - Fatal error during Initialization. DO NOT START APPLICATION. Return values bool","title":"Init"},{"location":"api/wasi-hermes/hermes/json/","text":"World all Imports: interface hermes:json/api Import interface hermes:json/api JSON API JSON Data types and functions. Permissions This API is ALWAYS available. cspell: words JSON API Interface - Imports ONLY Types type json string JSON is just a string. This type is used to indicate the string MUST be properly formatted JSON.","title":"Json"},{"location":"api/wasi-hermes/hermes/kv-store/","text":"World all Imports: interface hermes:binary/api interface hermes:cbor/api interface hermes:json/api interface hermes:kv-store/api Exports: interface hermes:kv-store/event Import interface hermes:binary/api Binary Data API Binary Data types and functions. Permissions This API is ALWAYS available. cspell: words Binary API Interface - Imports ONLY Types type bstr bstr Binary String (bstr) is a list of bytes. This type is used to indicate the data is an arbitrary array of bytes. tuple b128 128 bit value Tuple Fields 0 : u64 1 : u64 tuple b256 256 bit value Tuple Fields 0 : u64 1 : u64 2 : u64 3 : u64 tuple b512 512 bit value Tuple Fields 0 : u64 1 : u64 2 : u64 3 : u64 4 : u64 5 : u64 6 : u64 7 : u64 Import interface hermes:cbor/api CBOR API CBOR Data types and functions. Permissions This API is ALWAYS available. cspell: words CBOR API Interface - Imports ONLY Types type bstr bstr #### `type cbor` [`bstr`](#bstr) CBOR is a binary cbor data type. This type is used to indicate the binary array MUST be CBOR data. Import interface hermes:json/api JSON API JSON Data types and functions. Permissions This API is ALWAYS available. cspell: words JSON API Interface - Imports ONLY Types type json string JSON is just a string. This type is used to indicate the string MUST be properly formatted JSON. Import interface hermes:kv-store/api Interface to local in-memory K-V database instance. This API is atomic. It is safe to call it from multiple wasm modules in the same application. The atomic nature of these calls allows multiple wasm modules to communicate without data race conditions through the KV store. These are primitive operations, and the caller is expected to provide more complex semaphore/mutex logic on top of these building blocks, if required. There is no support for multi-key atomic operations, the application is required to manage multi-key updates given the functionality provided here. For example, a single Key could be used to \"Lock\" a set of other keys. There is no protection against deadlock, if a key is used as a semaphore/mutex then it is the responsibility of the applications modules to properly manage them. Types type bstr bstr #### `type cbor` [`cbor`](#cbor) #### `type json` [`json`](#json) #### `variant kv-values` A time and date in seconds plus nanoseconds. Variant Cases kv-string : string kv-s64 : s64 A String kv-u64 : u64 Just use the largest signed integer type supported kv-f64 : f64 Just use the largest integer type supported kv-bstr : bstr Just use the largest float type supported kv-cbor : cbor A byte string kv-json : json CBOR data Functions kv-set: func Set a value in the local key-value store Setting None will cause the Key to be deleted from the KV store. Params key : string value : option< kv-values > kv-get-default: func Get a value from the local key-value store Returns the default if not set. Params key : string default : option< kv-values > Return values option< kv-values > kv-get: func Get a value from the local key-value store Returns None if the Key does not exist in the KV Store. This is a convenience function, and is equivalent to kv-get-default(key, none) Params key : string Return values option< kv-values > kv-get-set: func Get a value, and then set it (Atomic) Setting None will cause the Key to be deleted from the KV store. Params key : string value : option< kv-values > Return values option< kv-values > kv-add: func Get a value, and then add to it (Atomic) Adding to a string will concatenate the string. String concatenation will only occur up to the maximum possible size of a string value. Concatenation beyond the maximum size will result in truncation. Adding to a numeric will have the expected behavior (rounded to nearest if necessary). The original type does not change, so: f64 + u64 = f64 . s64 + f64 = s64 If the value overflows or under-flows it will saturate at the limit. This behavior allows us to decrement values by using the signed version, so u64(10) + s64(-5) = u64(5)) If a string is added to a numeric, nothing happens. If a numeric is added to a string, it is converted to a string first, and then concatenated Note: There will be no spaces added. So \"My string\" + u32(77) = \"My string77\" Params key : string value : option< kv-values > Return values option< kv-values > kv-cas: func Check if the Key equals a test value (exact match) and if it does, store the new value. In all cases, the current value is returned. If the types are NOT the same, the comparison will fail, even if the values are equivalent. For example: u64(7) != s64(7) , f64(-1) != s64(-1) . Params key : string test : option< kv-values > value : option< kv-values > Return values option< kv-values > kv-subscribe: func Subscribe to any updates made to a particular Key. After this call, this module will receive Key Update events when a key is written. It returns the current value of the Key and None if it is not set. Params key : string Return values option< kv-values > kv-unsubscribe: func Unsubscribe to any updates made to a particular Key. After this call, this module will no longer receive Key Update events when a key is written. It returns the current value of the Key and None if it is not set. Params key : string Return values option< kv-values > Export interface hermes:kv-store/event Types type kv-values kv-values ---- Functions kv-update: func A Subscribed key has updated. This will only ever be called if the module has subscribed to updates using kv-subscribe Returns: Nothing. Params key : string value : kv-values","title":"Kv store"},{"location":"api/wasi-hermes/hermes/localtime/","text":"World all API localtime struct timezone string dd(u8 1-31) mm(u8 1-12) yy (s16 -32677 - +32767) hh(u8 0-11) mm(u8 0-59) ss(u8 0-59) Get localized time (optional secs since 1970 UTC time) (optional timezone string) localtime to UTC time Imports: interface wasi:clocks/wall-clock@0.2.6 interface hermes:localtime/api Import interface wasi:clocks/wall-clock@0.2.6 WASI Wall Clock is a clock API intended to let users query the current time. The name \"wall\" makes an analogy to a \"clock on the wall\", which is not necessarily monotonic as it may be reset. It is intended to be portable at least between Unix-family platforms and Windows. A wall clock is a clock which measures the date and time according to some external reference. External references may be reset, so this clock is not necessarily monotonic, making it unsuitable for measuring elapsed time. It is intended for reporting the current date and time for humans. Types record datetime A time and date in seconds plus nanoseconds. Record Fields seconds : u64 nanoseconds : u32 Functions now: func Read the current value of the clock. This clock is not monotonic, therefore calling this function repeatedly will not necessarily produce a sequence of non-decreasing values. The returned timestamps represent the number of seconds since 1970-01-01T00:00:00Z, also known as POSIX's Seconds Since the Epoch , also known as Unix Time . The nanoseconds field of the output is always less than 1000000000. Return values datetime resolution: func Query the resolution of the clock. The nanoseconds field of the output is always less than 1000000000. Return values datetime Import interface hermes:localtime/api Localtime API Localtime API functionality exposed to the Hermes WASM Modules. Permissions This API is ALWAYS available. Logging API Interface Types type datetime datetime #### `type timezone` `string` The timezone we are localized for. record localtime Time in localtime format. Record Fields year : u64 month : u8 Year dow : u8 Month (0-11) day : u8 Day of week (0-6) hh : u8 Day (1-31) mm : u8 Hour (0-23) ss : u8 Minute (0-59) ns : u32 Second (0-59) tz : timezone Nanoseconds enum errno Errors that can occur converting times Enum Cases invalid-localtime unknown-timezone year-out-of-range Functions get-localtime: func Get localtime from a datetime or now. Parameters when : The datetime we want to convert (Optional, if not set it will convert now ). tz : The timezone to use. (Optional, if not set uses the local machines configured local timezone.) Returns localtime : the converted time. errno : An error indicating why conversion failed. Params when : option< datetime > tz : option< timezone > Return values result< localtime , errno > alt-localtime: func Get a new localtime from a localtime, by recalculating time for a new timezone. Parameters time : The localtime to convert. tz : The timezone to use. (Optional, if not set uses the local machines configured local timezone.) Returns localtime : the converted time. errno : An error indicating why conversion failed. Params time : localtime tz : option< timezone > Return values result< localtime , errno > get-datetime: func Get a datetime from a localtime. Parameters time : The localtime to convert. Returns datetime : the converted time. errno : An error indicating why conversion failed. Params time : localtime Return values result< datetime , errno >","title":"Localtime"},{"location":"api/wasi-hermes/hermes/logging/","text":"World all Imports: interface hermes:json/api interface hermes:logging/api Import interface hermes:json/api JSON API JSON Data types and functions. Permissions This API is ALWAYS available. cspell: words JSON API Interface - Imports ONLY Types type json string JSON is just a string. This type is used to indicate the string MUST be properly formatted JSON. Import interface hermes:logging/api Logging API Logging API functionality exposed to the Hermes WASM Modules. Permissions This API is ALWAYS available. Logging API Interface Types type json json #### `enum level` The supported logging levels Enum Cases debug Debug Log Level trace Tracing Log level info General Informational Log Level warn Warning about something that might be a problem. error A very serious error Functions log: func Generate a Log The Hermes API will add extra information to the log, such as the instance of the webasm module being logged. The Webasm module does not need to concern itself with this kind of information, and should log as if it is the only instance. It also should not log any webasm shared context, except where it is relevant to the log message itself. The log level will be forced to INFO level. Parameters level : The log level this message is for. file : The name of the src file being logged from. (Optional) function : The function within the file being logged from. (Optional) line : The line of code the log was generated from. (Optional) col : The column of code the log was generated from. (Optional) ctx : The logging context. (Should have no newlines or formatting). msg : A Single line message to be logged. (Should have no newlines or formatting). data : A Free form json payload that will be logged with the msg. This must be valid JSON. Notes The data parameter may contain a record of the format: { \"bt\" : [ <string> , <string> ] } The logger will interpret this as a backtrace where each entry in the array is one line of the backtrace. The format of the backtrace lines is up to the webasm module generating the log. The individual backtrace entries may contain line breaks if the backtrace entry is multiline. Multiline backtrace entries should be de-dented, relative to the first line. This is to allow the display to properly format multiline entries. This format is designed to keep the broadest flexibility for multiple languages capabilities. The backtrace must be sorted with most recent lines of the backtrace occurring first in the array. Backtrace must be contained in a single log call. Multiple log calls will be considered independent logs. Params level : level file : option< string > function : option< string > line : option< u32 > col : option< u32 > ctx : option< string > msg : string data : option< json >","title":"Logging"},{"location":"api/wasi-hermes/wasi/cli/","text":"World imports Imports: interface wasi:cli/environment@0.2.6 interface wasi:cli/exit@0.2.6 interface wasi:io/error@0.2.6 interface wasi:io/poll@0.2.6 interface wasi:io/streams@0.2.6 interface wasi:cli/stdin@0.2.6 interface wasi:cli/stdout@0.2.6 interface wasi:cli/stderr@0.2.6 interface wasi:cli/terminal-input@0.2.6 interface wasi:cli/terminal-output@0.2.6 interface wasi:cli/terminal-stdin@0.2.6 interface wasi:cli/terminal-stdout@0.2.6 interface wasi:cli/terminal-stderr@0.2.6 interface wasi:clocks/monotonic-clock@0.2.6 interface wasi:clocks/wall-clock@0.2.6 interface wasi:filesystem/types@0.2.6 interface wasi:filesystem/preopens@0.2.6 interface wasi:sockets/network@0.2.6 interface wasi:sockets/instance-network@0.2.6 interface wasi:sockets/udp@0.2.6 interface wasi:sockets/udp-create-socket@0.2.6 interface wasi:sockets/tcp@0.2.6 interface wasi:sockets/tcp-create-socket@0.2.6 interface wasi:sockets/ip-name-lookup@0.2.6 interface wasi:random/random@0.2.6 interface wasi:random/insecure@0.2.6 interface wasi:random/insecure-seed@0.2.6 Import interface wasi:cli/environment@0.2.6 Functions get-environment: func Get the POSIX-style environment variables. Each environment variable is provided as a pair of string variable names and string value. Morally, these are a value import, but until value imports are available in the component model, this import function should return the same values each time it is called. Return values list<( string , string )> get-arguments: func Get the POSIX-style arguments to the program. Return values list< string > initial-cwd: func Return a path that programs should use as their initial current working directory, interpreting . as shorthand for this. Return values option< string > Import interface wasi:cli/exit@0.2.6 Functions exit: func Exit the current instance and any linked instances. Params status : result Import interface wasi:io/error@0.2.6 Types resource error A resource which represents some error information. The only method provided by this resource is to-debug-string , which provides some human-readable information about the error. In the wasi:io package, this resource is returned through the wasi:io/streams/stream-error type. To provide more specific error information, other interfaces may offer functions to \"downcast\" this error into more specific types. For example, errors returned from streams derived from filesystem types can be described using the filesystem's own error-code type. This is done using the function wasi:filesystem/types/filesystem-error-code , which takes a borrow<error> parameter and returns an option<wasi:filesystem/types/error-code> . The set of functions which can \"downcast\" an error into a more concrete type is open. Functions [method]error.to-debug-string: func Returns a string that is suitable to assist humans in debugging this error. WARNING: The returned string should not be consumed mechanically! It may change across platforms, hosts, or other implementation details. Parsing this string is a major platform-compatibility hazard. Params self : borrow< error > Return values string Import interface wasi:io/poll@0.2.6 A poll API intended to let users wait for I/O events on multiple handles at once. Types resource pollable pollable represents a single I/O event which may be ready, or not. Functions [method]pollable.ready: func Return the readiness of a pollable. This function never blocks. Returns true when the pollable is ready, and false otherwise. Params self : borrow< pollable > Return values bool [method]pollable.block: func block returns immediately if the pollable is ready, and otherwise blocks until ready. This function is equivalent to calling poll.poll on a list containing only this pollable. Params self : borrow< pollable > poll: func Poll for completion on a set of pollables. This function takes a list of pollables, which identify I/O sources of interest, and waits until one or more of the events is ready for I/O. The result list<u32> contains one or more indices of handles in the argument list that is ready for I/O. This function traps if either: the list is empty, or: the list contains more elements than can be indexed with a u32 value. A timeout can be implemented by adding a pollable from the wasi-clocks API to the list. This function does not return a result ; polling in itself does not do any I/O so it doesn't fail. If any of the I/O sources identified by the pollables has an error, it is indicated by marking the source as being ready for I/O. Params in : list<borrow< pollable >> Return values list< u32 > Import interface wasi:io/streams@0.2.6 WASI I/O is an I/O abstraction API which is currently focused on providing stream types. In the future, the component model is expected to add built-in stream types; when it does, they are expected to subsume this API. Types type error error #### `type pollable` [`pollable`](#pollable) #### `variant stream-error` An error for input-stream and output-stream operations. Variant Cases last-operation-failed : own< error > The last operation (a write or flush) failed before completion. More information is available in the error payload. After this, the stream will be closed. All future operations return stream-error::closed . closed The stream is closed: no more input will be accepted by the stream. A closed output-stream will return this error on all future operations. resource input-stream An input bytestream. input-stream s are non-blocking to the extent practical on underlying platforms. I/O operations always return promptly; if fewer bytes are promptly available than requested, they return the number of bytes promptly available, which could even be zero. To wait for data to be available, use the subscribe function to obtain a pollable which can be polled for using wasi:io/poll . resource output-stream An output bytestream. output-stream s are non-blocking to the extent practical on underlying platforms. Except where specified otherwise, I/O operations also always return promptly, after the number of bytes that can be written promptly, which could even be zero. To wait for the stream to be ready to accept data, the subscribe function to obtain a pollable which can be polled for using wasi:io/poll . Dropping an output-stream while there's still an active write in progress may result in the data being lost. Before dropping the stream, be sure to fully flush your writes. Functions [method]input-stream.read: func Perform a non-blocking read from the stream. When the source of a read is binary data, the bytes from the source are returned verbatim. When the source of a read is known to the implementation to be text, bytes containing the UTF-8 encoding of the text are returned. This function returns a list of bytes containing the read data, when successful. The returned list will contain up to len bytes; it may return fewer than requested, but not more. The list is empty when no bytes are available for reading at this time. The pollable given by subscribe will be ready when more bytes are available. This function fails with a stream-error when the operation encounters an error, giving last-operation-failed , or when the stream is closed, giving closed . When the caller gives a len of 0, it represents a request to read 0 bytes. If the stream is still open, this call should succeed and return an empty list, or otherwise fail with closed . The len parameter is a u64 , which could represent a list of u8 which is not possible to allocate in wasm32, or not desirable to allocate as as a return value by the callee. The callee may return a list of bytes less than len in size while more bytes are available for reading. Params self : borrow< input-stream > len : u64 Return values result<list< u8 >, stream-error > [method]input-stream.blocking-read: func Read bytes from a stream, after blocking until at least one byte can be read. Except for blocking, behavior is identical to read . Params self : borrow< input-stream > len : u64 Return values result<list< u8 >, stream-error > [method]input-stream.skip: func Skip bytes from a stream. Returns number of bytes skipped. Behaves identical to read , except instead of returning a list of bytes, returns the number of bytes consumed from the stream. Params self : borrow< input-stream > len : u64 Return values result< u64 , stream-error > [method]input-stream.blocking-skip: func Skip bytes from a stream, after blocking until at least one byte can be skipped. Except for blocking behavior, identical to skip . Params self : borrow< input-stream > len : u64 Return values result< u64 , stream-error > [method]input-stream.subscribe: func Create a pollable which will resolve once either the specified stream has bytes available to read or the other end of the stream has been closed. The created pollable is a child resource of the input-stream . Implementations may trap if the input-stream is dropped before all derived pollable s created with this function are dropped. Params self : borrow< input-stream > Return values own< pollable > [method]output-stream.check-write: func Check readiness for writing. This function never blocks. Returns the number of bytes permitted for the next call to write , or an error. Calling write with more bytes than this function has permitted will trap. When this function returns 0 bytes, the subscribe pollable will become ready when this function will report at least 1 byte, or an error. Params self : borrow< output-stream > Return values result< u64 , stream-error > [method]output-stream.write: func Perform a write. This function never blocks. When the destination of a write is binary data, the bytes from contents are written verbatim. When the destination of a write is known to the implementation to be text, the bytes of contents are transcoded from UTF-8 into the encoding of the destination and then written. Precondition: check-write gave permit of Ok(n) and contents has a length of less than or equal to n. Otherwise, this function will trap. returns Err(closed) without writing if the stream has closed since the last call to check-write provided a permit. Params self : borrow< output-stream > contents : list< u8 > Return values result<_, stream-error > [method]output-stream.blocking-write-and-flush: func Perform a write of up to 4096 bytes, and then flush the stream. Block until all of these operations are complete, or an error occurs. This is a convenience wrapper around the use of check-write , subscribe , write , and flush , and is implemented with the following pseudo-code: let pollable = this.subscribe(); while !contents.is_empty() { // Wait for the stream to become writable pollable.block(); let Ok(n) = this.check-write(); // eliding error handling let len = min(n, contents.len()); let (chunk, rest) = contents.split_at(len); this.write(chunk ); // eliding error handling contents = rest; } this.flush(); // Wait for completion of `flush` pollable.block(); // Check for any errors that arose during `flush` let _ = this.check-write(); // eliding error handling Params self : borrow< output-stream > contents : list< u8 > Return values result<_, stream-error > [method]output-stream.flush: func Request to flush buffered output. This function never blocks. This tells the output-stream that the caller intends any buffered output to be flushed. the output which is expected to be flushed is all that has been passed to write prior to this call. Upon calling this function, the output-stream will not accept any writes ( check-write will return ok(0) ) until the flush has completed. The subscribe pollable will become ready when the flush has completed and the stream can accept more writes. Params self : borrow< output-stream > Return values result<_, stream-error > [method]output-stream.blocking-flush: func Request to flush buffered output, and block until flush completes and stream is ready for writing again. Params self : borrow< output-stream > Return values result<_, stream-error > [method]output-stream.subscribe: func Create a pollable which will resolve once the output-stream is ready for more writing, or an error has occurred. When this pollable is ready, check-write will return ok(n) with n>0, or an error. If the stream is closed, this pollable is always ready immediately. The created pollable is a child resource of the output-stream . Implementations may trap if the output-stream is dropped before all derived pollable s created with this function are dropped. Params self : borrow< output-stream > Return values own< pollable > [method]output-stream.write-zeroes: func Write zeroes to a stream. This should be used precisely like write with the exact same preconditions (must use check-write first), but instead of passing a list of bytes, you simply pass the number of zero-bytes that should be written. Params self : borrow< output-stream > len : u64 Return values result<_, stream-error > [method]output-stream.blocking-write-zeroes-and-flush: func Perform a write of up to 4096 zeroes, and then flush the stream. Block until all of these operations are complete, or an error occurs. This is a convenience wrapper around the use of check-write , subscribe , write-zeroes , and flush , and is implemented with the following pseudo-code: let pollable = this.subscribe(); while num_zeroes != 0 { // Wait for the stream to become writable pollable.block(); let Ok(n) = this.check-write(); // eliding error handling let len = min(n, num_zeroes); this.write-zeroes(len); // eliding error handling num_zeroes -= len; } this.flush(); // Wait for completion of `flush` pollable.block(); // Check for any errors that arose during `flush` let _ = this.check-write(); // eliding error handling Params self : borrow< output-stream > len : u64 Return values result<_, stream-error > [method]output-stream.splice: func Read from one stream and write to another. The behavior of splice is equivalent to: calling check-write on the output-stream calling read on the input-stream with the smaller of the check-write permitted length and the len provided to splice calling write on the output-stream with that read data. Any error reported by the call to check-write , read , or write ends the splice and reports that error. This function returns the number of bytes transferred; it may be less than len . Params self : borrow< output-stream > src : borrow< input-stream > len : u64 Return values result< u64 , stream-error > [method]output-stream.blocking-splice: func Read from one stream and write to another, with blocking. This is similar to splice , except that it blocks until the output-stream is ready for writing, and the input-stream is ready for reading, before performing the splice . Params self : borrow< output-stream > src : borrow< input-stream > len : u64 Return values result< u64 , stream-error > Import interface wasi:cli/stdin@0.2.6 Types type input-stream input-stream ---- Functions get-stdin: func Return values own< input-stream > Import interface wasi:cli/stdout@0.2.6 Types type output-stream output-stream ---- Functions get-stdout: func Return values own< output-stream > Import interface wasi:cli/stderr@0.2.6 Types type output-stream output-stream ---- Functions get-stderr: func Return values own< output-stream > Import interface wasi:cli/terminal-input@0.2.6 Terminal input. In the future, this may include functions for disabling echoing, disabling input buffering so that keyboard events are sent through immediately, querying supported features, and so on. Types resource terminal-input The input side of a terminal. Import interface wasi:cli/terminal-output@0.2.6 Terminal output. In the future, this may include functions for querying the terminal size, being notified of terminal size changes, querying supported features, and so on. Types resource terminal-output The output side of a terminal. Import interface wasi:cli/terminal-stdin@0.2.6 An interface providing an optional terminal-input for stdin as a link-time authority. Types type terminal-input terminal-input ---- Functions get-terminal-stdin: func If stdin is connected to a terminal, return a terminal-input handle allowing further interaction with it. Return values option<own< terminal-input >> Import interface wasi:cli/terminal-stdout@0.2.6 An interface providing an optional terminal-output for stdout as a link-time authority. Types type terminal-output terminal-output ---- Functions get-terminal-stdout: func If stdout is connected to a terminal, return a terminal-output handle allowing further interaction with it. Return values option<own< terminal-output >> Import interface wasi:cli/terminal-stderr@0.2.6 An interface providing an optional terminal-output for stderr as a link-time authority. Types type terminal-output terminal-output ---- Functions get-terminal-stderr: func If stderr is connected to a terminal, return a terminal-output handle allowing further interaction with it. Return values option<own< terminal-output >> Import interface wasi:clocks/monotonic-clock@0.2.6 WASI Monotonic Clock is a clock API intended to let users measure elapsed time. It is intended to be portable at least between Unix-family platforms and Windows. A monotonic clock is a clock which has an unspecified initial value, and successive reads of the clock will produce non-decreasing values. Types type pollable pollable #### `type instant` `u64` An instant in time, in nanoseconds. An instant is relative to an unspecified initial value, and can only be compared to instances from the same monotonic-clock. type duration u64 A duration of time, in nanoseconds. Functions now: func Read the current value of the clock. The clock is monotonic, therefore calling this function repeatedly will produce a sequence of non-decreasing values. Return values instant resolution: func Query the resolution of the clock. Returns the duration of time corresponding to a clock tick. Return values duration subscribe-instant: func Create a pollable which will resolve once the specified instant has occurred. Params when : instant Return values own< pollable > subscribe-duration: func Create a pollable that will resolve after the specified duration has elapsed from the time this function is invoked. Params when : duration Return values own< pollable > Import interface wasi:clocks/wall-clock@0.2.6 WASI Wall Clock is a clock API intended to let users query the current time. The name \"wall\" makes an analogy to a \"clock on the wall\", which is not necessarily monotonic as it may be reset. It is intended to be portable at least between Unix-family platforms and Windows. A wall clock is a clock which measures the date and time according to some external reference. External references may be reset, so this clock is not necessarily monotonic, making it unsuitable for measuring elapsed time. It is intended for reporting the current date and time for humans. Types record datetime A time and date in seconds plus nanoseconds. Record Fields seconds : u64 nanoseconds : u32 Functions now: func Read the current value of the clock. This clock is not monotonic, therefore calling this function repeatedly will not necessarily produce a sequence of non-decreasing values. The returned timestamps represent the number of seconds since 1970-01-01T00:00:00Z, also known as POSIX's Seconds Since the Epoch , also known as Unix Time . The nanoseconds field of the output is always less than 1000000000. Return values datetime resolution: func Query the resolution of the clock. The nanoseconds field of the output is always less than 1000000000. Return values datetime Import interface wasi:filesystem/types@0.2.6 WASI filesystem is a filesystem API primarily intended to let users run WASI programs that access their files on their existing filesystems, without significant overhead. It is intended to be roughly portable between Unix-family platforms and Windows, though it does not hide many of the major differences. Paths are passed as interface-type string s, meaning they must consist of a sequence of Unicode Scalar Values (USVs). Some filesystems may contain paths which are not accessible by this API. The directory separator in WASI is always the forward-slash ( / ). All paths in WASI are relative paths, and are interpreted relative to a descriptor referring to a base directory. If a path argument to any WASI function starts with / , or if any step of resolving a path , including .. and symbolic link steps, reaches a directory outside of the base directory, or reaches a symlink to an absolute or rooted path in the underlying filesystem, the function fails with error-code::not-permitted . For more information about WASI path resolution and sandboxing, see WASI filesystem path resolution . Types type input-stream input-stream #### `type output-stream` [`output-stream`](#output_stream) #### `type error` [`error`](#error) #### `type datetime` [`datetime`](#datetime) #### `type filesize` `u64` File size or length of a region within a file. enum descriptor-type The type of a filesystem object referenced by a descriptor. Note: This was called filetype in earlier versions of WASI. Enum Cases unknown The type of the descriptor or file is unknown or is different from any of the other types specified. block-device The descriptor refers to a block device inode. character-device The descriptor refers to a character device inode. directory The descriptor refers to a directory inode. fifo The descriptor refers to a named pipe. symbolic-link The file refers to a symbolic link inode. regular-file The descriptor refers to a regular file inode. socket The descriptor refers to a socket. flags descriptor-flags Descriptor flags. Note: This was called fdflags in earlier versions of WASI. Flags members read : Read mode: Data can be read. write : Write mode: Data can be written to. file-integrity-sync : Request that writes be performed according to synchronized I/O file integrity completion. The data stored in the file and the file's metadata are synchronized. This is similar to `O_SYNC` in POSIX. The precise semantics of this operation have not yet been defined for WASI. At this time, it should be interpreted as a request, and not a requirement. data-integrity-sync : Request that writes be performed according to synchronized I/O data integrity completion. Only the data stored in the file is synchronized. This is similar to `O_DSYNC` in POSIX. The precise semantics of this operation have not yet been defined for WASI. At this time, it should be interpreted as a request, and not a requirement. requested-write-sync : Requests that reads be performed at the same level of integrity requested for writes. This is similar to `O_RSYNC` in POSIX. The precise semantics of this operation have not yet been defined for WASI. At this time, it should be interpreted as a request, and not a requirement. mutate-directory : Mutating directories mode: Directory contents may be mutated. When this flag is unset on a descriptor, operations using the descriptor which would create, rename, delete, modify the data or metadata of filesystem objects, or obtain another handle which would permit any of those, shall fail with error-code::read-only if they would otherwise succeed. This may only be set on directories. flags path-flags Flags determining the method of how paths are resolved. Flags members symlink-follow : As long as the resolved path corresponds to a symbolic link, it is expanded. flags open-flags Open flags used by open-at . Flags members create : Create file if it does not exist, similar to `O_CREAT` in POSIX. directory : Fail if not a directory, similar to `O_DIRECTORY` in POSIX. exclusive : Fail if file already exists, similar to `O_EXCL` in POSIX. truncate : Truncate file to size 0, similar to `O_TRUNC` in POSIX. type link-count u64 Number of hard links to an inode. record descriptor-stat File attributes. Note: This was called filestat in earlier versions of WASI. Record Fields type : descriptor-type File type. link-count : link-count Number of hard links to the file. size : filesize For regular files, the file size in bytes. For symbolic links, the length in bytes of the pathname contained in the symbolic link. data-access-timestamp : option< datetime > Last data access timestamp. If the option is none, the platform doesn't maintain an access timestamp for this file. data-modification-timestamp : option< datetime > Last data modification timestamp. If the option is none, the platform doesn't maintain a modification timestamp for this file. status-change-timestamp : option< datetime > Last file status-change timestamp. If the option is none, the platform doesn't maintain a status-change timestamp for this file. variant new-timestamp When setting a timestamp, this gives the value to set it to. Variant Cases no-change Leave the timestamp set to its previous value. now Set the timestamp to the current time of the system clock associated with the filesystem. timestamp : datetime Set the timestamp to the given value. record directory-entry A directory entry. Record Fields type : descriptor-type The type of the file referred to by this directory entry. name : string The name of the object. enum error-code Error codes returned by functions, similar to errno in POSIX. Not all of these error codes are returned by the functions provided by this API; some are used in higher-level library layers, and others are provided merely for alignment with POSIX. Enum Cases access Permission denied, similar to `EACCES` in POSIX. would-block Resource unavailable, or operation would block, similar to `EAGAIN` and `EWOULDBLOCK` in POSIX. already Connection already in progress, similar to `EALREADY` in POSIX. bad-descriptor Bad descriptor, similar to `EBADF` in POSIX. busy Device or resource busy, similar to `EBUSY` in POSIX. deadlock Resource deadlock would occur, similar to `EDEADLK` in POSIX. quota Storage quota exceeded, similar to `EDQUOT` in POSIX. exist File exists, similar to `EEXIST` in POSIX. file-too-large File too large, similar to `EFBIG` in POSIX. illegal-byte-sequence Illegal byte sequence, similar to `EILSEQ` in POSIX. in-progress Operation in progress, similar to `EINPROGRESS` in POSIX. interrupted Interrupted function, similar to `EINTR` in POSIX. invalid Invalid argument, similar to `EINVAL` in POSIX. io I/O error, similar to `EIO` in POSIX. is-directory Is a directory, similar to `EISDIR` in POSIX. loop Too many levels of symbolic links, similar to `ELOOP` in POSIX. too-many-links Too many links, similar to `EMLINK` in POSIX. message-size Message too large, similar to `EMSGSIZE` in POSIX. name-too-long Filename too long, similar to `ENAMETOOLONG` in POSIX. no-device No such device, similar to `ENODEV` in POSIX. no-entry No such file or directory, similar to `ENOENT` in POSIX. no-lock No locks available, similar to `ENOLCK` in POSIX. insufficient-memory Not enough space, similar to `ENOMEM` in POSIX. insufficient-space No space left on device, similar to `ENOSPC` in POSIX. not-directory Not a directory or a symbolic link to a directory, similar to `ENOTDIR` in POSIX. not-empty Directory not empty, similar to `ENOTEMPTY` in POSIX. not-recoverable State not recoverable, similar to `ENOTRECOVERABLE` in POSIX. unsupported Not supported, similar to `ENOTSUP` and `ENOSYS` in POSIX. no-tty Inappropriate I/O control operation, similar to `ENOTTY` in POSIX. no-such-device No such device or address, similar to `ENXIO` in POSIX. overflow Value too large to be stored in data type, similar to `EOVERFLOW` in POSIX. not-permitted Operation not permitted, similar to `EPERM` in POSIX. pipe Broken pipe, similar to `EPIPE` in POSIX. read-only Read-only file system, similar to `EROFS` in POSIX. invalid-seek Invalid seek, similar to `ESPIPE` in POSIX. text-file-busy Text file busy, similar to `ETXTBSY` in POSIX. cross-device Cross-device link, similar to `EXDEV` in POSIX. enum advice File or memory access pattern advisory information. Enum Cases normal The application has no advice to give on its behavior with respect to the specified data. sequential The application expects to access the specified data sequentially from lower offsets to higher offsets. random The application expects to access the specified data in a random order. will-need The application expects to access the specified data in the near future. dont-need The application expects that it will not access the specified data in the near future. no-reuse The application expects to access the specified data once and then not reuse it thereafter. record metadata-hash-value A 128-bit hash value, split into parts because wasm doesn't have a 128-bit integer type. Record Fields lower : u64 64 bits of a 128-bit hash value. upper : u64 Another 64 bits of a 128-bit hash value. resource descriptor A descriptor is a reference to a filesystem object, which may be a file, directory, named pipe, special file, or other object on which filesystem calls may be made. resource directory-entry-stream A stream of directory entries. Functions [method]descriptor.read-via-stream: func Return a stream for reading from a file, if available. May fail with an error-code describing why the file cannot be read. Multiple read, write, and append streams may be active on the same open file and they do not interfere with each other. Note: This allows using read-stream , which is similar to read in POSIX. Params self : borrow< descriptor > offset : filesize Return values result<own< input-stream >, error-code > [method]descriptor.write-via-stream: func Return a stream for writing to a file, if available. May fail with an error-code describing why the file cannot be written. Note: This allows using write-stream , which is similar to write in POSIX. Params self : borrow< descriptor > offset : filesize Return values result<own< output-stream >, error-code > [method]descriptor.append-via-stream: func Return a stream for appending to a file, if available. May fail with an error-code describing why the file cannot be appended. Note: This allows using write-stream , which is similar to write with O_APPEND in POSIX. Params self : borrow< descriptor > Return values result<own< output-stream >, error-code > [method]descriptor.advise: func Provide file advisory information on a descriptor. This is similar to posix_fadvise in POSIX. Params self : borrow< descriptor > offset : filesize length : filesize advice : advice Return values result<_, error-code > [method]descriptor.sync-data: func Synchronize the data of a file to disk. This function succeeds with no effect if the file descriptor is not opened for writing. Note: This is similar to fdatasync in POSIX. Params self : borrow< descriptor > Return values result<_, error-code > [method]descriptor.get-flags: func Get flags associated with a descriptor. Note: This returns similar flags to fcntl(fd, F_GETFL) in POSIX. Note: This returns the value that was the fs_flags value returned from fdstat_get in earlier versions of WASI. Params self : borrow< descriptor > Return values result< descriptor-flags , error-code > [method]descriptor.get-type: func Get the dynamic type of a descriptor. Note: This returns the same value as the type field of the fd-stat returned by stat , stat-at and similar. Note: This returns similar flags to the st_mode & S_IFMT value provided by fstat in POSIX. Note: This returns the value that was the fs_filetype value returned from fdstat_get in earlier versions of WASI. Params self : borrow< descriptor > Return values result< descriptor-type , error-code > [method]descriptor.set-size: func Adjust the size of an open file. If this increases the file's size, the extra bytes are filled with zeros. Note: This was called fd_filestat_set_size in earlier versions of WASI. Params self : borrow< descriptor > size : filesize Return values result<_, error-code > [method]descriptor.set-times: func Adjust the timestamps of an open file or directory. Note: This is similar to futimens in POSIX. Note: This was called fd_filestat_set_times in earlier versions of WASI. Params self : borrow< descriptor > data-access-timestamp : new-timestamp data-modification-timestamp : new-timestamp Return values result<_, error-code > [method]descriptor.read: func Read from a descriptor, without using and updating the descriptor's offset. This function returns a list of bytes containing the data that was read, along with a bool which, when true, indicates that the end of the file was reached. The returned list will contain up to length bytes; it may return fewer than requested, if the end of the file is reached or if the I/O operation is interrupted. In the future, this may change to return a stream<u8, error-code> . Note: This is similar to pread in POSIX. Params self : borrow< descriptor > length : filesize offset : filesize Return values result<(list< u8 >, bool ), error-code > [method]descriptor.write: func Write to a descriptor, without using and updating the descriptor's offset. It is valid to write past the end of a file; the file is extended to the extent of the write, with bytes between the previous end and the start of the write set to zero. In the future, this may change to take a stream<u8, error-code> . Note: This is similar to pwrite in POSIX. Params self : borrow< descriptor > buffer : list< u8 > offset : filesize Return values result< filesize , error-code > [method]descriptor.read-directory: func Read directory entries from a directory. On filesystems where directories contain entries referring to themselves and their parents, often named . and .. respectively, these entries are omitted. This always returns a new stream which starts at the beginning of the directory. Multiple streams may be active on the same directory, and they do not interfere with each other. Params self : borrow< descriptor > Return values result<own< directory-entry-stream >, error-code > [method]descriptor.sync: func Synchronize the data and metadata of a file to disk. This function succeeds with no effect if the file descriptor is not opened for writing. Note: This is similar to fsync in POSIX. Params self : borrow< descriptor > Return values result<_, error-code > [method]descriptor.create-directory-at: func Create a directory. Note: This is similar to mkdirat in POSIX. Params self : borrow< descriptor > path : string Return values result<_, error-code > [method]descriptor.stat: func Return the attributes of an open file or directory. Note: This is similar to fstat in POSIX, except that it does not return device and inode information. For testing whether two descriptors refer to the same underlying filesystem object, use is-same-object . To obtain additional data that can be used do determine whether a file has been modified, use metadata-hash . Note: This was called fd_filestat_get in earlier versions of WASI. Params self : borrow< descriptor > Return values result< descriptor-stat , error-code > [method]descriptor.stat-at: func Return the attributes of a file or directory. Note: This is similar to fstatat in POSIX, except that it does not return device and inode information. See the stat description for a discussion of alternatives. Note: This was called path_filestat_get in earlier versions of WASI. Params self : borrow< descriptor > path-flags : path-flags path : string Return values result< descriptor-stat , error-code > [method]descriptor.set-times-at: func Adjust the timestamps of a file or directory. Note: This is similar to utimensat in POSIX. Note: This was called path_filestat_set_times in earlier versions of WASI. Params self : borrow< descriptor > path-flags : path-flags path : string data-access-timestamp : new-timestamp data-modification-timestamp : new-timestamp Return values result<_, error-code > [method]descriptor.link-at: func Create a hard link. Fails with error-code::no-entry if the old path does not exist, with error-code::exist if the new path already exists, and error-code::not-permitted if the old path is not a file. Note: This is similar to linkat in POSIX. Params self : borrow< descriptor > old-path-flags : path-flags old-path : string new-descriptor : borrow< descriptor > new-path : string Return values result<_, error-code > [method]descriptor.open-at: func Open a file or directory. If flags contains descriptor-flags::mutate-directory , and the base descriptor doesn't have descriptor-flags::mutate-directory set, open-at fails with error-code::read-only . If flags contains write or mutate-directory , or open-flags contains truncate or create , and the base descriptor doesn't have descriptor-flags::mutate-directory set, open-at fails with error-code::read-only . Note: This is similar to openat in POSIX. Params self : borrow< descriptor > path-flags : path-flags path : string open-flags : open-flags flags : descriptor-flags Return values result<own< descriptor >, error-code > [method]descriptor.readlink-at: func Read the contents of a symbolic link. If the contents contain an absolute or rooted path in the underlying filesystem, this function fails with error-code::not-permitted . Note: This is similar to readlinkat in POSIX. Params self : borrow< descriptor > path : string Return values result< string , error-code > [method]descriptor.remove-directory-at: func Remove a directory. Return error-code::not-empty if the directory is not empty. Note: This is similar to unlinkat(fd, path, AT_REMOVEDIR) in POSIX. Params self : borrow< descriptor > path : string Return values result<_, error-code > [method]descriptor.rename-at: func Rename a filesystem object. Note: This is similar to renameat in POSIX. Params self : borrow< descriptor > old-path : string new-descriptor : borrow< descriptor > new-path : string Return values result<_, error-code > [method]descriptor.symlink-at: func Create a symbolic link (also known as a \"symlink\"). If old-path starts with / , the function fails with error-code::not-permitted . Note: This is similar to symlinkat in POSIX. Params self : borrow< descriptor > old-path : string new-path : string Return values result<_, error-code > [method]descriptor.unlink-file-at: func Unlink a filesystem object that is not a directory. Return error-code::is-directory if the path refers to a directory. Note: This is similar to unlinkat(fd, path, 0) in POSIX. Params self : borrow< descriptor > path : string Return values result<_, error-code > [method]descriptor.is-same-object: func Test whether two descriptors refer to the same filesystem object. In POSIX, this corresponds to testing whether the two descriptors have the same device ( st_dev ) and inode ( st_ino or d_ino ) numbers. wasi-filesystem does not expose device and inode numbers, so this function may be used instead. Params self : borrow< descriptor > other : borrow< descriptor > Return values bool [method]descriptor.metadata-hash: func Return a hash of the metadata associated with a filesystem object referred to by a descriptor. This returns a hash of the last-modification timestamp and file size, and may also include the inode number, device number, birth timestamp, and other metadata fields that may change when the file is modified or replaced. It may also include a secret value chosen by the implementation and not otherwise exposed. Implementations are encouraged to provide the following properties: If the file is not modified or replaced, the computed hash value should usually not change. If the object is modified or replaced, the computed hash value should usually change. The inputs to the hash should not be easily computable from the computed hash. However, none of these is required. Params self : borrow< descriptor > Return values result< metadata-hash-value , error-code > [method]descriptor.metadata-hash-at: func Return a hash of the metadata associated with a filesystem object referred to by a directory descriptor and a relative path. This performs the same hash computation as metadata-hash . Params self : borrow< descriptor > path-flags : path-flags path : string Return values result< metadata-hash-value , error-code > [method]directory-entry-stream.read-directory-entry: func Read a single directory entry from a directory-entry-stream . Params self : borrow< directory-entry-stream > Return values result<option< directory-entry >, error-code > filesystem-error-code: func Attempts to extract a filesystem-related error-code from the stream error provided. Stream operations which return stream-error::last-operation-failed have a payload with more information about the operation that failed. This payload can be passed through to this function to see if there's filesystem-related information about the error to return. Note that this function is fallible because not all stream-related errors are filesystem-related errors. Params err : borrow< error > Return values option< error-code > Import interface wasi:filesystem/preopens@0.2.6 Types type descriptor descriptor ---- Functions get-directories: func Return the set of preopened directories, and their paths. Return values list<(own< descriptor >, string )> Import interface wasi:sockets/network@0.2.6 Types resource network An opaque resource that represents access to (a subset of) the network. This enables context-based security for networking. There is no need for this to map 1:1 to a physical network interface. enum error-code Error codes. In theory, every API can return any error code. In practice, API's typically only return the errors documented per API combined with a couple of errors that are always possible: unknown access-denied not-supported out-of-memory concurrency-conflict See each individual API for what the POSIX equivalents are. They sometimes differ per API. Enum Cases unknown Unknown error access-denied Access denied. POSIX equivalent: EACCES, EPERM not-supported The operation is not supported. POSIX equivalent: EOPNOTSUPP invalid-argument One of the arguments is invalid. POSIX equivalent: EINVAL out-of-memory Not enough memory to complete the operation. POSIX equivalent: ENOMEM, ENOBUFS, EAI_MEMORY timeout The operation timed out before it could finish completely. concurrency-conflict This operation is incompatible with another asynchronous operation that is already in progress. POSIX equivalent: EALREADY not-in-progress Trying to finish an asynchronous operation that: - has not been started yet, or: - was already finished by a previous `finish-*` call. Note: this is scheduled to be removed when future s are natively supported. would-block The operation has been aborted because it could not be completed immediately. Note: this is scheduled to be removed when future s are natively supported. invalid-state The operation is not valid in the socket's current state. new-socket-limit A new socket resource could not be created because of a system limit. address-not-bindable A bind operation failed because the provided address is not an address that the `network` can bind to. address-in-use A bind operation failed because the provided address is already in use or because there are no ephemeral ports available. remote-unreachable The remote address is not reachable connection-refused The TCP connection was forcefully rejected connection-reset The TCP connection was reset. connection-aborted A TCP connection was aborted. datagram-too-large The size of a datagram sent to a UDP socket exceeded the maximum supported size. name-unresolvable Name does not exist or has no suitable associated IP addresses. temporary-resolver-failure A temporary failure in name resolution occurred. permanent-resolver-failure A permanent failure in name resolution occurred. enum ip-address-family Enum Cases ipv4 Similar to `AF_INET` in POSIX. ipv6 Similar to `AF_INET6` in POSIX. tuple ipv4-address Tuple Fields 0 : u8 1 : u8 2 : u8 3 : u8 tuple ipv6-address Tuple Fields 0 : u16 1 : u16 2 : u16 3 : u16 4 : u16 5 : u16 6 : u16 7 : u16 variant ip-address Variant Cases ipv4 : ipv4-address ipv6 : ipv6-address record ipv4-socket-address Record Fields port : u16 sin_port address : ipv4-address sin_addr record ipv6-socket-address Record Fields port : u16 sin6_port flow-info : u32 sin6_flowinfo address : ipv6-address sin6_addr scope-id : u32 sin6_scope_id variant ip-socket-address Variant Cases ipv4 : ipv4-socket-address ipv6 : ipv6-socket-address Import interface wasi:sockets/instance-network@0.2.6 This interface provides a value-export of the default network handle.. Types type network network ---- Functions instance-network: func Get a handle to the default network. Return values own< network > Import interface wasi:sockets/udp@0.2.6 Types type pollable pollable #### `type network` [`network`](#network) #### `type error-code` [`error-code`](#error_code) #### `type ip-socket-address` [`ip-socket-address`](#ip_socket_address) #### `type ip-address-family` [`ip-address-family`](#ip_address_family) #### `record incoming-datagram` A received datagram. Record Fields data : list< u8 > The payload. Theoretical max size: ~64 KiB. In practice, typically less than 1500 bytes. remote-address : ip-socket-address The source address. This field is guaranteed to match the remote address the stream was initialized with, if any. Equivalent to the src_addr out parameter of recvfrom . record outgoing-datagram A datagram to be sent out. Record Fields data : list< u8 > The payload. remote-address : option< ip-socket-address > The destination address. The requirements on this field depend on how the stream was initialized: with a remote address: this field must be None or match the stream's remote address exactly. without a remote address: this field is required. If this value is None, the send operation is equivalent to send in POSIX. Otherwise it is equivalent to sendto . resource udp-socket A UDP socket handle. resource incoming-datagram-stream resource outgoing-datagram-stream Functions [method]udp-socket.start-bind: func Bind the socket to a specific network on the provided IP address and port. If the IP address is zero ( 0.0.0.0 in IPv4, :: in IPv6), it is left to the implementation to decide which network interface(s) to bind to. If the port is zero, the socket will be bound to a random free port. Typical errors invalid-argument : The local-address has the wrong address family. (EAFNOSUPPORT, EFAULT on Windows) invalid-state : The socket is already bound. (EINVAL) address-in-use : No ephemeral ports available. (EADDRINUSE, ENOBUFS on Windows) address-in-use : Address is already in use. (EADDRINUSE) address-not-bindable : local-address is not an address that the network can bind to. (EADDRNOTAVAIL) not-in-progress : A bind operation is not in progress. would-block : Can't finish the operation, it is still in progress. (EWOULDBLOCK, EAGAIN) Implementors note Unlike in POSIX, in WASI the bind operation is async. This enables interactive WASI hosts to inject permission prompts. Runtimes that don't want to make use of this ability can simply call the native bind as part of either start-bind or finish-bind . References https://pubs.opengroup.org/onlinepubs/9699919799/functions/bind.html https://man7.org/linux/man-pages/man2/bind.2.html https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-bind https://man.freebsd.org/cgi/man.cgi?query=bind&sektion=2&format=html Params self : borrow< udp-socket > network : borrow< network > local-address : ip-socket-address Return values result<_, error-code > [method]udp-socket.finish-bind: func Params self : borrow< udp-socket > Return values result<_, error-code > [method]udp-socket.stream: func Set up inbound & outbound communication channels, optionally to a specific peer. This function only changes the local socket configuration and does not generate any network traffic. On success, the remote-address of the socket is updated. The local-address may be updated as well, based on the best network path to remote-address . When a remote-address is provided, the returned streams are limited to communicating with that specific peer: send can only be used to send to this destination. receive will only return datagrams sent from the provided remote-address . This method may be called multiple times on the same socket to change its association, but only the most recently returned pair of streams will be operational. Implementations may trap if the streams returned by a previous invocation haven't been dropped yet before calling stream again. The POSIX equivalent in pseudo-code is: if (was previously connected) { connect(s, AF_UNSPEC) } if (remote_address is Some) { connect(s, remote_address) } Unlike in POSIX, the socket must already be explicitly bound. Typical errors invalid-argument : The remote-address has the wrong address family. (EAFNOSUPPORT) invalid-argument : The IP address in remote-address is set to INADDR_ANY ( 0.0.0.0 / :: ). (EDESTADDRREQ, EADDRNOTAVAIL) invalid-argument : The port in remote-address is set to 0. (EDESTADDRREQ, EADDRNOTAVAIL) invalid-state : The socket is not bound. address-in-use : Tried to perform an implicit bind, but there were no ephemeral ports available. (EADDRINUSE, EADDRNOTAVAIL on Linux, EAGAIN on BSD) remote-unreachable : The remote address is not reachable. (ECONNRESET, ENETRESET, EHOSTUNREACH, EHOSTDOWN, ENETUNREACH, ENETDOWN, ENONET) connection-refused : The connection was refused. (ECONNREFUSED) References https://pubs.opengroup.org/onlinepubs/9699919799/functions/connect.html https://man7.org/linux/man-pages/man2/connect.2.html https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-connect https://man.freebsd.org/cgi/man.cgi?connect Params self : borrow< udp-socket > remote-address : option< ip-socket-address > Return values result<(own< incoming-datagram-stream >, own< outgoing-datagram-stream >), error-code > [method]udp-socket.local-address: func Get the current bound address. POSIX mentions: If the socket has not been bound to a local name, the value stored in the object pointed to by address is unspecified. WASI is stricter and requires local-address to return invalid-state when the socket hasn't been bound yet. Typical errors invalid-state : The socket is not bound to any local address. References https://pubs.opengroup.org/onlinepubs/9699919799/functions/getsockname.html https://man7.org/linux/man-pages/man2/getsockname.2.html https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-getsockname https://man.freebsd.org/cgi/man.cgi?getsockname Params self : borrow< udp-socket > Return values result< ip-socket-address , error-code > [method]udp-socket.remote-address: func Get the address the socket is currently streaming to. Typical errors invalid-state : The socket is not streaming to a specific remote address. (ENOTCONN) References https://pubs.opengroup.org/onlinepubs/9699919799/functions/getpeername.html https://man7.org/linux/man-pages/man2/getpeername.2.html https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-getpeername https://man.freebsd.org/cgi/man.cgi?query=getpeername&sektion=2&n=1 Params self : borrow< udp-socket > Return values result< ip-socket-address , error-code > [method]udp-socket.address-family: func Whether this is a IPv4 or IPv6 socket. Equivalent to the SO_DOMAIN socket option. Params self : borrow< udp-socket > Return values ip-address-family [method]udp-socket.unicast-hop-limit: func Equivalent to the IP_TTL & IPV6_UNICAST_HOPS socket options. If the provided value is 0, an invalid-argument error is returned. Typical errors invalid-argument : (set) The TTL value must be 1 or higher. Params self : borrow< udp-socket > Return values result< u8 , error-code > [method]udp-socket.set-unicast-hop-limit: func Params self : borrow< udp-socket > value : u8 Return values result<_, error-code > [method]udp-socket.receive-buffer-size: func The kernel buffer space reserved for sends/receives on this socket. If the provided value is 0, an invalid-argument error is returned. Any other value will never cause an error, but it might be silently clamped and/or rounded. I.e. after setting a value, reading the same setting back may return a different value. Equivalent to the SO_RCVBUF and SO_SNDBUF socket options. Typical errors invalid-argument : (set) The provided value was 0. Params self : borrow< udp-socket > Return values result< u64 , error-code > [method]udp-socket.set-receive-buffer-size: func Params self : borrow< udp-socket > value : u64 Return values result<_, error-code > [method]udp-socket.send-buffer-size: func Params self : borrow< udp-socket > Return values result< u64 , error-code > [method]udp-socket.set-send-buffer-size: func Params self : borrow< udp-socket > value : u64 Return values result<_, error-code > [method]udp-socket.subscribe: func Create a pollable which will resolve once the socket is ready for I/O. Note: this function is here for WASI 0.2 only. It's planned to be removed when future is natively supported in Preview3. Params self : borrow< udp-socket > Return values own< pollable > [method]incoming-datagram-stream.receive: func Receive messages on the socket. This function attempts to receive up to max-results datagrams on the socket without blocking. The returned list may contain fewer elements than requested, but never more. This function returns successfully with an empty list when either: max-results is 0, or: max-results is greater than 0, but no results are immediately available. This function never returns error(would-block) . Typical errors remote-unreachable : The remote address is not reachable. (ECONNRESET, ENETRESET on Windows, EHOSTUNREACH, EHOSTDOWN, ENETUNREACH, ENETDOWN, ENONET) connection-refused : The connection was refused. (ECONNREFUSED) References https://pubs.opengroup.org/onlinepubs/9699919799/functions/recvfrom.html https://pubs.opengroup.org/onlinepubs/9699919799/functions/recvmsg.html https://man7.org/linux/man-pages/man2/recv.2.html https://man7.org/linux/man-pages/man2/recvmmsg.2.html https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-recv https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-recvfrom https://learn.microsoft.com/en-us/previous-versions/windows/desktop/legacy/ms741687(v=vs.85) https://man.freebsd.org/cgi/man.cgi?query=recv&sektion=2 Params self : borrow< incoming-datagram-stream > max-results : u64 Return values result<list< incoming-datagram >, error-code > [method]incoming-datagram-stream.subscribe: func Create a pollable which will resolve once the stream is ready to receive again. Note: this function is here for WASI 0.2 only. It's planned to be removed when future is natively supported in Preview3. Params self : borrow< incoming-datagram-stream > Return values own< pollable > [method]outgoing-datagram-stream.check-send: func Check readiness for sending. This function never blocks. Returns the number of datagrams permitted for the next call to send , or an error. Calling send with more datagrams than this function has permitted will trap. When this function returns ok(0), the subscribe pollable will become ready when this function will report at least ok(1), or an error. Never returns would-block . Params self : borrow< outgoing-datagram-stream > Return values result< u64 , error-code > [method]outgoing-datagram-stream.send: func Send messages on the socket. This function attempts to send all provided datagrams on the socket without blocking and returns how many messages were actually sent (or queued for sending). This function never returns error(would-block) . If none of the datagrams were able to be sent, ok(0) is returned. This function semantically behaves the same as iterating the datagrams list and sequentially sending each individual datagram until either the end of the list has been reached or the first error occurred. If at least one datagram has been sent successfully, this function never returns an error. If the input list is empty, the function returns ok(0) . Each call to send must be permitted by a preceding check-send . Implementations must trap if either check-send was not called or datagrams contains more items than check-send permitted. Typical errors invalid-argument : The remote-address has the wrong address family. (EAFNOSUPPORT) invalid-argument : The IP address in remote-address is set to INADDR_ANY ( 0.0.0.0 / :: ). (EDESTADDRREQ, EADDRNOTAVAIL) invalid-argument : The port in remote-address is set to 0. (EDESTADDRREQ, EADDRNOTAVAIL) invalid-argument : The socket is in \"connected\" mode and remote-address is some value that does not match the address passed to stream . (EISCONN) invalid-argument : The socket is not \"connected\" and no value for remote-address was provided. (EDESTADDRREQ) remote-unreachable : The remote address is not reachable. (ECONNRESET, ENETRESET on Windows, EHOSTUNREACH, EHOSTDOWN, ENETUNREACH, ENETDOWN, ENONET) connection-refused : The connection was refused. (ECONNREFUSED) datagram-too-large : The datagram is too large. (EMSGSIZE) References https://pubs.opengroup.org/onlinepubs/9699919799/functions/sendto.html https://pubs.opengroup.org/onlinepubs/9699919799/functions/sendmsg.html https://man7.org/linux/man-pages/man2/send.2.html https://man7.org/linux/man-pages/man2/sendmmsg.2.html https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-send https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-sendto https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsasendmsg https://man.freebsd.org/cgi/man.cgi?query=send&sektion=2 Params self : borrow< outgoing-datagram-stream > datagrams : list< outgoing-datagram > Return values result< u64 , error-code > [method]outgoing-datagram-stream.subscribe: func Create a pollable which will resolve once the stream is ready to send again. Note: this function is here for WASI 0.2 only. It's planned to be removed when future is natively supported in Preview3. Params self : borrow< outgoing-datagram-stream > Return values own< pollable > Import interface wasi:sockets/udp-create-socket@0.2.6 Types type network network #### `type error-code` [`error-code`](#error_code) #### `type ip-address-family` [`ip-address-family`](#ip_address_family) #### `type udp-socket` [`udp-socket`](#udp_socket) ---- Functions create-udp-socket: func Create a new UDP socket. Similar to socket(AF_INET or AF_INET6, SOCK_DGRAM, IPPROTO_UDP) in POSIX. On IPv6 sockets, IPV6_V6ONLY is enabled by default and can't be configured otherwise. This function does not require a network capability handle. This is considered to be safe because at time of creation, the socket is not bound to any network yet. Up to the moment bind is called, the socket is effectively an in-memory configuration object, unable to communicate with the outside world. All sockets are non-blocking. Use the wasi-poll interface to block on asynchronous operations. Typical errors not-supported : The specified address-family is not supported. (EAFNOSUPPORT) new-socket-limit : The new socket resource could not be created because of a system limit. (EMFILE, ENFILE) References: https://pubs.opengroup.org/onlinepubs/9699919799/functions/socket.html https://man7.org/linux/man-pages/man2/socket.2.html https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsasocketw https://man.freebsd.org/cgi/man.cgi?query=socket&sektion=2 Params address-family : ip-address-family Return values result<own< udp-socket >, error-code > Import interface wasi:sockets/tcp@0.2.6 Types type input-stream input-stream #### `type output-stream` [`output-stream`](#output_stream) #### `type pollable` [`pollable`](#pollable) #### `type duration` [`duration`](#duration) #### `type network` [`network`](#network) #### `type error-code` [`error-code`](#error_code) #### `type ip-socket-address` [`ip-socket-address`](#ip_socket_address) #### `type ip-address-family` [`ip-address-family`](#ip_address_family) #### `enum shutdown-type` Enum Cases receive Similar to `SHUT_RD` in POSIX. send Similar to `SHUT_WR` in POSIX. both Similar to `SHUT_RDWR` in POSIX. resource tcp-socket A TCP socket resource. The socket can be in one of the following states: unbound bind-in-progress bound (See note below) listen-in-progress listening connect-in-progress connected closed See https://github.com/WebAssembly/wasi-sockets/blob/main/TcpSocketOperationalSemantics.md for more information. Note: Except where explicitly mentioned, whenever this documentation uses the term \"bound\" without backticks it actually means: in the bound state or higher . (i.e. bound , listen-in-progress , listening , connect-in-progress or connected ) In addition to the general error codes documented on the network::error-code type, TCP socket methods may always return error(invalid-state) when in the closed state. Functions [method]tcp-socket.start-bind: func Bind the socket to a specific network on the provided IP address and port. If the IP address is zero ( 0.0.0.0 in IPv4, :: in IPv6), it is left to the implementation to decide which network interface(s) to bind to. If the TCP/UDP port is zero, the socket will be bound to a random free port. Bind can be attempted multiple times on the same socket, even with different arguments on each iteration. But never concurrently and only as long as the previous bind failed. Once a bind succeeds, the binding can't be changed anymore. Typical errors invalid-argument : The local-address has the wrong address family. (EAFNOSUPPORT, EFAULT on Windows) invalid-argument : local-address is not a unicast address. (EINVAL) invalid-argument : local-address is an IPv4-mapped IPv6 address. (EINVAL) invalid-state : The socket is already bound. (EINVAL) address-in-use : No ephemeral ports available. (EADDRINUSE, ENOBUFS on Windows) address-in-use : Address is already in use. (EADDRINUSE) address-not-bindable : local-address is not an address that the network can bind to. (EADDRNOTAVAIL) not-in-progress : A bind operation is not in progress. would-block : Can't finish the operation, it is still in progress. (EWOULDBLOCK, EAGAIN) Implementors note When binding to a non-zero port, this bind operation shouldn't be affected by the TIME_WAIT state of a recently closed socket on the same local address. In practice this means that the SO_REUSEADDR socket option should be set implicitly on all platforms, except on Windows where this is the default behavior and SO_REUSEADDR performs something different entirely. Unlike in POSIX, in WASI the bind operation is async. This enables interactive WASI hosts to inject permission prompts. Runtimes that don't want to make use of this ability can simply call the native bind as part of either start-bind or finish-bind . References https://pubs.opengroup.org/onlinepubs/9699919799/functions/bind.html https://man7.org/linux/man-pages/man2/bind.2.html https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-bind https://man.freebsd.org/cgi/man.cgi?query=bind&sektion=2&format=html Params self : borrow< tcp-socket > network : borrow< network > local-address : ip-socket-address Return values result<_, error-code > [method]tcp-socket.finish-bind: func Params self : borrow< tcp-socket > Return values result<_, error-code > [method]tcp-socket.start-connect: func Connect to a remote endpoint. On success: the socket is transitioned into the connected state. a pair of streams is returned that can be used to read & write to the connection After a failed connection attempt, the socket will be in the closed state and the only valid action left is to drop the socket. A single socket can not be used to connect more than once. Typical errors invalid-argument : The remote-address has the wrong address family. (EAFNOSUPPORT) invalid-argument : remote-address is not a unicast address. (EINVAL, ENETUNREACH on Linux, EAFNOSUPPORT on MacOS) invalid-argument : remote-address is an IPv4-mapped IPv6 address. (EINVAL, EADDRNOTAVAIL on Illumos) invalid-argument : The IP address in remote-address is set to INADDR_ANY ( 0.0.0.0 / :: ). (EADDRNOTAVAIL on Windows) invalid-argument : The port in remote-address is set to 0. (EADDRNOTAVAIL on Windows) invalid-argument : The socket is already attached to a different network. The network passed to connect must be identical to the one passed to bind . invalid-state : The socket is already in the connected state. (EISCONN) invalid-state : The socket is already in the listening state. (EOPNOTSUPP, EINVAL on Windows) timeout : Connection timed out. (ETIMEDOUT) connection-refused : The connection was forcefully rejected. (ECONNREFUSED) connection-reset : The connection was reset. (ECONNRESET) connection-aborted : The connection was aborted. (ECONNABORTED) remote-unreachable : The remote address is not reachable. (EHOSTUNREACH, EHOSTDOWN, ENETUNREACH, ENETDOWN, ENONET) address-in-use : Tried to perform an implicit bind, but there were no ephemeral ports available. (EADDRINUSE, EADDRNOTAVAIL on Linux, EAGAIN on BSD) not-in-progress : A connect operation is not in progress. would-block : Can't finish the operation, it is still in progress. (EWOULDBLOCK, EAGAIN) Implementors note The POSIX equivalent of start-connect is the regular connect syscall. Because all WASI sockets are non-blocking this is expected to return EINPROGRESS, which should be translated to ok() in WASI. The POSIX equivalent of finish-connect is a poll for event POLLOUT with a timeout of 0 on the socket descriptor. Followed by a check for the SO_ERROR socket option, in case the poll signaled readiness. References https://pubs.opengroup.org/onlinepubs/9699919799/functions/connect.html https://man7.org/linux/man-pages/man2/connect.2.html https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-connect https://man.freebsd.org/cgi/man.cgi?connect Params self : borrow< tcp-socket > network : borrow< network > remote-address : ip-socket-address Return values result<_, error-code > [method]tcp-socket.finish-connect: func Params self : borrow< tcp-socket > Return values result<(own< input-stream >, own< output-stream >), error-code > [method]tcp-socket.start-listen: func Start listening for new connections. Transitions the socket into the listening state. Unlike POSIX, the socket must already be explicitly bound. Typical errors invalid-state : The socket is not bound to any local address. (EDESTADDRREQ) invalid-state : The socket is already in the connected state. (EISCONN, EINVAL on BSD) invalid-state : The socket is already in the listening state. address-in-use : Tried to perform an implicit bind, but there were no ephemeral ports available. (EADDRINUSE) not-in-progress : A listen operation is not in progress. would-block : Can't finish the operation, it is still in progress. (EWOULDBLOCK, EAGAIN) Implementors note Unlike in POSIX, in WASI the listen operation is async. This enables interactive WASI hosts to inject permission prompts. Runtimes that don't want to make use of this ability can simply call the native listen as part of either start-listen or finish-listen . References https://pubs.opengroup.org/onlinepubs/9699919799/functions/listen.html https://man7.org/linux/man-pages/man2/listen.2.html https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-listen https://man.freebsd.org/cgi/man.cgi?query=listen&sektion=2 Params self : borrow< tcp-socket > Return values result<_, error-code > [method]tcp-socket.finish-listen: func Params self : borrow< tcp-socket > Return values result<_, error-code > [method]tcp-socket.accept: func Accept a new client socket. The returned socket is bound and in the connected state. The following properties are inherited from the listener socket: address-family keep-alive-enabled keep-alive-idle-time keep-alive-interval keep-alive-count hop-limit receive-buffer-size send-buffer-size On success, this function returns the newly accepted client socket along with a pair of streams that can be used to read & write to the connection. Typical errors invalid-state : Socket is not in the listening state. (EINVAL) would-block : No pending connections at the moment. (EWOULDBLOCK, EAGAIN) connection-aborted : An incoming connection was pending, but was terminated by the client before this listener could accept it. (ECONNABORTED) new-socket-limit : The new socket resource could not be created because of a system limit. (EMFILE, ENFILE) References https://pubs.opengroup.org/onlinepubs/9699919799/functions/accept.html https://man7.org/linux/man-pages/man2/accept.2.html https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-accept https://man.freebsd.org/cgi/man.cgi?query=accept&sektion=2 Params self : borrow< tcp-socket > Return values result<(own< tcp-socket >, own< input-stream >, own< output-stream >), error-code > [method]tcp-socket.local-address: func Get the bound local address. POSIX mentions: If the socket has not been bound to a local name, the value stored in the object pointed to by address is unspecified. WASI is stricter and requires local-address to return invalid-state when the socket hasn't been bound yet. Typical errors invalid-state : The socket is not bound to any local address. References https://pubs.opengroup.org/onlinepubs/9699919799/functions/getsockname.html https://man7.org/linux/man-pages/man2/getsockname.2.html https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-getsockname https://man.freebsd.org/cgi/man.cgi?getsockname Params self : borrow< tcp-socket > Return values result< ip-socket-address , error-code > [method]tcp-socket.remote-address: func Get the remote address. Typical errors invalid-state : The socket is not connected to a remote address. (ENOTCONN) References https://pubs.opengroup.org/onlinepubs/9699919799/functions/getpeername.html https://man7.org/linux/man-pages/man2/getpeername.2.html https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-getpeername https://man.freebsd.org/cgi/man.cgi?query=getpeername&sektion=2&n=1 Params self : borrow< tcp-socket > Return values result< ip-socket-address , error-code > [method]tcp-socket.is-listening: func Whether the socket is in the listening state. Equivalent to the SO_ACCEPTCONN socket option. Params self : borrow< tcp-socket > Return values bool [method]tcp-socket.address-family: func Whether this is a IPv4 or IPv6 socket. Equivalent to the SO_DOMAIN socket option. Params self : borrow< tcp-socket > Return values ip-address-family [method]tcp-socket.set-listen-backlog-size: func Hints the desired listen queue size. Implementations are free to ignore this. If the provided value is 0, an invalid-argument error is returned. Any other value will never cause an error, but it might be silently clamped and/or rounded. Typical errors not-supported : (set) The platform does not support changing the backlog size after the initial listen. invalid-argument : (set) The provided value was 0. invalid-state : (set) The socket is in the connect-in-progress or connected state. Params self : borrow< tcp-socket > value : u64 Return values result<_, error-code > [method]tcp-socket.keep-alive-enabled: func Enables or disables keepalive. The keepalive behavior can be adjusted using: keep-alive-idle-time keep-alive-interval keep-alive-count These properties can be configured while keep-alive-enabled is false, but only come into effect when keep-alive-enabled is true. Equivalent to the SO_KEEPALIVE socket option. Params self : borrow< tcp-socket > Return values result< bool , error-code > [method]tcp-socket.set-keep-alive-enabled: func Params self : borrow< tcp-socket > value : bool Return values result<_, error-code > [method]tcp-socket.keep-alive-idle-time: func Amount of time the connection has to be idle before TCP starts sending keepalive packets. If the provided value is 0, an invalid-argument error is returned. Any other value will never cause an error, but it might be silently clamped and/or rounded. I.e. after setting a value, reading the same setting back may return a different value. Equivalent to the TCP_KEEPIDLE socket option. (TCP_KEEPALIVE on MacOS) Typical errors invalid-argument : (set) The provided value was 0. Params self : borrow< tcp-socket > Return values result< duration , error-code > [method]tcp-socket.set-keep-alive-idle-time: func Params self : borrow< tcp-socket > value : duration Return values result<_, error-code > [method]tcp-socket.keep-alive-interval: func The time between keepalive packets. If the provided value is 0, an invalid-argument error is returned. Any other value will never cause an error, but it might be silently clamped and/or rounded. I.e. after setting a value, reading the same setting back may return a different value. Equivalent to the TCP_KEEPINTVL socket option. Typical errors invalid-argument : (set) The provided value was 0. Params self : borrow< tcp-socket > Return values result< duration , error-code > [method]tcp-socket.set-keep-alive-interval: func Params self : borrow< tcp-socket > value : duration Return values result<_, error-code > [method]tcp-socket.keep-alive-count: func The maximum amount of keepalive packets TCP should send before aborting the connection. If the provided value is 0, an invalid-argument error is returned. Any other value will never cause an error, but it might be silently clamped and/or rounded. I.e. after setting a value, reading the same setting back may return a different value. Equivalent to the TCP_KEEPCNT socket option. Typical errors invalid-argument : (set) The provided value was 0. Params self : borrow< tcp-socket > Return values result< u32 , error-code > [method]tcp-socket.set-keep-alive-count: func Params self : borrow< tcp-socket > value : u32 Return values result<_, error-code > [method]tcp-socket.hop-limit: func Equivalent to the IP_TTL & IPV6_UNICAST_HOPS socket options. If the provided value is 0, an invalid-argument error is returned. Typical errors invalid-argument : (set) The TTL value must be 1 or higher. Params self : borrow< tcp-socket > Return values result< u8 , error-code > [method]tcp-socket.set-hop-limit: func Params self : borrow< tcp-socket > value : u8 Return values result<_, error-code > [method]tcp-socket.receive-buffer-size: func The kernel buffer space reserved for sends/receives on this socket. If the provided value is 0, an invalid-argument error is returned. Any other value will never cause an error, but it might be silently clamped and/or rounded. I.e. after setting a value, reading the same setting back may return a different value. Equivalent to the SO_RCVBUF and SO_SNDBUF socket options. Typical errors invalid-argument : (set) The provided value was 0. Params self : borrow< tcp-socket > Return values result< u64 , error-code > [method]tcp-socket.set-receive-buffer-size: func Params self : borrow< tcp-socket > value : u64 Return values result<_, error-code > [method]tcp-socket.send-buffer-size: func Params self : borrow< tcp-socket > Return values result< u64 , error-code > [method]tcp-socket.set-send-buffer-size: func Params self : borrow< tcp-socket > value : u64 Return values result<_, error-code > [method]tcp-socket.subscribe: func Create a pollable which can be used to poll for, or block on, completion of any of the asynchronous operations of this socket. When finish-bind , finish-listen , finish-connect or accept return error(would-block) , this pollable can be used to wait for their success or failure, after which the method can be retried. The pollable is not limited to the async operation that happens to be in progress at the time of calling subscribe (if any). Theoretically, subscribe only has to be called once per socket and can then be (re)used for the remainder of the socket's lifetime. See https://github.com/WebAssembly/wasi-sockets/blob/main/TcpSocketOperationalSemantics.md#pollable-readiness for more information. Note: this function is here for WASI 0.2 only. It's planned to be removed when future is natively supported in Preview3. Params self : borrow< tcp-socket > Return values own< pollable > [method]tcp-socket.shutdown: func Initiate a graceful shutdown. receive : The socket is not expecting to receive any data from the peer. The input-stream associated with this socket will be closed. Any data still in the receive queue at time of calling this method will be discarded. send : The socket has no more data to send to the peer. The output-stream associated with this socket will be closed and a FIN packet will be sent. both : Same effect as receive & send combined. This function is idempotent; shutting down a direction more than once has no effect and returns ok . The shutdown function does not close (drop) the socket. Typical errors invalid-state : The socket is not in the connected state. (ENOTCONN) References https://pubs.opengroup.org/onlinepubs/9699919799/functions/shutdown.html https://man7.org/linux/man-pages/man2/shutdown.2.html https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-shutdown https://man.freebsd.org/cgi/man.cgi?query=shutdown&sektion=2 Params self : borrow< tcp-socket > shutdown-type : shutdown-type Return values result<_, error-code > Import interface wasi:sockets/tcp-create-socket@0.2.6 Types type network network #### `type error-code` [`error-code`](#error_code) #### `type ip-address-family` [`ip-address-family`](#ip_address_family) #### `type tcp-socket` [`tcp-socket`](#tcp_socket) ---- Functions create-tcp-socket: func Create a new TCP socket. Similar to socket(AF_INET or AF_INET6, SOCK_STREAM, IPPROTO_TCP) in POSIX. On IPv6 sockets, IPV6_V6ONLY is enabled by default and can't be configured otherwise. This function does not require a network capability handle. This is considered to be safe because at time of creation, the socket is not bound to any network yet. Up to the moment bind / connect is called, the socket is effectively an in-memory configuration object, unable to communicate with the outside world. All sockets are non-blocking. Use the wasi-poll interface to block on asynchronous operations. Typical errors not-supported : The specified address-family is not supported. (EAFNOSUPPORT) new-socket-limit : The new socket resource could not be created because of a system limit. (EMFILE, ENFILE) References https://pubs.opengroup.org/onlinepubs/9699919799/functions/socket.html https://man7.org/linux/man-pages/man2/socket.2.html https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsasocketw https://man.freebsd.org/cgi/man.cgi?query=socket&sektion=2 Params address-family : ip-address-family Return values result<own< tcp-socket >, error-code > Import interface wasi:sockets/ip-name-lookup@0.2.6 Types type pollable pollable #### `type network` [`network`](#network) #### `type error-code` [`error-code`](#error_code) #### `type ip-address` [`ip-address`](#ip_address) #### `resource resolve-address-stream` Functions resolve-addresses: func Resolve an internet host name to a list of IP addresses. Unicode domain names are automatically converted to ASCII using IDNA encoding. If the input is an IP address string, the address is parsed and returned as-is without making any external requests. See the wasi-socket proposal README.md for a comparison with getaddrinfo. This function never blocks. It either immediately fails or immediately returns successfully with a resolve-address-stream that can be used to (asynchronously) fetch the results. Typical errors invalid-argument : name is a syntactically invalid domain name or IP address. References: https://pubs.opengroup.org/onlinepubs/9699919799/functions/getaddrinfo.html https://man7.org/linux/man-pages/man3/getaddrinfo.3.html https://learn.microsoft.com/en-us/windows/win32/api/ws2tcpip/nf-ws2tcpip-getaddrinfo https://man.freebsd.org/cgi/man.cgi?query=getaddrinfo&sektion=3 Params network : borrow< network > name : string Return values result<own< resolve-address-stream >, error-code > [method]resolve-address-stream.resolve-next-address: func Returns the next address from the resolver. This function should be called multiple times. On each call, it will return the next address in connection order preference. If all addresses have been exhausted, this function returns none . This function never returns IPv4-mapped IPv6 addresses. Typical errors name-unresolvable : Name does not exist or has no suitable associated IP addresses. (EAI_NONAME, EAI_NODATA, EAI_ADDRFAMILY) temporary-resolver-failure : A temporary failure in name resolution occurred. (EAI_AGAIN) permanent-resolver-failure : A permanent failure in name resolution occurred. (EAI_FAIL) would-block : A result is not available yet. (EWOULDBLOCK, EAGAIN) Params self : borrow< resolve-address-stream > Return values result<option< ip-address >, error-code > [method]resolve-address-stream.subscribe: func Create a pollable which will resolve once the stream is ready for I/O. Note: this function is here for WASI 0.2 only. It's planned to be removed when future is natively supported in Preview3. Params self : borrow< resolve-address-stream > Return values own< pollable > Import interface wasi:random/random@0.2.6 WASI Random is a random data API. It is intended to be portable at least between Unix-family platforms and Windows. Functions get-random-bytes: func Return len cryptographically-secure random or pseudo-random bytes. This function must produce data at least as cryptographically secure and fast as an adequately seeded cryptographically-secure pseudo-random number generator (CSPRNG). It must not block, from the perspective of the calling program, under any circumstances, including on the first request and on requests for numbers of bytes. The returned data must always be unpredictable. This function must always return fresh data. Deterministic environments must omit this function, rather than implementing it with deterministic data. Params len : u64 Return values list< u8 > get-random-u64: func Return a cryptographically-secure random or pseudo-random u64 value. This function returns the same type of data as get-random-bytes , represented as a u64 . Return values u64 Import interface wasi:random/insecure@0.2.6 The insecure interface for insecure pseudo-random numbers. It is intended to be portable at least between Unix-family platforms and Windows. Functions get-insecure-random-bytes: func Return len insecure pseudo-random bytes. This function is not cryptographically secure. Do not use it for anything related to security. There are no requirements on the values of the returned bytes, however implementations are encouraged to return evenly distributed values with a long period. Params len : u64 Return values list< u8 > get-insecure-random-u64: func Return an insecure pseudo-random u64 value. This function returns the same type of pseudo-random data as get-insecure-random-bytes , represented as a u64 . Return values u64 Import interface wasi:random/insecure-seed@0.2.6 The insecure-seed interface for seeding hash-map DoS resistance. It is intended to be portable at least between Unix-family platforms and Windows. Functions insecure-seed: func Return a 128-bit value that may contain a pseudo-random value. The returned value is not required to be computed from a CSPRNG, and may even be entirely deterministic. Host implementations are encouraged to provide pseudo-random values to any program exposed to attacker-controlled content, to enable DoS protection built into many languages' hash-map implementations. This function is intended to only be called once, by a source language to initialize Denial Of Service (DoS) protection in its hash-map implementation. Expected future evolution This will likely be changed to a value import, to prevent it from being called multiple times and potentially used for purposes other than DoS protection. Return values ( u64 , u64 )","title":"Cli"},{"location":"api/wasi-hermes/wasi/clock/","text":"World imports Imports: interface wasi:io/poll@0.2.6 interface wasi:clocks/monotonic-clock@0.2.6 interface wasi:clocks/wall-clock@0.2.6 Import interface wasi:io/poll@0.2.6 A poll API intended to let users wait for I/O events on multiple handles at once. Types resource pollable pollable represents a single I/O event which may be ready, or not. Functions [method]pollable.ready: func Return the readiness of a pollable. This function never blocks. Returns true when the pollable is ready, and false otherwise. Params self : borrow< pollable > Return values bool [method]pollable.block: func block returns immediately if the pollable is ready, and otherwise blocks until ready. This function is equivalent to calling poll.poll on a list containing only this pollable. Params self : borrow< pollable > poll: func Poll for completion on a set of pollables. This function takes a list of pollables, which identify I/O sources of interest, and waits until one or more of the events is ready for I/O. The result list<u32> contains one or more indices of handles in the argument list that is ready for I/O. This function traps if either: the list is empty, or: the list contains more elements than can be indexed with a u32 value. A timeout can be implemented by adding a pollable from the wasi-clocks API to the list. This function does not return a result ; polling in itself does not do any I/O so it doesn't fail. If any of the I/O sources identified by the pollables has an error, it is indicated by marking the source as being ready for I/O. Params in : list<borrow< pollable >> Return values list< u32 > Import interface wasi:clocks/monotonic-clock@0.2.6 WASI Monotonic Clock is a clock API intended to let users measure elapsed time. It is intended to be portable at least between Unix-family platforms and Windows. A monotonic clock is a clock which has an unspecified initial value, and successive reads of the clock will produce non-decreasing values. Types type pollable pollable #### `type instant` `u64` An instant in time, in nanoseconds. An instant is relative to an unspecified initial value, and can only be compared to instances from the same monotonic-clock. type duration u64 A duration of time, in nanoseconds. Functions now: func Read the current value of the clock. The clock is monotonic, therefore calling this function repeatedly will produce a sequence of non-decreasing values. Return values instant resolution: func Query the resolution of the clock. Returns the duration of time corresponding to a clock tick. Return values duration subscribe-instant: func Create a pollable which will resolve once the specified instant has occurred. Params when : instant Return values own< pollable > subscribe-duration: func Create a pollable that will resolve after the specified duration has elapsed from the time this function is invoked. Params when : duration Return values own< pollable > Import interface wasi:clocks/wall-clock@0.2.6 WASI Wall Clock is a clock API intended to let users query the current time. The name \"wall\" makes an analogy to a \"clock on the wall\", which is not necessarily monotonic as it may be reset. It is intended to be portable at least between Unix-family platforms and Windows. A wall clock is a clock which measures the date and time according to some external reference. External references may be reset, so this clock is not necessarily monotonic, making it unsuitable for measuring elapsed time. It is intended for reporting the current date and time for humans. Types record datetime A time and date in seconds plus nanoseconds. Record Fields seconds : u64 nanoseconds : u32 Functions now: func Read the current value of the clock. This clock is not monotonic, therefore calling this function repeatedly will not necessarily produce a sequence of non-decreasing values. The returned timestamps represent the number of seconds since 1970-01-01T00:00:00Z, also known as POSIX's Seconds Since the Epoch , also known as Unix Time . The nanoseconds field of the output is always less than 1000000000. Return values datetime resolution: func Query the resolution of the clock. The nanoseconds field of the output is always less than 1000000000. Return values datetime","title":"Clock"},{"location":"api/wasi-hermes/wasi/filesystem/","text":"World imports Imports: interface wasi:io/error@0.2.6 interface wasi:io/poll@0.2.6 interface wasi:io/streams@0.2.6 interface wasi:clocks/wall-clock@0.2.6 interface wasi:filesystem/types@0.2.6 interface wasi:filesystem/preopens@0.2.6 Import interface wasi:io/error@0.2.6 Types resource error A resource which represents some error information. The only method provided by this resource is to-debug-string , which provides some human-readable information about the error. In the wasi:io package, this resource is returned through the wasi:io/streams/stream-error type. To provide more specific error information, other interfaces may offer functions to \"downcast\" this error into more specific types. For example, errors returned from streams derived from filesystem types can be described using the filesystem's own error-code type. This is done using the function wasi:filesystem/types/filesystem-error-code , which takes a borrow<error> parameter and returns an option<wasi:filesystem/types/error-code> . The set of functions which can \"downcast\" an error into a more concrete type is open. Functions [method]error.to-debug-string: func Returns a string that is suitable to assist humans in debugging this error. WARNING: The returned string should not be consumed mechanically! It may change across platforms, hosts, or other implementation details. Parsing this string is a major platform-compatibility hazard. Params self : borrow< error > Return values string Import interface wasi:io/poll@0.2.6 A poll API intended to let users wait for I/O events on multiple handles at once. Types resource pollable pollable represents a single I/O event which may be ready, or not. Functions [method]pollable.ready: func Return the readiness of a pollable. This function never blocks. Returns true when the pollable is ready, and false otherwise. Params self : borrow< pollable > Return values bool [method]pollable.block: func block returns immediately if the pollable is ready, and otherwise blocks until ready. This function is equivalent to calling poll.poll on a list containing only this pollable. Params self : borrow< pollable > poll: func Poll for completion on a set of pollables. This function takes a list of pollables, which identify I/O sources of interest, and waits until one or more of the events is ready for I/O. The result list<u32> contains one or more indices of handles in the argument list that is ready for I/O. This function traps if either: the list is empty, or: the list contains more elements than can be indexed with a u32 value. A timeout can be implemented by adding a pollable from the wasi-clocks API to the list. This function does not return a result ; polling in itself does not do any I/O so it doesn't fail. If any of the I/O sources identified by the pollables has an error, it is indicated by marking the source as being ready for I/O. Params in : list<borrow< pollable >> Return values list< u32 > Import interface wasi:io/streams@0.2.6 WASI I/O is an I/O abstraction API which is currently focused on providing stream types. In the future, the component model is expected to add built-in stream types; when it does, they are expected to subsume this API. Types type error error #### `type pollable` [`pollable`](#pollable) #### `variant stream-error` An error for input-stream and output-stream operations. Variant Cases last-operation-failed : own< error > The last operation (a write or flush) failed before completion. More information is available in the error payload. After this, the stream will be closed. All future operations return stream-error::closed . closed The stream is closed: no more input will be accepted by the stream. A closed output-stream will return this error on all future operations. resource input-stream An input bytestream. input-stream s are non-blocking to the extent practical on underlying platforms. I/O operations always return promptly; if fewer bytes are promptly available than requested, they return the number of bytes promptly available, which could even be zero. To wait for data to be available, use the subscribe function to obtain a pollable which can be polled for using wasi:io/poll . resource output-stream An output bytestream. output-stream s are non-blocking to the extent practical on underlying platforms. Except where specified otherwise, I/O operations also always return promptly, after the number of bytes that can be written promptly, which could even be zero. To wait for the stream to be ready to accept data, the subscribe function to obtain a pollable which can be polled for using wasi:io/poll . Dropping an output-stream while there's still an active write in progress may result in the data being lost. Before dropping the stream, be sure to fully flush your writes. Functions [method]input-stream.read: func Perform a non-blocking read from the stream. When the source of a read is binary data, the bytes from the source are returned verbatim. When the source of a read is known to the implementation to be text, bytes containing the UTF-8 encoding of the text are returned. This function returns a list of bytes containing the read data, when successful. The returned list will contain up to len bytes; it may return fewer than requested, but not more. The list is empty when no bytes are available for reading at this time. The pollable given by subscribe will be ready when more bytes are available. This function fails with a stream-error when the operation encounters an error, giving last-operation-failed , or when the stream is closed, giving closed . When the caller gives a len of 0, it represents a request to read 0 bytes. If the stream is still open, this call should succeed and return an empty list, or otherwise fail with closed . The len parameter is a u64 , which could represent a list of u8 which is not possible to allocate in wasm32, or not desirable to allocate as as a return value by the callee. The callee may return a list of bytes less than len in size while more bytes are available for reading. Params self : borrow< input-stream > len : u64 Return values result<list< u8 >, stream-error > [method]input-stream.blocking-read: func Read bytes from a stream, after blocking until at least one byte can be read. Except for blocking, behavior is identical to read . Params self : borrow< input-stream > len : u64 Return values result<list< u8 >, stream-error > [method]input-stream.skip: func Skip bytes from a stream. Returns number of bytes skipped. Behaves identical to read , except instead of returning a list of bytes, returns the number of bytes consumed from the stream. Params self : borrow< input-stream > len : u64 Return values result< u64 , stream-error > [method]input-stream.blocking-skip: func Skip bytes from a stream, after blocking until at least one byte can be skipped. Except for blocking behavior, identical to skip . Params self : borrow< input-stream > len : u64 Return values result< u64 , stream-error > [method]input-stream.subscribe: func Create a pollable which will resolve once either the specified stream has bytes available to read or the other end of the stream has been closed. The created pollable is a child resource of the input-stream . Implementations may trap if the input-stream is dropped before all derived pollable s created with this function are dropped. Params self : borrow< input-stream > Return values own< pollable > [method]output-stream.check-write: func Check readiness for writing. This function never blocks. Returns the number of bytes permitted for the next call to write , or an error. Calling write with more bytes than this function has permitted will trap. When this function returns 0 bytes, the subscribe pollable will become ready when this function will report at least 1 byte, or an error. Params self : borrow< output-stream > Return values result< u64 , stream-error > [method]output-stream.write: func Perform a write. This function never blocks. When the destination of a write is binary data, the bytes from contents are written verbatim. When the destination of a write is known to the implementation to be text, the bytes of contents are transcoded from UTF-8 into the encoding of the destination and then written. Precondition: check-write gave permit of Ok(n) and contents has a length of less than or equal to n. Otherwise, this function will trap. returns Err(closed) without writing if the stream has closed since the last call to check-write provided a permit. Params self : borrow< output-stream > contents : list< u8 > Return values result<_, stream-error > [method]output-stream.blocking-write-and-flush: func Perform a write of up to 4096 bytes, and then flush the stream. Block until all of these operations are complete, or an error occurs. This is a convenience wrapper around the use of check-write , subscribe , write , and flush , and is implemented with the following pseudo-code: let pollable = this.subscribe(); while !contents.is_empty() { // Wait for the stream to become writable pollable.block(); let Ok(n) = this.check-write(); // eliding error handling let len = min(n, contents.len()); let (chunk, rest) = contents.split_at(len); this.write(chunk ); // eliding error handling contents = rest; } this.flush(); // Wait for completion of `flush` pollable.block(); // Check for any errors that arose during `flush` let _ = this.check-write(); // eliding error handling Params self : borrow< output-stream > contents : list< u8 > Return values result<_, stream-error > [method]output-stream.flush: func Request to flush buffered output. This function never blocks. This tells the output-stream that the caller intends any buffered output to be flushed. the output which is expected to be flushed is all that has been passed to write prior to this call. Upon calling this function, the output-stream will not accept any writes ( check-write will return ok(0) ) until the flush has completed. The subscribe pollable will become ready when the flush has completed and the stream can accept more writes. Params self : borrow< output-stream > Return values result<_, stream-error > [method]output-stream.blocking-flush: func Request to flush buffered output, and block until flush completes and stream is ready for writing again. Params self : borrow< output-stream > Return values result<_, stream-error > [method]output-stream.subscribe: func Create a pollable which will resolve once the output-stream is ready for more writing, or an error has occurred. When this pollable is ready, check-write will return ok(n) with n>0, or an error. If the stream is closed, this pollable is always ready immediately. The created pollable is a child resource of the output-stream . Implementations may trap if the output-stream is dropped before all derived pollable s created with this function are dropped. Params self : borrow< output-stream > Return values own< pollable > [method]output-stream.write-zeroes: func Write zeroes to a stream. This should be used precisely like write with the exact same preconditions (must use check-write first), but instead of passing a list of bytes, you simply pass the number of zero-bytes that should be written. Params self : borrow< output-stream > len : u64 Return values result<_, stream-error > [method]output-stream.blocking-write-zeroes-and-flush: func Perform a write of up to 4096 zeroes, and then flush the stream. Block until all of these operations are complete, or an error occurs. This is a convenience wrapper around the use of check-write , subscribe , write-zeroes , and flush , and is implemented with the following pseudo-code: let pollable = this.subscribe(); while num_zeroes != 0 { // Wait for the stream to become writable pollable.block(); let Ok(n) = this.check-write(); // eliding error handling let len = min(n, num_zeroes); this.write-zeroes(len); // eliding error handling num_zeroes -= len; } this.flush(); // Wait for completion of `flush` pollable.block(); // Check for any errors that arose during `flush` let _ = this.check-write(); // eliding error handling Params self : borrow< output-stream > len : u64 Return values result<_, stream-error > [method]output-stream.splice: func Read from one stream and write to another. The behavior of splice is equivalent to: calling check-write on the output-stream calling read on the input-stream with the smaller of the check-write permitted length and the len provided to splice calling write on the output-stream with that read data. Any error reported by the call to check-write , read , or write ends the splice and reports that error. This function returns the number of bytes transferred; it may be less than len . Params self : borrow< output-stream > src : borrow< input-stream > len : u64 Return values result< u64 , stream-error > [method]output-stream.blocking-splice: func Read from one stream and write to another, with blocking. This is similar to splice , except that it blocks until the output-stream is ready for writing, and the input-stream is ready for reading, before performing the splice . Params self : borrow< output-stream > src : borrow< input-stream > len : u64 Return values result< u64 , stream-error > Import interface wasi:clocks/wall-clock@0.2.6 WASI Wall Clock is a clock API intended to let users query the current time. The name \"wall\" makes an analogy to a \"clock on the wall\", which is not necessarily monotonic as it may be reset. It is intended to be portable at least between Unix-family platforms and Windows. A wall clock is a clock which measures the date and time according to some external reference. External references may be reset, so this clock is not necessarily monotonic, making it unsuitable for measuring elapsed time. It is intended for reporting the current date and time for humans. Types record datetime A time and date in seconds plus nanoseconds. Record Fields seconds : u64 nanoseconds : u32 Functions now: func Read the current value of the clock. This clock is not monotonic, therefore calling this function repeatedly will not necessarily produce a sequence of non-decreasing values. The returned timestamps represent the number of seconds since 1970-01-01T00:00:00Z, also known as POSIX's Seconds Since the Epoch , also known as Unix Time . The nanoseconds field of the output is always less than 1000000000. Return values datetime resolution: func Query the resolution of the clock. The nanoseconds field of the output is always less than 1000000000. Return values datetime Import interface wasi:filesystem/types@0.2.6 WASI filesystem is a filesystem API primarily intended to let users run WASI programs that access their files on their existing filesystems, without significant overhead. It is intended to be roughly portable between Unix-family platforms and Windows, though it does not hide many of the major differences. Paths are passed as interface-type string s, meaning they must consist of a sequence of Unicode Scalar Values (USVs). Some filesystems may contain paths which are not accessible by this API. The directory separator in WASI is always the forward-slash ( / ). All paths in WASI are relative paths, and are interpreted relative to a descriptor referring to a base directory. If a path argument to any WASI function starts with / , or if any step of resolving a path , including .. and symbolic link steps, reaches a directory outside of the base directory, or reaches a symlink to an absolute or rooted path in the underlying filesystem, the function fails with error-code::not-permitted . For more information about WASI path resolution and sandboxing, see WASI filesystem path resolution . Types type input-stream input-stream #### `type output-stream` [`output-stream`](#output_stream) #### `type error` [`error`](#error) #### `type datetime` [`datetime`](#datetime) #### `type filesize` `u64` File size or length of a region within a file. enum descriptor-type The type of a filesystem object referenced by a descriptor. Note: This was called filetype in earlier versions of WASI. Enum Cases unknown The type of the descriptor or file is unknown or is different from any of the other types specified. block-device The descriptor refers to a block device inode. character-device The descriptor refers to a character device inode. directory The descriptor refers to a directory inode. fifo The descriptor refers to a named pipe. symbolic-link The file refers to a symbolic link inode. regular-file The descriptor refers to a regular file inode. socket The descriptor refers to a socket. flags descriptor-flags Descriptor flags. Note: This was called fdflags in earlier versions of WASI. Flags members read : Read mode: Data can be read. write : Write mode: Data can be written to. file-integrity-sync : Request that writes be performed according to synchronized I/O file integrity completion. The data stored in the file and the file's metadata are synchronized. This is similar to `O_SYNC` in POSIX. The precise semantics of this operation have not yet been defined for WASI. At this time, it should be interpreted as a request, and not a requirement. data-integrity-sync : Request that writes be performed according to synchronized I/O data integrity completion. Only the data stored in the file is synchronized. This is similar to `O_DSYNC` in POSIX. The precise semantics of this operation have not yet been defined for WASI. At this time, it should be interpreted as a request, and not a requirement. requested-write-sync : Requests that reads be performed at the same level of integrity requested for writes. This is similar to `O_RSYNC` in POSIX. The precise semantics of this operation have not yet been defined for WASI. At this time, it should be interpreted as a request, and not a requirement. mutate-directory : Mutating directories mode: Directory contents may be mutated. When this flag is unset on a descriptor, operations using the descriptor which would create, rename, delete, modify the data or metadata of filesystem objects, or obtain another handle which would permit any of those, shall fail with error-code::read-only if they would otherwise succeed. This may only be set on directories. flags path-flags Flags determining the method of how paths are resolved. Flags members symlink-follow : As long as the resolved path corresponds to a symbolic link, it is expanded. flags open-flags Open flags used by open-at . Flags members create : Create file if it does not exist, similar to `O_CREAT` in POSIX. directory : Fail if not a directory, similar to `O_DIRECTORY` in POSIX. exclusive : Fail if file already exists, similar to `O_EXCL` in POSIX. truncate : Truncate file to size 0, similar to `O_TRUNC` in POSIX. type link-count u64 Number of hard links to an inode. record descriptor-stat File attributes. Note: This was called filestat in earlier versions of WASI. Record Fields type : descriptor-type File type. link-count : link-count Number of hard links to the file. size : filesize For regular files, the file size in bytes. For symbolic links, the length in bytes of the pathname contained in the symbolic link. data-access-timestamp : option< datetime > Last data access timestamp. If the option is none, the platform doesn't maintain an access timestamp for this file. data-modification-timestamp : option< datetime > Last data modification timestamp. If the option is none, the platform doesn't maintain a modification timestamp for this file. status-change-timestamp : option< datetime > Last file status-change timestamp. If the option is none, the platform doesn't maintain a status-change timestamp for this file. variant new-timestamp When setting a timestamp, this gives the value to set it to. Variant Cases no-change Leave the timestamp set to its previous value. now Set the timestamp to the current time of the system clock associated with the filesystem. timestamp : datetime Set the timestamp to the given value. record directory-entry A directory entry. Record Fields type : descriptor-type The type of the file referred to by this directory entry. name : string The name of the object. enum error-code Error codes returned by functions, similar to errno in POSIX. Not all of these error codes are returned by the functions provided by this API; some are used in higher-level library layers, and others are provided merely for alignment with POSIX. Enum Cases access Permission denied, similar to `EACCES` in POSIX. would-block Resource unavailable, or operation would block, similar to `EAGAIN` and `EWOULDBLOCK` in POSIX. already Connection already in progress, similar to `EALREADY` in POSIX. bad-descriptor Bad descriptor, similar to `EBADF` in POSIX. busy Device or resource busy, similar to `EBUSY` in POSIX. deadlock Resource deadlock would occur, similar to `EDEADLK` in POSIX. quota Storage quota exceeded, similar to `EDQUOT` in POSIX. exist File exists, similar to `EEXIST` in POSIX. file-too-large File too large, similar to `EFBIG` in POSIX. illegal-byte-sequence Illegal byte sequence, similar to `EILSEQ` in POSIX. in-progress Operation in progress, similar to `EINPROGRESS` in POSIX. interrupted Interrupted function, similar to `EINTR` in POSIX. invalid Invalid argument, similar to `EINVAL` in POSIX. io I/O error, similar to `EIO` in POSIX. is-directory Is a directory, similar to `EISDIR` in POSIX. loop Too many levels of symbolic links, similar to `ELOOP` in POSIX. too-many-links Too many links, similar to `EMLINK` in POSIX. message-size Message too large, similar to `EMSGSIZE` in POSIX. name-too-long Filename too long, similar to `ENAMETOOLONG` in POSIX. no-device No such device, similar to `ENODEV` in POSIX. no-entry No such file or directory, similar to `ENOENT` in POSIX. no-lock No locks available, similar to `ENOLCK` in POSIX. insufficient-memory Not enough space, similar to `ENOMEM` in POSIX. insufficient-space No space left on device, similar to `ENOSPC` in POSIX. not-directory Not a directory or a symbolic link to a directory, similar to `ENOTDIR` in POSIX. not-empty Directory not empty, similar to `ENOTEMPTY` in POSIX. not-recoverable State not recoverable, similar to `ENOTRECOVERABLE` in POSIX. unsupported Not supported, similar to `ENOTSUP` and `ENOSYS` in POSIX. no-tty Inappropriate I/O control operation, similar to `ENOTTY` in POSIX. no-such-device No such device or address, similar to `ENXIO` in POSIX. overflow Value too large to be stored in data type, similar to `EOVERFLOW` in POSIX. not-permitted Operation not permitted, similar to `EPERM` in POSIX. pipe Broken pipe, similar to `EPIPE` in POSIX. read-only Read-only file system, similar to `EROFS` in POSIX. invalid-seek Invalid seek, similar to `ESPIPE` in POSIX. text-file-busy Text file busy, similar to `ETXTBSY` in POSIX. cross-device Cross-device link, similar to `EXDEV` in POSIX. enum advice File or memory access pattern advisory information. Enum Cases normal The application has no advice to give on its behavior with respect to the specified data. sequential The application expects to access the specified data sequentially from lower offsets to higher offsets. random The application expects to access the specified data in a random order. will-need The application expects to access the specified data in the near future. dont-need The application expects that it will not access the specified data in the near future. no-reuse The application expects to access the specified data once and then not reuse it thereafter. record metadata-hash-value A 128-bit hash value, split into parts because wasm doesn't have a 128-bit integer type. Record Fields lower : u64 64 bits of a 128-bit hash value. upper : u64 Another 64 bits of a 128-bit hash value. resource descriptor A descriptor is a reference to a filesystem object, which may be a file, directory, named pipe, special file, or other object on which filesystem calls may be made. resource directory-entry-stream A stream of directory entries. Functions [method]descriptor.read-via-stream: func Return a stream for reading from a file, if available. May fail with an error-code describing why the file cannot be read. Multiple read, write, and append streams may be active on the same open file and they do not interfere with each other. Note: This allows using read-stream , which is similar to read in POSIX. Params self : borrow< descriptor > offset : filesize Return values result<own< input-stream >, error-code > [method]descriptor.write-via-stream: func Return a stream for writing to a file, if available. May fail with an error-code describing why the file cannot be written. Note: This allows using write-stream , which is similar to write in POSIX. Params self : borrow< descriptor > offset : filesize Return values result<own< output-stream >, error-code > [method]descriptor.append-via-stream: func Return a stream for appending to a file, if available. May fail with an error-code describing why the file cannot be appended. Note: This allows using write-stream , which is similar to write with O_APPEND in POSIX. Params self : borrow< descriptor > Return values result<own< output-stream >, error-code > [method]descriptor.advise: func Provide file advisory information on a descriptor. This is similar to posix_fadvise in POSIX. Params self : borrow< descriptor > offset : filesize length : filesize advice : advice Return values result<_, error-code > [method]descriptor.sync-data: func Synchronize the data of a file to disk. This function succeeds with no effect if the file descriptor is not opened for writing. Note: This is similar to fdatasync in POSIX. Params self : borrow< descriptor > Return values result<_, error-code > [method]descriptor.get-flags: func Get flags associated with a descriptor. Note: This returns similar flags to fcntl(fd, F_GETFL) in POSIX. Note: This returns the value that was the fs_flags value returned from fdstat_get in earlier versions of WASI. Params self : borrow< descriptor > Return values result< descriptor-flags , error-code > [method]descriptor.get-type: func Get the dynamic type of a descriptor. Note: This returns the same value as the type field of the fd-stat returned by stat , stat-at and similar. Note: This returns similar flags to the st_mode & S_IFMT value provided by fstat in POSIX. Note: This returns the value that was the fs_filetype value returned from fdstat_get in earlier versions of WASI. Params self : borrow< descriptor > Return values result< descriptor-type , error-code > [method]descriptor.set-size: func Adjust the size of an open file. If this increases the file's size, the extra bytes are filled with zeros. Note: This was called fd_filestat_set_size in earlier versions of WASI. Params self : borrow< descriptor > size : filesize Return values result<_, error-code > [method]descriptor.set-times: func Adjust the timestamps of an open file or directory. Note: This is similar to futimens in POSIX. Note: This was called fd_filestat_set_times in earlier versions of WASI. Params self : borrow< descriptor > data-access-timestamp : new-timestamp data-modification-timestamp : new-timestamp Return values result<_, error-code > [method]descriptor.read: func Read from a descriptor, without using and updating the descriptor's offset. This function returns a list of bytes containing the data that was read, along with a bool which, when true, indicates that the end of the file was reached. The returned list will contain up to length bytes; it may return fewer than requested, if the end of the file is reached or if the I/O operation is interrupted. In the future, this may change to return a stream<u8, error-code> . Note: This is similar to pread in POSIX. Params self : borrow< descriptor > length : filesize offset : filesize Return values result<(list< u8 >, bool ), error-code > [method]descriptor.write: func Write to a descriptor, without using and updating the descriptor's offset. It is valid to write past the end of a file; the file is extended to the extent of the write, with bytes between the previous end and the start of the write set to zero. In the future, this may change to take a stream<u8, error-code> . Note: This is similar to pwrite in POSIX. Params self : borrow< descriptor > buffer : list< u8 > offset : filesize Return values result< filesize , error-code > [method]descriptor.read-directory: func Read directory entries from a directory. On filesystems where directories contain entries referring to themselves and their parents, often named . and .. respectively, these entries are omitted. This always returns a new stream which starts at the beginning of the directory. Multiple streams may be active on the same directory, and they do not interfere with each other. Params self : borrow< descriptor > Return values result<own< directory-entry-stream >, error-code > [method]descriptor.sync: func Synchronize the data and metadata of a file to disk. This function succeeds with no effect if the file descriptor is not opened for writing. Note: This is similar to fsync in POSIX. Params self : borrow< descriptor > Return values result<_, error-code > [method]descriptor.create-directory-at: func Create a directory. Note: This is similar to mkdirat in POSIX. Params self : borrow< descriptor > path : string Return values result<_, error-code > [method]descriptor.stat: func Return the attributes of an open file or directory. Note: This is similar to fstat in POSIX, except that it does not return device and inode information. For testing whether two descriptors refer to the same underlying filesystem object, use is-same-object . To obtain additional data that can be used do determine whether a file has been modified, use metadata-hash . Note: This was called fd_filestat_get in earlier versions of WASI. Params self : borrow< descriptor > Return values result< descriptor-stat , error-code > [method]descriptor.stat-at: func Return the attributes of a file or directory. Note: This is similar to fstatat in POSIX, except that it does not return device and inode information. See the stat description for a discussion of alternatives. Note: This was called path_filestat_get in earlier versions of WASI. Params self : borrow< descriptor > path-flags : path-flags path : string Return values result< descriptor-stat , error-code > [method]descriptor.set-times-at: func Adjust the timestamps of a file or directory. Note: This is similar to utimensat in POSIX. Note: This was called path_filestat_set_times in earlier versions of WASI. Params self : borrow< descriptor > path-flags : path-flags path : string data-access-timestamp : new-timestamp data-modification-timestamp : new-timestamp Return values result<_, error-code > [method]descriptor.link-at: func Create a hard link. Fails with error-code::no-entry if the old path does not exist, with error-code::exist if the new path already exists, and error-code::not-permitted if the old path is not a file. Note: This is similar to linkat in POSIX. Params self : borrow< descriptor > old-path-flags : path-flags old-path : string new-descriptor : borrow< descriptor > new-path : string Return values result<_, error-code > [method]descriptor.open-at: func Open a file or directory. If flags contains descriptor-flags::mutate-directory , and the base descriptor doesn't have descriptor-flags::mutate-directory set, open-at fails with error-code::read-only . If flags contains write or mutate-directory , or open-flags contains truncate or create , and the base descriptor doesn't have descriptor-flags::mutate-directory set, open-at fails with error-code::read-only . Note: This is similar to openat in POSIX. Params self : borrow< descriptor > path-flags : path-flags path : string open-flags : open-flags flags : descriptor-flags Return values result<own< descriptor >, error-code > [method]descriptor.readlink-at: func Read the contents of a symbolic link. If the contents contain an absolute or rooted path in the underlying filesystem, this function fails with error-code::not-permitted . Note: This is similar to readlinkat in POSIX. Params self : borrow< descriptor > path : string Return values result< string , error-code > [method]descriptor.remove-directory-at: func Remove a directory. Return error-code::not-empty if the directory is not empty. Note: This is similar to unlinkat(fd, path, AT_REMOVEDIR) in POSIX. Params self : borrow< descriptor > path : string Return values result<_, error-code > [method]descriptor.rename-at: func Rename a filesystem object. Note: This is similar to renameat in POSIX. Params self : borrow< descriptor > old-path : string new-descriptor : borrow< descriptor > new-path : string Return values result<_, error-code > [method]descriptor.symlink-at: func Create a symbolic link (also known as a \"symlink\"). If old-path starts with / , the function fails with error-code::not-permitted . Note: This is similar to symlinkat in POSIX. Params self : borrow< descriptor > old-path : string new-path : string Return values result<_, error-code > [method]descriptor.unlink-file-at: func Unlink a filesystem object that is not a directory. Return error-code::is-directory if the path refers to a directory. Note: This is similar to unlinkat(fd, path, 0) in POSIX. Params self : borrow< descriptor > path : string Return values result<_, error-code > [method]descriptor.is-same-object: func Test whether two descriptors refer to the same filesystem object. In POSIX, this corresponds to testing whether the two descriptors have the same device ( st_dev ) and inode ( st_ino or d_ino ) numbers. wasi-filesystem does not expose device and inode numbers, so this function may be used instead. Params self : borrow< descriptor > other : borrow< descriptor > Return values bool [method]descriptor.metadata-hash: func Return a hash of the metadata associated with a filesystem object referred to by a descriptor. This returns a hash of the last-modification timestamp and file size, and may also include the inode number, device number, birth timestamp, and other metadata fields that may change when the file is modified or replaced. It may also include a secret value chosen by the implementation and not otherwise exposed. Implementations are encouraged to provide the following properties: If the file is not modified or replaced, the computed hash value should usually not change. If the object is modified or replaced, the computed hash value should usually change. The inputs to the hash should not be easily computable from the computed hash. However, none of these is required. Params self : borrow< descriptor > Return values result< metadata-hash-value , error-code > [method]descriptor.metadata-hash-at: func Return a hash of the metadata associated with a filesystem object referred to by a directory descriptor and a relative path. This performs the same hash computation as metadata-hash . Params self : borrow< descriptor > path-flags : path-flags path : string Return values result< metadata-hash-value , error-code > [method]directory-entry-stream.read-directory-entry: func Read a single directory entry from a directory-entry-stream . Params self : borrow< directory-entry-stream > Return values result<option< directory-entry >, error-code > filesystem-error-code: func Attempts to extract a filesystem-related error-code from the stream error provided. Stream operations which return stream-error::last-operation-failed have a payload with more information about the operation that failed. This payload can be passed through to this function to see if there's filesystem-related information about the error to return. Note that this function is fallible because not all stream-related errors are filesystem-related errors. Params err : borrow< error > Return values option< error-code > Import interface wasi:filesystem/preopens@0.2.6 Types type descriptor descriptor ---- Functions get-directories: func Return the set of preopened directories, and their paths. Return values list<(own< descriptor >, string )>","title":"Filesystem"},{"location":"api/wasi-hermes/wasi/io/","text":"World imports Imports: interface wasi:io/error@0.2.6 interface wasi:io/poll@0.2.6 interface wasi:io/streams@0.2.6 Import interface wasi:io/error@0.2.6 Types resource error A resource which represents some error information. The only method provided by this resource is to-debug-string , which provides some human-readable information about the error. In the wasi:io package, this resource is returned through the wasi:io/streams/stream-error type. To provide more specific error information, other interfaces may offer functions to \"downcast\" this error into more specific types. For example, errors returned from streams derived from filesystem types can be described using the filesystem's own error-code type. This is done using the function wasi:filesystem/types/filesystem-error-code , which takes a borrow<error> parameter and returns an option<wasi:filesystem/types/error-code> . The set of functions which can \"downcast\" an error into a more concrete type is open. Functions [method]error.to-debug-string: func Returns a string that is suitable to assist humans in debugging this error. WARNING: The returned string should not be consumed mechanically! It may change across platforms, hosts, or other implementation details. Parsing this string is a major platform-compatibility hazard. Params self : borrow< error > Return values string Import interface wasi:io/poll@0.2.6 A poll API intended to let users wait for I/O events on multiple handles at once. Types resource pollable pollable represents a single I/O event which may be ready, or not. Functions [method]pollable.ready: func Return the readiness of a pollable. This function never blocks. Returns true when the pollable is ready, and false otherwise. Params self : borrow< pollable > Return values bool [method]pollable.block: func block returns immediately if the pollable is ready, and otherwise blocks until ready. This function is equivalent to calling poll.poll on a list containing only this pollable. Params self : borrow< pollable > poll: func Poll for completion on a set of pollables. This function takes a list of pollables, which identify I/O sources of interest, and waits until one or more of the events is ready for I/O. The result list<u32> contains one or more indices of handles in the argument list that is ready for I/O. This function traps if either: the list is empty, or: the list contains more elements than can be indexed with a u32 value. A timeout can be implemented by adding a pollable from the wasi-clocks API to the list. This function does not return a result ; polling in itself does not do any I/O so it doesn't fail. If any of the I/O sources identified by the pollables has an error, it is indicated by marking the source as being ready for I/O. Params in : list<borrow< pollable >> Return values list< u32 > Import interface wasi:io/streams@0.2.6 WASI I/O is an I/O abstraction API which is currently focused on providing stream types. In the future, the component model is expected to add built-in stream types; when it does, they are expected to subsume this API. Types type error error #### `type pollable` [`pollable`](#pollable) #### `variant stream-error` An error for input-stream and output-stream operations. Variant Cases last-operation-failed : own< error > The last operation (a write or flush) failed before completion. More information is available in the error payload. After this, the stream will be closed. All future operations return stream-error::closed . closed The stream is closed: no more input will be accepted by the stream. A closed output-stream will return this error on all future operations. resource input-stream An input bytestream. input-stream s are non-blocking to the extent practical on underlying platforms. I/O operations always return promptly; if fewer bytes are promptly available than requested, they return the number of bytes promptly available, which could even be zero. To wait for data to be available, use the subscribe function to obtain a pollable which can be polled for using wasi:io/poll . resource output-stream An output bytestream. output-stream s are non-blocking to the extent practical on underlying platforms. Except where specified otherwise, I/O operations also always return promptly, after the number of bytes that can be written promptly, which could even be zero. To wait for the stream to be ready to accept data, the subscribe function to obtain a pollable which can be polled for using wasi:io/poll . Dropping an output-stream while there's still an active write in progress may result in the data being lost. Before dropping the stream, be sure to fully flush your writes. Functions [method]input-stream.read: func Perform a non-blocking read from the stream. When the source of a read is binary data, the bytes from the source are returned verbatim. When the source of a read is known to the implementation to be text, bytes containing the UTF-8 encoding of the text are returned. This function returns a list of bytes containing the read data, when successful. The returned list will contain up to len bytes; it may return fewer than requested, but not more. The list is empty when no bytes are available for reading at this time. The pollable given by subscribe will be ready when more bytes are available. This function fails with a stream-error when the operation encounters an error, giving last-operation-failed , or when the stream is closed, giving closed . When the caller gives a len of 0, it represents a request to read 0 bytes. If the stream is still open, this call should succeed and return an empty list, or otherwise fail with closed . The len parameter is a u64 , which could represent a list of u8 which is not possible to allocate in wasm32, or not desirable to allocate as as a return value by the callee. The callee may return a list of bytes less than len in size while more bytes are available for reading. Params self : borrow< input-stream > len : u64 Return values result<list< u8 >, stream-error > [method]input-stream.blocking-read: func Read bytes from a stream, after blocking until at least one byte can be read. Except for blocking, behavior is identical to read . Params self : borrow< input-stream > len : u64 Return values result<list< u8 >, stream-error > [method]input-stream.skip: func Skip bytes from a stream. Returns number of bytes skipped. Behaves identical to read , except instead of returning a list of bytes, returns the number of bytes consumed from the stream. Params self : borrow< input-stream > len : u64 Return values result< u64 , stream-error > [method]input-stream.blocking-skip: func Skip bytes from a stream, after blocking until at least one byte can be skipped. Except for blocking behavior, identical to skip . Params self : borrow< input-stream > len : u64 Return values result< u64 , stream-error > [method]input-stream.subscribe: func Create a pollable which will resolve once either the specified stream has bytes available to read or the other end of the stream has been closed. The created pollable is a child resource of the input-stream . Implementations may trap if the input-stream is dropped before all derived pollable s created with this function are dropped. Params self : borrow< input-stream > Return values own< pollable > [method]output-stream.check-write: func Check readiness for writing. This function never blocks. Returns the number of bytes permitted for the next call to write , or an error. Calling write with more bytes than this function has permitted will trap. When this function returns 0 bytes, the subscribe pollable will become ready when this function will report at least 1 byte, or an error. Params self : borrow< output-stream > Return values result< u64 , stream-error > [method]output-stream.write: func Perform a write. This function never blocks. When the destination of a write is binary data, the bytes from contents are written verbatim. When the destination of a write is known to the implementation to be text, the bytes of contents are transcoded from UTF-8 into the encoding of the destination and then written. Precondition: check-write gave permit of Ok(n) and contents has a length of less than or equal to n. Otherwise, this function will trap. returns Err(closed) without writing if the stream has closed since the last call to check-write provided a permit. Params self : borrow< output-stream > contents : list< u8 > Return values result<_, stream-error > [method]output-stream.blocking-write-and-flush: func Perform a write of up to 4096 bytes, and then flush the stream. Block until all of these operations are complete, or an error occurs. This is a convenience wrapper around the use of check-write , subscribe , write , and flush , and is implemented with the following pseudo-code: let pollable = this.subscribe(); while !contents.is_empty() { // Wait for the stream to become writable pollable.block(); let Ok(n) = this.check-write(); // eliding error handling let len = min(n, contents.len()); let (chunk, rest) = contents.split_at(len); this.write(chunk ); // eliding error handling contents = rest; } this.flush(); // Wait for completion of `flush` pollable.block(); // Check for any errors that arose during `flush` let _ = this.check-write(); // eliding error handling Params self : borrow< output-stream > contents : list< u8 > Return values result<_, stream-error > [method]output-stream.flush: func Request to flush buffered output. This function never blocks. This tells the output-stream that the caller intends any buffered output to be flushed. the output which is expected to be flushed is all that has been passed to write prior to this call. Upon calling this function, the output-stream will not accept any writes ( check-write will return ok(0) ) until the flush has completed. The subscribe pollable will become ready when the flush has completed and the stream can accept more writes. Params self : borrow< output-stream > Return values result<_, stream-error > [method]output-stream.blocking-flush: func Request to flush buffered output, and block until flush completes and stream is ready for writing again. Params self : borrow< output-stream > Return values result<_, stream-error > [method]output-stream.subscribe: func Create a pollable which will resolve once the output-stream is ready for more writing, or an error has occurred. When this pollable is ready, check-write will return ok(n) with n>0, or an error. If the stream is closed, this pollable is always ready immediately. The created pollable is a child resource of the output-stream . Implementations may trap if the output-stream is dropped before all derived pollable s created with this function are dropped. Params self : borrow< output-stream > Return values own< pollable > [method]output-stream.write-zeroes: func Write zeroes to a stream. This should be used precisely like write with the exact same preconditions (must use check-write first), but instead of passing a list of bytes, you simply pass the number of zero-bytes that should be written. Params self : borrow< output-stream > len : u64 Return values result<_, stream-error > [method]output-stream.blocking-write-zeroes-and-flush: func Perform a write of up to 4096 zeroes, and then flush the stream. Block until all of these operations are complete, or an error occurs. This is a convenience wrapper around the use of check-write , subscribe , write-zeroes , and flush , and is implemented with the following pseudo-code: let pollable = this.subscribe(); while num_zeroes != 0 { // Wait for the stream to become writable pollable.block(); let Ok(n) = this.check-write(); // eliding error handling let len = min(n, num_zeroes); this.write-zeroes(len); // eliding error handling num_zeroes -= len; } this.flush(); // Wait for completion of `flush` pollable.block(); // Check for any errors that arose during `flush` let _ = this.check-write(); // eliding error handling Params self : borrow< output-stream > len : u64 Return values result<_, stream-error > [method]output-stream.splice: func Read from one stream and write to another. The behavior of splice is equivalent to: calling check-write on the output-stream calling read on the input-stream with the smaller of the check-write permitted length and the len provided to splice calling write on the output-stream with that read data. Any error reported by the call to check-write , read , or write ends the splice and reports that error. This function returns the number of bytes transferred; it may be less than len . Params self : borrow< output-stream > src : borrow< input-stream > len : u64 Return values result< u64 , stream-error > [method]output-stream.blocking-splice: func Read from one stream and write to another, with blocking. This is similar to splice , except that it blocks until the output-stream is ready for writing, and the input-stream is ready for reading, before performing the splice . Params self : borrow< output-stream > src : borrow< input-stream > len : u64 Return values result< u64 , stream-error >","title":"Io"},{"location":"api/wasi-hermes/wasi/random/","text":"World imports Imports: interface wasi:random/random@0.2.6 interface wasi:random/insecure@0.2.6 interface wasi:random/insecure-seed@0.2.6 Import interface wasi:random/random@0.2.6 WASI Random is a random data API. It is intended to be portable at least between Unix-family platforms and Windows. Functions get-random-bytes: func Return len cryptographically-secure random or pseudo-random bytes. This function must produce data at least as cryptographically secure and fast as an adequately seeded cryptographically-secure pseudo-random number generator (CSPRNG). It must not block, from the perspective of the calling program, under any circumstances, including on the first request and on requests for numbers of bytes. The returned data must always be unpredictable. This function must always return fresh data. Deterministic environments must omit this function, rather than implementing it with deterministic data. Params len : u64 Return values list< u8 > get-random-u64: func Return a cryptographically-secure random or pseudo-random u64 value. This function returns the same type of data as get-random-bytes , represented as a u64 . Return values u64 Import interface wasi:random/insecure@0.2.6 The insecure interface for insecure pseudo-random numbers. It is intended to be portable at least between Unix-family platforms and Windows. Functions get-insecure-random-bytes: func Return len insecure pseudo-random bytes. This function is not cryptographically secure. Do not use it for anything related to security. There are no requirements on the values of the returned bytes, however implementations are encouraged to return evenly distributed values with a long period. Params len : u64 Return values list< u8 > get-insecure-random-u64: func Return an insecure pseudo-random u64 value. This function returns the same type of pseudo-random data as get-insecure-random-bytes , represented as a u64 . Return values u64 Import interface wasi:random/insecure-seed@0.2.6 The insecure-seed interface for seeding hash-map DoS resistance. It is intended to be portable at least between Unix-family platforms and Windows. Functions insecure-seed: func Return a 128-bit value that may contain a pseudo-random value. The returned value is not required to be computed from a CSPRNG, and may even be entirely deterministic. Host implementations are encouraged to provide pseudo-random values to any program exposed to attacker-controlled content, to enable DoS protection built into many languages' hash-map implementations. This function is intended to only be called once, by a source language to initialize Denial Of Service (DoS) protection in its hash-map implementation. Expected future evolution This will likely be changed to a value import, to prevent it from being called multiple times and potentially used for purposes other than DoS protection. Return values ( u64 , u64 )","title":"Random"},{"location":"appendix/","text":"Appendix \u00b6 The appendix contains collections of extra information and examples relevant to Hermes.","title":"Appendix"},{"location":"appendix/#appendix","text":"The appendix contains collections of extra information and examples relevant to Hermes.","title":"Appendix"},{"location":"appendix/tags/","text":"Tag Index \u00b6 [TAGS]","title":"Tag Index"},{"location":"appendix/tags/#tag-index","text":"[TAGS]","title":"Tag Index"},{"location":"appendix/important/","text":"Important \u00b6","title":"Important"},{"location":"appendix/important/#important","text":"","title":"Important"},{"location":"appendix/important/coc/","text":"Contributor Covenant Code of Conduct \u00b6 Our Pledge \u00b6 We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community. Our Standards \u00b6 Examples of behavior that contributes to a positive environment for our community include: Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community Examples of unacceptable behavior include: The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Enforcement Responsibilities \u00b6 Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful. Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate. Scope \u00b6 This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Enforcement \u00b6 Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at conduct@iohk.io . All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter of any incident. Enforcement Guidelines \u00b6 Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct: 1. Correction \u00b6 Community Impact : Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community. Consequence : A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested. 2. Warning \u00b6 Community Impact : A violation through a single incident or series of actions. Consequence : A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban. 3. Temporary Ban \u00b6 Community Impact : A serious violation of community standards, including sustained inappropriate behavior. Consequence : A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban. 4. Permanent Ban \u00b6 Community Impact : Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals. Consequence : A permanent ban from any sort of public interaction within the community. Attribution \u00b6 This Code of Conduct is adapted from the Contributor Covenant , version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html . Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder . For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq . Translations are available at https://www.contributor-covenant.org/translations .","title":"Coc"},{"location":"appendix/important/coc/#contributor-covenant-code-of-conduct","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"appendix/important/coc/#our-pledge","text":"We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.","title":"Our Pledge"},{"location":"appendix/important/coc/#our-standards","text":"Examples of behavior that contributes to a positive environment for our community include: Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community Examples of unacceptable behavior include: The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"appendix/important/coc/#enforcement-responsibilities","text":"Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful. Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.","title":"Enforcement Responsibilities"},{"location":"appendix/important/coc/#scope","text":"This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.","title":"Scope"},{"location":"appendix/important/coc/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at conduct@iohk.io . All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter of any incident.","title":"Enforcement"},{"location":"appendix/important/coc/#enforcement-guidelines","text":"Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:","title":"Enforcement Guidelines"},{"location":"appendix/important/coc/#1-correction","text":"Community Impact : Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community. Consequence : A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.","title":"1. Correction"},{"location":"appendix/important/coc/#2-warning","text":"Community Impact : A violation through a single incident or series of actions. Consequence : A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.","title":"2. Warning"},{"location":"appendix/important/coc/#3-temporary-ban","text":"Community Impact : A serious violation of community standards, including sustained inappropriate behavior. Consequence : A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.","title":"3. Temporary Ban"},{"location":"appendix/important/coc/#4-permanent-ban","text":"Community Impact : Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals. Consequence : A permanent ban from any sort of public interaction within the community.","title":"4. Permanent Ban"},{"location":"appendix/important/coc/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html . Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder . For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq . Translations are available at https://www.contributor-covenant.org/translations .","title":"Attribution"},{"location":"appendix/important/contributing/","text":"Contributing to Hermes \u00b6 First off, thanks for taking the time to contribute! \u2764\ufe0f Contributing to Hermes Code of Conduct I Have a Question I Want To Contribute Reporting Bugs Before Submitting a Bug Report How Do I Submit a Good Bug Report? Suggesting Enhancements Before Submitting an Enhancement How Do I Submit a Good Enhancement Suggestion? Your First Code Contribution Improving The Documentation Style guides Rust Dart Flutter Commit Messages All types of contributions are encouraged and valued. Please make sure to read the relevant section before making your contribution. It will make it a lot easier for us maintainers and smooth out the experience for all involved. The community looks forward to your contributions. \ud83c\udf89 Code of Conduct \u00b6 This project and everyone participating in it is governed by the Hermes Code of Conduct . By participating, you are expected to uphold this code. Please report unacceptable behavior to code-of-conduct@iohk.io . I Have a Question \u00b6 If you want to ask a question, we assume that you have read the available Documentation . Before you ask a question, it is best to search for existing Issues that might help you. In case you have found a suitable issue and still need clarification, you can write your question here . It is also advisable to search the internet for answers first. If you then still feel the need to ask a question and need clarification, we recommend the following: Open an Issue . Provide as much context as you can about what you're running into. Provide project and platform versions ( rustc --version --verbose , flutter doctor -v , etc), depending on what seems relevant. We will then take care of the issue as soon as possible. I Want To Contribute \u00b6 Reporting Bugs \u00b6 Before Submitting a Bug Report \u00b6 A good bug report shouldn't leave others needing to chase you up for more information. Therefore, we ask you to investigate carefully, collect information and describe the issue in detail in your report. Please complete the following steps in advance to help us fix any potential bug as fast as possible. Make sure that you are using the latest version. Determine if your bug is really a bug and not an error on your side. e.g. using incompatible environment components/versions (Make sure that you have read the documentation . If you are looking for support, you might want to check this section . To see if other users have experienced (and potentially already solved) the same issue you are having. Check if there is not already a bug report existing for your bug or error in the bug tracker . Also make sure to search the internet (including Stack Overflow) to see if users outside the GitHub community have discussed the issue. Collect information about the bug: Stack trace (Traceback) OS, Platform and Version (Windows, Linux, macOS, x86, ARM) Version of the interpreter, compiler, SDK, runtime environment, package manager, depending on what seems relevant. Possibly your input and the output Can you reliably reproduce the issue? And can you also reproduce it with older versions? How Do I Submit a Good Bug Report? \u00b6 You must never report security related issues, vulnerabilities or bugs including sensitive information to the issue tracker, or elsewhere in public. Instead sensitive bugs must be sent by email to security@iohk.io . We use GitHub issues to track bugs and errors. If you run into an issue with the project: Open an Issue . (Since we can't be sure at this point whether it is a bug or not, we ask you not to talk about a bug yet and not to label the issue.) Explain the behavior you would expect and the actual behavior. Please provide as much context as possible. Describe the reproduction steps that someone else can follow to recreate the issue on their own. This usually includes your code. For good bug reports you should isolate the problem and create a reduced test case. Provide the information you collected in the previous section. Once it's filed: The project team will label the issue accordingly. A team member will try to reproduce the issue with your provided steps. If there are no reproduction steps or no obvious way to reproduce the issue, the team will ask you for those steps. The issue would then be marked as needs-repro . Bugs with the needs-repro tag will not be addressed until they are reproduced. If the team is able to reproduce the issue, it will be marked bug . It may possibly be marked with other tags (such as critical ). The issue will then be left to be implemented by someone . Suggesting Enhancements \u00b6 This section guides you through submitting an enhancement suggestion for Hermes, including completely new features and minor improvements to existing functionality . Following these guidelines will help maintainers and the community to understand your suggestion and find related suggestions. Before Submitting an Enhancement \u00b6 Make sure that you are using the latest version. Read the documentation carefully. Find out if the functionality is already covered, maybe by an individual configuration. Perform a search to see if the enhancement has already been suggested. If it has, add a comment to the existing issue instead of opening a new one. Find out whether your idea fits with the scope and aims of the project. It's up to you to make a strong case to convince the project's developers of the merits of this feature. Keep in mind that we want features that will be useful to the majority of our users and not just a small subset. If you're just targeting a minority of users, consider writing an add-on/plugin library. How Do I Submit a Good Enhancement Suggestion? \u00b6 Enhancement suggestions are tracked as GitHub issues . Use a clear and descriptive title for the issue to identify the suggestion. Provide a step-by-step description of the suggested enhancement in as many details as possible. Describe the current behavior and explain which behavior you expected to see instead and why. At this point you can also tell which alternatives do not work for you. You may want to include screenshots and animated GIFs . This can help you demonstrate the steps or point out the part which the suggestion is related to. You can use this tool to record GIFs on macOS and Windows, and this tool or this tool on Linux. Explain why this enhancement would be useful to most Hermes users. You may also want to point out the other projects that solved it better and which could serve as inspiration. Your First Code Contribution \u00b6 Embarking on your first code contribution can be an exhilarating yet intimidating endeavor. Here at Hermes, we foster a welcoming and supportive environment to ensure that everyone can contribute to the codebase irrespective of their experience level. Below is a step-by-step guide to making your first code contribution to our repository: Set Up Your Environment : Fork the repository to your GitHub account. Clone your fork locally on your machine. Set up the development environment following the instructions in the README. Pick an Issue : Browse through the open issues in the GitHub repository. Pick an issue that interests you and aligns with your skills. Beginners might look for issues tagged as good first issue or beginner-friendly . Understand the Issue : Thoroughly read through the issue to understand the problem. Ask clarifying questions in the issue thread if necessary. Branch Out : Create a new branch on your local machine to work on the issue. It's a good practice to name your branch descriptively, e.g., fix-button-bug. Work on the Issue : Work on the issue in your local development environment. Adhere to the coding standards and guidelines provided in the Style guides section. Test Your Changes : Ensure that your changes are well-tested. Verify that your changes don't break any existing functionality. Commit Your Changes : Write a clear and concise commit message following the Style guides -> Commit Messages section guidelines. Push Your Changes : Push your changes to your fork on GitHub. Open a Pull Request : Open a pull request from your fork to the main repository. Provide a detailed description of your changes, the issue it addresses, and any additional information that might help maintainers review your contribution. Review and Revision : Respond to any feedback from the maintainers. Make necessary revisions to your code. Merge and Celebrate : Once your pull request is approved, it will be merged into the main codebase. Celebrate your contribution and share it with the community! Remember, every contributor was new at some point, and we are thrilled to welcome new members to our community. The journey of becoming an adept open-source contributor is rewarding and educational. Your contribution, no matter how small, can make a significant impact. Happy coding! Improving The Documentation \u00b6 Documentation is a cornerstone of any successful open-source project. It aids developers in understanding the purpose, structure, and functioning of the code, making the project accessible to all, irrespective of their level of expertise. Our project thrives on the contributions from the community, and improving the documentation is one of the significant ways you can contribute. Here are some ways you could help improve our documentation: Clarification : If you find any ambiguous or unclear documentation, feel free to clarify the wording or suggest improvements through a pull request. Expansion : If areas of the documentation are lacking in detail or missing altogether, contributing expanded explanations or new sections is highly encouraged. Correction : Spot a mistake? Whether it's a spelling error, grammatical error, or incorrect information, your corrections are welcome. Examples : Adding examples to the documentation can significantly enhance utility. If you have examples that illustrate the use of our code, we'd love to include them. Consistency : Ensure the documentation maintains a consistent style and tone. Adhering to the style guidelines specified in our Style guides section is crucial. Technical Accuracy : Ensure that the documentation reflects the current state of the codebase and is technically accurate. Your contributions should follow the guidelines specified in our Style guides section to maintain high quality and consistency. Before making a substantial change, it's a good practice to open an issue to discuss the proposed changes or find an existing issue to work on. Together, we can ensure that our documentation is a valuable resource for all new and experienced developers. Style guides \u00b6 Rust \u00b6 For Rust, we follow the Rust Style Guide . Dart \u00b6 For Dart, we follow the Effective Dart style guide. Flutter \u00b6 For Flutter, we follow the Flutter Style Guide . Commit Messages \u00b6 Clear and consistent commit messages are crucial for maintaining a readable history in our collaborative environment. Adhering to a structured commit message format also enables us to generate changelogs and navigate through the project's history more efficiently. We follow the Conventional Commits standard for all commit messages in this repository. Here's a brief overview of the Conventional Commits standard: Type : The type of change being made (e.g., feat, fix, chore, docs, style, refactor, perf, test). Scope (Optional) : The scope of the change, denoting what part of the codebase is being altered. Description : A short, descriptive message of the change, written in the imperative mood. Format: <type>(<scope>): <description> Example: feat(button): add a 'submit' button to form component fix(modal): resolve issue with modal overlay not closing chore(tests): update unit tests for utilities module Breaking Changes : If your commit introduces a breaking change, it should be flagged with a ! after the type. Include BREAKING CHANGE: in the body or footer of the commit message to describe what changed and its implications. Example: feat!(dropdown): change the behavior of dropdown component BREAKING CHANGE: alters dropdown trigger to be activated on hover instead of on click. Footer (Optional) : Any additional metadata regarding your commit, such as related issue trackers or BREAKING CHANGE annotations. Following this format makes the version control history readable and reflects professionalism and foresight in maintaining a clean, well-documented codebase.","title":"Contributing"},{"location":"appendix/important/contributing/#contributing-to-hermes","text":"First off, thanks for taking the time to contribute! \u2764\ufe0f Contributing to Hermes Code of Conduct I Have a Question I Want To Contribute Reporting Bugs Before Submitting a Bug Report How Do I Submit a Good Bug Report? Suggesting Enhancements Before Submitting an Enhancement How Do I Submit a Good Enhancement Suggestion? Your First Code Contribution Improving The Documentation Style guides Rust Dart Flutter Commit Messages All types of contributions are encouraged and valued. Please make sure to read the relevant section before making your contribution. It will make it a lot easier for us maintainers and smooth out the experience for all involved. The community looks forward to your contributions. \ud83c\udf89","title":"Contributing to Hermes"},{"location":"appendix/important/contributing/#code-of-conduct","text":"This project and everyone participating in it is governed by the Hermes Code of Conduct . By participating, you are expected to uphold this code. Please report unacceptable behavior to code-of-conduct@iohk.io .","title":"Code of Conduct"},{"location":"appendix/important/contributing/#i-have-a-question","text":"If you want to ask a question, we assume that you have read the available Documentation . Before you ask a question, it is best to search for existing Issues that might help you. In case you have found a suitable issue and still need clarification, you can write your question here . It is also advisable to search the internet for answers first. If you then still feel the need to ask a question and need clarification, we recommend the following: Open an Issue . Provide as much context as you can about what you're running into. Provide project and platform versions ( rustc --version --verbose , flutter doctor -v , etc), depending on what seems relevant. We will then take care of the issue as soon as possible.","title":"I Have a Question"},{"location":"appendix/important/contributing/#i-want-to-contribute","text":"","title":"I Want To Contribute"},{"location":"appendix/important/contributing/#reporting-bugs","text":"","title":"Reporting Bugs"},{"location":"appendix/important/contributing/#before-submitting-a-bug-report","text":"A good bug report shouldn't leave others needing to chase you up for more information. Therefore, we ask you to investigate carefully, collect information and describe the issue in detail in your report. Please complete the following steps in advance to help us fix any potential bug as fast as possible. Make sure that you are using the latest version. Determine if your bug is really a bug and not an error on your side. e.g. using incompatible environment components/versions (Make sure that you have read the documentation . If you are looking for support, you might want to check this section . To see if other users have experienced (and potentially already solved) the same issue you are having. Check if there is not already a bug report existing for your bug or error in the bug tracker . Also make sure to search the internet (including Stack Overflow) to see if users outside the GitHub community have discussed the issue. Collect information about the bug: Stack trace (Traceback) OS, Platform and Version (Windows, Linux, macOS, x86, ARM) Version of the interpreter, compiler, SDK, runtime environment, package manager, depending on what seems relevant. Possibly your input and the output Can you reliably reproduce the issue? And can you also reproduce it with older versions?","title":"Before Submitting a Bug Report"},{"location":"appendix/important/contributing/#how-do-i-submit-a-good-bug-report","text":"You must never report security related issues, vulnerabilities or bugs including sensitive information to the issue tracker, or elsewhere in public. Instead sensitive bugs must be sent by email to security@iohk.io . We use GitHub issues to track bugs and errors. If you run into an issue with the project: Open an Issue . (Since we can't be sure at this point whether it is a bug or not, we ask you not to talk about a bug yet and not to label the issue.) Explain the behavior you would expect and the actual behavior. Please provide as much context as possible. Describe the reproduction steps that someone else can follow to recreate the issue on their own. This usually includes your code. For good bug reports you should isolate the problem and create a reduced test case. Provide the information you collected in the previous section. Once it's filed: The project team will label the issue accordingly. A team member will try to reproduce the issue with your provided steps. If there are no reproduction steps or no obvious way to reproduce the issue, the team will ask you for those steps. The issue would then be marked as needs-repro . Bugs with the needs-repro tag will not be addressed until they are reproduced. If the team is able to reproduce the issue, it will be marked bug . It may possibly be marked with other tags (such as critical ). The issue will then be left to be implemented by someone .","title":"How Do I Submit a Good Bug Report?"},{"location":"appendix/important/contributing/#suggesting-enhancements","text":"This section guides you through submitting an enhancement suggestion for Hermes, including completely new features and minor improvements to existing functionality . Following these guidelines will help maintainers and the community to understand your suggestion and find related suggestions.","title":"Suggesting Enhancements"},{"location":"appendix/important/contributing/#before-submitting-an-enhancement","text":"Make sure that you are using the latest version. Read the documentation carefully. Find out if the functionality is already covered, maybe by an individual configuration. Perform a search to see if the enhancement has already been suggested. If it has, add a comment to the existing issue instead of opening a new one. Find out whether your idea fits with the scope and aims of the project. It's up to you to make a strong case to convince the project's developers of the merits of this feature. Keep in mind that we want features that will be useful to the majority of our users and not just a small subset. If you're just targeting a minority of users, consider writing an add-on/plugin library.","title":"Before Submitting an Enhancement"},{"location":"appendix/important/contributing/#how-do-i-submit-a-good-enhancement-suggestion","text":"Enhancement suggestions are tracked as GitHub issues . Use a clear and descriptive title for the issue to identify the suggestion. Provide a step-by-step description of the suggested enhancement in as many details as possible. Describe the current behavior and explain which behavior you expected to see instead and why. At this point you can also tell which alternatives do not work for you. You may want to include screenshots and animated GIFs . This can help you demonstrate the steps or point out the part which the suggestion is related to. You can use this tool to record GIFs on macOS and Windows, and this tool or this tool on Linux. Explain why this enhancement would be useful to most Hermes users. You may also want to point out the other projects that solved it better and which could serve as inspiration.","title":"How Do I Submit a Good Enhancement Suggestion?"},{"location":"appendix/important/contributing/#your-first-code-contribution","text":"Embarking on your first code contribution can be an exhilarating yet intimidating endeavor. Here at Hermes, we foster a welcoming and supportive environment to ensure that everyone can contribute to the codebase irrespective of their experience level. Below is a step-by-step guide to making your first code contribution to our repository: Set Up Your Environment : Fork the repository to your GitHub account. Clone your fork locally on your machine. Set up the development environment following the instructions in the README. Pick an Issue : Browse through the open issues in the GitHub repository. Pick an issue that interests you and aligns with your skills. Beginners might look for issues tagged as good first issue or beginner-friendly . Understand the Issue : Thoroughly read through the issue to understand the problem. Ask clarifying questions in the issue thread if necessary. Branch Out : Create a new branch on your local machine to work on the issue. It's a good practice to name your branch descriptively, e.g., fix-button-bug. Work on the Issue : Work on the issue in your local development environment. Adhere to the coding standards and guidelines provided in the Style guides section. Test Your Changes : Ensure that your changes are well-tested. Verify that your changes don't break any existing functionality. Commit Your Changes : Write a clear and concise commit message following the Style guides -> Commit Messages section guidelines. Push Your Changes : Push your changes to your fork on GitHub. Open a Pull Request : Open a pull request from your fork to the main repository. Provide a detailed description of your changes, the issue it addresses, and any additional information that might help maintainers review your contribution. Review and Revision : Respond to any feedback from the maintainers. Make necessary revisions to your code. Merge and Celebrate : Once your pull request is approved, it will be merged into the main codebase. Celebrate your contribution and share it with the community! Remember, every contributor was new at some point, and we are thrilled to welcome new members to our community. The journey of becoming an adept open-source contributor is rewarding and educational. Your contribution, no matter how small, can make a significant impact. Happy coding!","title":"Your First Code Contribution"},{"location":"appendix/important/contributing/#improving-the-documentation","text":"Documentation is a cornerstone of any successful open-source project. It aids developers in understanding the purpose, structure, and functioning of the code, making the project accessible to all, irrespective of their level of expertise. Our project thrives on the contributions from the community, and improving the documentation is one of the significant ways you can contribute. Here are some ways you could help improve our documentation: Clarification : If you find any ambiguous or unclear documentation, feel free to clarify the wording or suggest improvements through a pull request. Expansion : If areas of the documentation are lacking in detail or missing altogether, contributing expanded explanations or new sections is highly encouraged. Correction : Spot a mistake? Whether it's a spelling error, grammatical error, or incorrect information, your corrections are welcome. Examples : Adding examples to the documentation can significantly enhance utility. If you have examples that illustrate the use of our code, we'd love to include them. Consistency : Ensure the documentation maintains a consistent style and tone. Adhering to the style guidelines specified in our Style guides section is crucial. Technical Accuracy : Ensure that the documentation reflects the current state of the codebase and is technically accurate. Your contributions should follow the guidelines specified in our Style guides section to maintain high quality and consistency. Before making a substantial change, it's a good practice to open an issue to discuss the proposed changes or find an existing issue to work on. Together, we can ensure that our documentation is a valuable resource for all new and experienced developers.","title":"Improving The Documentation"},{"location":"appendix/important/contributing/#style-guides","text":"","title":"Style guides"},{"location":"appendix/important/contributing/#rust","text":"For Rust, we follow the Rust Style Guide .","title":"Rust"},{"location":"appendix/important/contributing/#dart","text":"For Dart, we follow the Effective Dart style guide.","title":"Dart"},{"location":"appendix/important/contributing/#flutter","text":"For Flutter, we follow the Flutter Style Guide .","title":"Flutter"},{"location":"appendix/important/contributing/#commit-messages","text":"Clear and consistent commit messages are crucial for maintaining a readable history in our collaborative environment. Adhering to a structured commit message format also enables us to generate changelogs and navigate through the project's history more efficiently. We follow the Conventional Commits standard for all commit messages in this repository. Here's a brief overview of the Conventional Commits standard: Type : The type of change being made (e.g., feat, fix, chore, docs, style, refactor, perf, test). Scope (Optional) : The scope of the change, denoting what part of the codebase is being altered. Description : A short, descriptive message of the change, written in the imperative mood. Format: <type>(<scope>): <description> Example: feat(button): add a 'submit' button to form component fix(modal): resolve issue with modal overlay not closing chore(tests): update unit tests for utilities module Breaking Changes : If your commit introduces a breaking change, it should be flagged with a ! after the type. Include BREAKING CHANGE: in the body or footer of the commit message to describe what changed and its implications. Example: feat!(dropdown): change the behavior of dropdown component BREAKING CHANGE: alters dropdown trigger to be activated on hover instead of on click. Footer (Optional) : Any additional metadata regarding your commit, such as related issue trackers or BREAKING CHANGE annotations. Following this format makes the version control history readable and reflects professionalism and foresight in maintaining a clean, well-documented codebase.","title":"Commit Messages"},{"location":"appendix/important/license/","text":"License \u00b6 Apache 2 License Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright (c) 2023 Input Output (IOG). Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. MIT License Copyright (c) 2023 Input Output (IOG). Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"appendix/important/license/#license","text":"Apache 2 License Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright (c) 2023 Input Output (IOG). Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. MIT License Copyright (c) 2023 Input Output (IOG). Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"appendix/important/security/","text":"Security \u00b6 Reporting a Vulnerability \u00b6 Please report (suspected) security vulnerabilities to security@iohk.io . You will receive a response from us within 48 hours. If the issue is confirmed, we will release a patch as soon as possible. Please provide a clear and concise description of the vulnerability, including: the affected version(s), steps that can be followed to exercise the vulnerability, any workarounds or mitigations. If you have developed any code or utilities that can help demonstrate the suspected vulnerability, please mention them in your email but DO NOT attempt to include them as attachments as this may cause your Email to be blocked by spam filters.","title":"Security"},{"location":"appendix/important/security/#security","text":"","title":"Security"},{"location":"appendix/important/security/#reporting-a-vulnerability","text":"Please report (suspected) security vulnerabilities to security@iohk.io . You will receive a response from us within 48 hours. If the issue is confirmed, we will release a patch as soon as possible. Please provide a clear and concise description of the vulnerability, including: the affected version(s), steps that can be followed to exercise the vulnerability, any workarounds or mitigations. If you have developed any code or utilities that can help demonstrate the suspected vulnerability, please mention them in your email but DO NOT attempt to include them as attachments as this may cause your Email to be blocked by spam filters.","title":"Reporting a Vulnerability"},{"location":"architecture/","text":"Architecture \u00b6 About arc42 \u00b6 The architecture documentation is based upon the Arc42 documentation standard . arc42, the template for documentation of software and system architecture. Template Version 8.2 EN. (based upon AsciiDoc version), January 2023 Created, maintained and \u00a9 by Dr. Peter Hruschka, Dr. Gernot Starke and contributors. See https://arc42.org .","title":"Index"},{"location":"architecture/#architecture","text":"","title":"Architecture"},{"location":"architecture/#about-arc42","text":"The architecture documentation is based upon the Arc42 documentation standard . arc42, the template for documentation of software and system architecture. Template Version 8.2 EN. (based upon AsciiDoc version), January 2023 Created, maintained and \u00a9 by Dr. Peter Hruschka, Dr. Gernot Starke and contributors. See https://arc42.org .","title":"About arc42"},{"location":"architecture/01_introduction_and_goals/","text":"Introduction and Goals \u00b6 Requirements Overview \u00b6 Quality Goals \u00b6 Stakeholders \u00b6 Role/Name Contact Expectations Role-1 Contact-1 Expectation-1 Role-2 Contact-2 Expectation-2","title":"Introduction and Goals"},{"location":"architecture/01_introduction_and_goals/#introduction-and-goals","text":"","title":"Introduction and Goals"},{"location":"architecture/01_introduction_and_goals/#requirements-overview","text":"","title":"Requirements Overview"},{"location":"architecture/01_introduction_and_goals/#quality-goals","text":"","title":"Quality Goals"},{"location":"architecture/01_introduction_and_goals/#stakeholders","text":"Role/Name Contact Expectations Role-1 Contact-1 Expectation-1 Role-2 Contact-2 Expectation-2","title":"Stakeholders"},{"location":"architecture/02_architecture_constraints/","text":"Architecture Constraints \u00b6","title":"Architecture Constraints"},{"location":"architecture/02_architecture_constraints/#architecture-constraints","text":"","title":"Architecture Constraints"},{"location":"architecture/03_system_scope_and_context/","text":"System Scope and Context \u00b6 Business Context \u00b6 ... ~Diagram or Table~ ... ~optionally: Explanation of external domain interfaces~ Technical Context \u00b6 ... ~Diagram or Table~ ... ~optionally: Explanation of technical interfaces~ ... ~Mapping Input/Output to Channels~","title":"System Scope and Context"},{"location":"architecture/03_system_scope_and_context/#system-scope-and-context","text":"","title":"System Scope and Context"},{"location":"architecture/03_system_scope_and_context/#business-context","text":"... ~Diagram or Table~ ... ~optionally: Explanation of external domain interfaces~","title":"Business Context"},{"location":"architecture/03_system_scope_and_context/#technical-context","text":"... ~Diagram or Table~ ... ~optionally: Explanation of technical interfaces~ ... ~Mapping Input/Output to Channels~","title":"Technical Context"},{"location":"architecture/04_solution_strategy/","text":"Solution Strategy \u00b6 Goal/Requirement Solution Details Flexible and modular backend engine to run decentralized applications The event-driven system is built on the WASM runtime using the WASM component model approach link WASM application packaging Use HDF5 framework to bundle source code and some other metadata into one file lint","title":"Solution Strategy"},{"location":"architecture/04_solution_strategy/#solution-strategy","text":"Goal/Requirement Solution Details Flexible and modular backend engine to run decentralized applications The event-driven system is built on the WASM runtime using the WASM component model approach link WASM application packaging Use HDF5 framework to bundle source code and some other metadata into one file lint","title":"Solution Strategy"},{"location":"architecture/06_runtime_view/","text":"Runtime View \u00b6 ~Runtime Scenario 1~ \u00b6 ~insert runtime diagram or textual description of the scenario~ ~insert description of the notable aspects of the interactions between the building block instances depicted in this diagram.~ ~Runtime Scenario 2~ \u00b6 \u2026 \u00b6 ~Runtime Scenario n~ \u00b6","title":"Runtime View"},{"location":"architecture/06_runtime_view/#runtime-view","text":"","title":"Runtime View"},{"location":"architecture/06_runtime_view/#runtime-scenario-1","text":"~insert runtime diagram or textual description of the scenario~ ~insert description of the notable aspects of the interactions between the building block instances depicted in this diagram.~","title":"~Runtime Scenario 1~"},{"location":"architecture/06_runtime_view/#runtime-scenario-2","text":"","title":"~Runtime Scenario 2~"},{"location":"architecture/06_runtime_view/#_1","text":"","title":"\u2026"},{"location":"architecture/06_runtime_view/#runtime-scenario-n","text":"","title":"~Runtime Scenario n~"},{"location":"architecture/07_deployment_view/","text":"Deployment View \u00b6 Infrastructure Level 1 \u00b6 ... ~Overview Diagram~ Motivation ... ~explanation in text form~ Quality and/or Performance Features ... ~explanation in text form~ Mapping of Building Blocks to Infrastructure ... ~description of the mapping~ Infrastructure Level 2 \u00b6 ~Infrastructure Element 1~ \u00b6 ... ~diagram + explanation~ ~Infrastructure Element 2~ \u00b6 ... ~diagram + explanation~ \u2026 ~Infrastructure Element n~ \u00b6 ... ~diagram + explanation~","title":"Deployment View"},{"location":"architecture/07_deployment_view/#deployment-view","text":"","title":"Deployment View"},{"location":"architecture/07_deployment_view/#infrastructure-level-1","text":"... ~Overview Diagram~ Motivation ... ~explanation in text form~ Quality and/or Performance Features ... ~explanation in text form~ Mapping of Building Blocks to Infrastructure ... ~description of the mapping~","title":"Infrastructure Level 1"},{"location":"architecture/07_deployment_view/#infrastructure-level-2","text":"","title":"Infrastructure Level 2"},{"location":"architecture/07_deployment_view/#infrastructure-element-1","text":"... ~diagram + explanation~","title":"~Infrastructure Element 1~"},{"location":"architecture/07_deployment_view/#infrastructure-element-2","text":"... ~diagram + explanation~ \u2026","title":"~Infrastructure Element 2~"},{"location":"architecture/07_deployment_view/#infrastructure-element-n","text":"... ~diagram + explanation~","title":"~Infrastructure Element n~"},{"location":"architecture/10_quality_requirements/","text":"Quality Requirements \u00b6 Quality Tree \u00b6 Quality Scenarios \u00b6","title":"Quality Requirements"},{"location":"architecture/10_quality_requirements/#quality-requirements","text":"","title":"Quality Requirements"},{"location":"architecture/10_quality_requirements/#quality-tree","text":"","title":"Quality Tree"},{"location":"architecture/10_quality_requirements/#quality-scenarios","text":"","title":"Quality Scenarios"},{"location":"architecture/11_technical_risks/","text":"Risks and Technical Debts \u00b6","title":"Risks and Technical Debts"},{"location":"architecture/11_technical_risks/#risks-and-technical-debts","text":"","title":"Risks and Technical Debts"},{"location":"architecture/12_glossary/","text":"Glossary \u00b6 Term Definition Term-1 definition-1 Term-2 definition-2","title":"Glossary"},{"location":"architecture/12_glossary/#glossary","text":"Term Definition Term-1 definition-1 Term-2 definition-2","title":"Glossary"},{"location":"architecture/05_building_block_view/","text":"Building Blocks View \u00b6 White box Overall System \u00b6 ... ~Overview Diagram~ Motivation ... ~text explanation~ Contained Building Blocks ... ~Description of contained building block (black boxes)~ Important Interfaces ... ~Description of important interfaces~ ~Name black box 1~ \u00b6 ... Purpose/Responsibility ... Interface(s) ... ~(Optional) Quality/Performance Characteristics~ ... ~(Optional) Directory/File Location~ ... ~(Optional) Fulfilled Requirements~ ... ~(optional) Open Issues/Problems/Risks~ ~Name black box 2~ \u00b6 ... ~black box template~ ~Name black box n~ \u00b6 ... ~black box template~ ~Name interface 1~ \u00b6 \u2026 ~Name interface m~ \u00b6 Level 2 \u00b6 White Box ~building block 1~ \u00b6 ... ~white box template~ White Box ~building block 2~ \u00b6 ... ~white box template~ \u2026 White Box ~building block m~ \u00b6 ... ~white box template~ Level 3 \u00b6 White Box ~_building block x.1_~ \u00b6 ... ~white box template~ White Box ~_building block x.2_~ \u00b6 ... ~white box template~ White Box ~_building block y.1_~ \u00b6 ... ~white box template~","title":"Building Blocks View"},{"location":"architecture/05_building_block_view/#building-blocks-view","text":"","title":"Building Blocks View"},{"location":"architecture/05_building_block_view/#white-box-overall-system","text":"... ~Overview Diagram~ Motivation ... ~text explanation~ Contained Building Blocks ... ~Description of contained building block (black boxes)~ Important Interfaces ... ~Description of important interfaces~","title":"White box Overall System"},{"location":"architecture/05_building_block_view/#name-black-box-1","text":"... Purpose/Responsibility ... Interface(s) ... ~(Optional) Quality/Performance Characteristics~ ... ~(Optional) Directory/File Location~ ... ~(Optional) Fulfilled Requirements~ ... ~(optional) Open Issues/Problems/Risks~","title":"~Name black box 1~"},{"location":"architecture/05_building_block_view/#name-black-box-2","text":"... ~black box template~","title":"~Name black box 2~"},{"location":"architecture/05_building_block_view/#name-black-box-n","text":"... ~black box template~","title":"~Name black box n~"},{"location":"architecture/05_building_block_view/#name-interface-1","text":"\u2026","title":"~Name interface 1~"},{"location":"architecture/05_building_block_view/#name-interface-m","text":"","title":"~Name interface m~"},{"location":"architecture/05_building_block_view/#level-2","text":"","title":"Level 2"},{"location":"architecture/05_building_block_view/#white-box-building-block-1","text":"... ~white box template~","title":"White Box ~building block 1~"},{"location":"architecture/05_building_block_view/#white-box-building-block-2","text":"... ~white box template~ \u2026","title":"White Box ~building block 2~"},{"location":"architecture/05_building_block_view/#white-box-building-block-m","text":"... ~white box template~","title":"White Box ~building block m~"},{"location":"architecture/05_building_block_view/#level-3","text":"","title":"Level 3"},{"location":"architecture/05_building_block_view/#white-box-_building-block-x1_","text":"... ~white box template~","title":"White Box ~_building block x.1_~"},{"location":"architecture/05_building_block_view/#white-box-_building-block-x2_","text":"... ~white box template~","title":"White Box ~_building block x.2_~"},{"location":"architecture/05_building_block_view/#white-box-_building-block-y1_","text":"... ~white box template~","title":"White Box ~_building block y.1_~"},{"location":"architecture/05_building_block_view/hermes_engine/","text":"Hermes engine \u00b6 Hermes engine represents an event-driven system running on top of the WASM runtime utilizing WASM component model approach. Every user's application is expected to be compiled as a WASM module, which means that it could be developed on any language with the WASM support e.g. Java, C, Rust, Go etc. Hermes runtime extension (HRE) \u00b6 Hermes runtime extension (HRE) - a Hermes module which will provides an additional functionality, besides to the Hermes application and stands as a library. It is a singleton object, which serves all Hermes applications at a time. It defines the following parts: Hermes events . HRE api - defines a set of types and functions which could be used from WASM by the Hermes application . Specification of the Hermes events and HRE api defined in WIT files. Hermes event \u00b6 Hermes event - an event produced and defined by HRE that encapsulates all the necessary data needed to process it. After successful delivery, each event can be executed by the Hermes application , depending on whether that specific Hermes application has subscribed to such events or not. Hermes events queue \u00b6 Hermes events queue - a queue-like data structure. Hermes events are added to the one end, one by one, by the HRE . The Hermes application then executes/consumes these events from the other end of the queue. The queue preserves the order of event execution based on how they were added in it. Hermes application \u00b6 Hermes application - a collection of WASM components, which are packed together and executes a specific business logic. It mainly serves as an event handler for the Hermes Events . Each Hermes application can interact with the HRE through the defined HRE api based on corresponding WIT definitions.","title":"Hermes engine"},{"location":"architecture/05_building_block_view/hermes_engine/#hermes-engine","text":"Hermes engine represents an event-driven system running on top of the WASM runtime utilizing WASM component model approach. Every user's application is expected to be compiled as a WASM module, which means that it could be developed on any language with the WASM support e.g. Java, C, Rust, Go etc.","title":"Hermes engine"},{"location":"architecture/05_building_block_view/hermes_engine/#hermes-runtime-extension-hre","text":"Hermes runtime extension (HRE) - a Hermes module which will provides an additional functionality, besides to the Hermes application and stands as a library. It is a singleton object, which serves all Hermes applications at a time. It defines the following parts: Hermes events . HRE api - defines a set of types and functions which could be used from WASM by the Hermes application . Specification of the Hermes events and HRE api defined in WIT files.","title":"Hermes runtime extension (HRE)"},{"location":"architecture/05_building_block_view/hermes_engine/#hermes-event","text":"Hermes event - an event produced and defined by HRE that encapsulates all the necessary data needed to process it. After successful delivery, each event can be executed by the Hermes application , depending on whether that specific Hermes application has subscribed to such events or not.","title":"Hermes event"},{"location":"architecture/05_building_block_view/hermes_engine/#hermes-events-queue","text":"Hermes events queue - a queue-like data structure. Hermes events are added to the one end, one by one, by the HRE . The Hermes application then executes/consumes these events from the other end of the queue. The queue preserves the order of event execution based on how they were added in it.","title":"Hermes events queue"},{"location":"architecture/05_building_block_view/hermes_engine/#hermes-application","text":"Hermes application - a collection of WASM components, which are packed together and executes a specific business logic. It mainly serves as an event handler for the Hermes Events . Each Hermes application can interact with the HRE through the defined HRE api based on corresponding WIT definitions.","title":"Hermes application"},{"location":"architecture/08_concepts/","text":"Cross-cutting Concepts \u00b6","title":"Cross-cutting Concepts"},{"location":"architecture/08_concepts/#cross-cutting-concepts","text":"","title":"Cross-cutting Concepts"},{"location":"architecture/08_concepts/cardano_chain_follower/follower_instances/","text":"Cardano Chain Follower Instances \u00b6 This document details how the individual chain follower instances are organized within the Hermes runtime extension. Basic Principles \u00b6 There are 3 primary cardano networks, Mainnet, Preprod and Preview. We will often be syncing from TIP or Genesis, and after synchronization we will be syncing from Tip eventually. A node follower is a reasonably heavy process, and every connection to a relay node also adds load to the relay node itself. It is not efficient or necessary to have multiple followers syncing from the same point as the data stream is identical. Pool of Node followers \u00b6 We will maintain a Pool of active node followers. When a wasm module in an application subscribes to a Node followers data stream, IF there is a pre-existing node follower which can serve its needs, then it should simply receive the events from that stream. It will not create a new stream for every subscription. When the last subscriber to a Node followers connection/stream unsubscribes, it will stop the connection. This means that there is not one follower per application, there is one follower per stream type. For example, if a wasm module subscribes to a stream of events from Genesis, and Tip, it will have two active streams. If a second application also subscribes to Genesis, it can retrieve the same events and there is no need to start a third follower. Implementation details \u00b6 Application modules can subscribe to events from Tip, Genesis OR a particular block within the block chain. There are a number of considerations which should be handled to make stream selection efficient. There is also a case where a stream is requested to \"continue\" and it needs special handling to be efficient. Maximizing the number of listeners to an event stream \u00b6 We want to maximize the number of listeners to individual event streams. This will improve efficiency overall. If two applications both request a stream of blocks from mainnet, from Genesis. Then ideally they both listen to the same stream. However, both applications can start asynchronously, and there is no guarantee when each application or module will subscribe to the stream. This can cause the following situation (These event all happen in rapid succession in this example): App 1 subscribes to genesis. Connection to Node occurs, and block 1 is received, and sent to App 1. App 2 subscribes to genesis. The first connection can not be used because we are already past genesis on that stream, so we need to create a second stream. The problem here is we have two streams, but they are only 1 block apart. Further, based on timing it may be that either exceeds the other depending on how fast their individual connection to the relay is. This is not ideal. There are a number of ways this can be solved. Use a block cache for recent blocks, so that subscriptions that are close in time can use the same stream by re-using blocks from the cache. Delay when we connect a stream to allow for the maximum number of subscribers. Optimizing the streams on the fly. For example if 2 streams are at different points, but they could catch up and become equal. the moment they become equal one of the streams is closed and all block data is now taken from a single stream. This is likely to occur, for example a follower from Tip and Genesis. Once the Genesis follower has reached tip we now have two followers from Tip when only 1 is required. An ideal solution may need multiple techniques. Note: There may be other techniques and these are just some obvious solutions to the issue. For the initial implementation of the Follower, we will employ technique 2 and a limited version of Technique 3 ONLY. Delaying starting of the streams \u00b6 When a stream is subscribed, and it results in a new stream, then the connection to that relay node will not happen for 5 seconds. Any further subscriptions to the same stream can then be added to the pending connection. Once the connection is made, then further subscriptions will only be added to it if they are valid for that connection. Otherwise a second connection is established, again with its own 5 second start delay. This delay occurs regardless of where the stream is to start from Tip, Genesis or a particular block. Optimizing the streams \u00b6 If we have two followers for a particular network, and they are BOTH on TIP, then one is stopped and all subscribers for it are moved to the other. This needs to check that not only are they both reported to be on TIP, but that the TIPs are identical. We do not need to do any other stream optimization at this time. The purpose of this is to ensure that once followers have fully synced we are not running excessive followers that are doing the same work and reporting the same events. Handling \"Continue\" connections \u00b6 There is an option to listen to a stream from \"Continue\" but what does \"Continue\" actually mean? If there are multiple streams it could match on, which one does it match? We will use the rule that if \"Continue\" is specified, it means \"Follow the blockchain with the earliest blocks\". So if there are three followers, one from Genesis, one from block 10,000 and one from Tip. \"Continue\" will join the Genesis follower. There is a further condition for \"Continue\" which is what happens if \"Continue\" is specified but there are no blockchain followers running or pending for the same Application? This can only happen either at the start of world for a particular Application OR an Application has unsubscribed from all blockchain events. In this case the \"Continue\" subscription should be added to list of continue subscriptions for each application. When a block is received and about to be sent as an event to an application, we can check the \"Continue\" list for that app, If there are subscriptions in that list, and the event is from the oldest active follower for the app then they are removed from that list, and added as active subscriptions to the selected follower. Then all subscribed modules in the app (including any recently added from the continue list) are sent the event. Further Optimizations \u00b6 The initial set of connection optimizations are detailed here. Further connection optimization work will only be conducted after these are implemented and the characteristics of the followers running in a Hermes environment are better understood.","title":"Cardano Chain Follower Instances"},{"location":"architecture/08_concepts/cardano_chain_follower/follower_instances/#cardano-chain-follower-instances","text":"This document details how the individual chain follower instances are organized within the Hermes runtime extension.","title":"Cardano Chain Follower Instances"},{"location":"architecture/08_concepts/cardano_chain_follower/follower_instances/#basic-principles","text":"There are 3 primary cardano networks, Mainnet, Preprod and Preview. We will often be syncing from TIP or Genesis, and after synchronization we will be syncing from Tip eventually. A node follower is a reasonably heavy process, and every connection to a relay node also adds load to the relay node itself. It is not efficient or necessary to have multiple followers syncing from the same point as the data stream is identical.","title":"Basic Principles"},{"location":"architecture/08_concepts/cardano_chain_follower/follower_instances/#pool-of-node-followers","text":"We will maintain a Pool of active node followers. When a wasm module in an application subscribes to a Node followers data stream, IF there is a pre-existing node follower which can serve its needs, then it should simply receive the events from that stream. It will not create a new stream for every subscription. When the last subscriber to a Node followers connection/stream unsubscribes, it will stop the connection. This means that there is not one follower per application, there is one follower per stream type. For example, if a wasm module subscribes to a stream of events from Genesis, and Tip, it will have two active streams. If a second application also subscribes to Genesis, it can retrieve the same events and there is no need to start a third follower.","title":"Pool of Node followers"},{"location":"architecture/08_concepts/cardano_chain_follower/follower_instances/#implementation-details","text":"Application modules can subscribe to events from Tip, Genesis OR a particular block within the block chain. There are a number of considerations which should be handled to make stream selection efficient. There is also a case where a stream is requested to \"continue\" and it needs special handling to be efficient.","title":"Implementation details"},{"location":"architecture/08_concepts/cardano_chain_follower/follower_instances/#maximizing-the-number-of-listeners-to-an-event-stream","text":"We want to maximize the number of listeners to individual event streams. This will improve efficiency overall. If two applications both request a stream of blocks from mainnet, from Genesis. Then ideally they both listen to the same stream. However, both applications can start asynchronously, and there is no guarantee when each application or module will subscribe to the stream. This can cause the following situation (These event all happen in rapid succession in this example): App 1 subscribes to genesis. Connection to Node occurs, and block 1 is received, and sent to App 1. App 2 subscribes to genesis. The first connection can not be used because we are already past genesis on that stream, so we need to create a second stream. The problem here is we have two streams, but they are only 1 block apart. Further, based on timing it may be that either exceeds the other depending on how fast their individual connection to the relay is. This is not ideal. There are a number of ways this can be solved. Use a block cache for recent blocks, so that subscriptions that are close in time can use the same stream by re-using blocks from the cache. Delay when we connect a stream to allow for the maximum number of subscribers. Optimizing the streams on the fly. For example if 2 streams are at different points, but they could catch up and become equal. the moment they become equal one of the streams is closed and all block data is now taken from a single stream. This is likely to occur, for example a follower from Tip and Genesis. Once the Genesis follower has reached tip we now have two followers from Tip when only 1 is required. An ideal solution may need multiple techniques. Note: There may be other techniques and these are just some obvious solutions to the issue. For the initial implementation of the Follower, we will employ technique 2 and a limited version of Technique 3 ONLY.","title":"Maximizing the number of listeners to an event stream"},{"location":"architecture/08_concepts/cardano_chain_follower/follower_instances/#delaying-starting-of-the-streams","text":"When a stream is subscribed, and it results in a new stream, then the connection to that relay node will not happen for 5 seconds. Any further subscriptions to the same stream can then be added to the pending connection. Once the connection is made, then further subscriptions will only be added to it if they are valid for that connection. Otherwise a second connection is established, again with its own 5 second start delay. This delay occurs regardless of where the stream is to start from Tip, Genesis or a particular block.","title":"Delaying starting of the streams"},{"location":"architecture/08_concepts/cardano_chain_follower/follower_instances/#optimizing-the-streams","text":"If we have two followers for a particular network, and they are BOTH on TIP, then one is stopped and all subscribers for it are moved to the other. This needs to check that not only are they both reported to be on TIP, but that the TIPs are identical. We do not need to do any other stream optimization at this time. The purpose of this is to ensure that once followers have fully synced we are not running excessive followers that are doing the same work and reporting the same events.","title":"Optimizing the streams"},{"location":"architecture/08_concepts/cardano_chain_follower/follower_instances/#handling-continue-connections","text":"There is an option to listen to a stream from \"Continue\" but what does \"Continue\" actually mean? If there are multiple streams it could match on, which one does it match? We will use the rule that if \"Continue\" is specified, it means \"Follow the blockchain with the earliest blocks\". So if there are three followers, one from Genesis, one from block 10,000 and one from Tip. \"Continue\" will join the Genesis follower. There is a further condition for \"Continue\" which is what happens if \"Continue\" is specified but there are no blockchain followers running or pending for the same Application? This can only happen either at the start of world for a particular Application OR an Application has unsubscribed from all blockchain events. In this case the \"Continue\" subscription should be added to list of continue subscriptions for each application. When a block is received and about to be sent as an event to an application, we can check the \"Continue\" list for that app, If there are subscriptions in that list, and the event is from the oldest active follower for the app then they are removed from that list, and added as active subscriptions to the selected follower. Then all subscribed modules in the app (including any recently added from the continue list) are sent the event.","title":"Handling \"Continue\" connections"},{"location":"architecture/08_concepts/cardano_chain_follower/follower_instances/#further-optimizations","text":"The initial set of connection optimizations are detailed here. Further connection optimization work will only be conducted after these are implemented and the characteristics of the followers running in a Hermes environment are better understood.","title":"Further Optimizations"},{"location":"architecture/08_concepts/cardano_chain_follower/overview/","text":"1. Overview \u00b6 The cardano-chain-follower crate provides functionality to read arbitrary blocks and follow updates (new blocks and rollbacks) from a Cardano network (e.g. mainnet, preprod). Currently, the all communication with a Cardano node (remote or local) is done using the Node-to-Node protocol . A Mithril snapshot can be configured to be used both when reading blocks and following chain updates. The Pallas crate is used under the hood to provide node communication, block parsing and other Cardano chain features. 1.1 Chain Follow \u00b6 The chain follower is capable of receiving chain updates from a Cardano node using the ChainSync miniprotocol. Read pointer \u00b6 The read pointer points at the location the chain is being read by a client connection. Chain Updates \u00b6 The chain follower spawns a background task that keeps a Node-to-Node connection to a Cardano node and continuously receives updates from it and sends them to the follower using a async channel. A chain update can be either a roll forward (a new block added to the chain) or a rollback. If any node communication error happens in the background task, this is also sent through the channel. If the follower has been configured to use a Mithril snapshot, it will generate synthetic roll forward chain updates for each block until the snapshot's tip is reached. After that, updates are received from the node. If any errors occur while reading the block from the Mithril snapshot (e.g. the block is missing from the snapshot, I/O errors) the background task will fallback to receiving the failed block from the Cardano node. Below is a simplified flow diagram of the background task's process for producing chain updates. A. Chain update flow diagram \u00b6 1.2 Chain Read \u00b6 NOTE: Reading blocks does not affect the follower read pointer. When reading a single or a range of arbitrary blocks from the chain the follower initiates a new connection with the configured node blocks are read using the Blockfetch miniprotocol. If configured, available blocks are read from the Mithril snapshot as well. When a block is requested, the follower will try reading the block from the Mithril snapshot first (if configured) and, only if the block is not found, it'll ask the connected node for the block. When a range of blocks is requested, the follower will try reading as many blocks as it can from the Mithril snapshot (if configured) and, if any blocks are not contained in the snapshot, it'll ask the connected node for them. Below is a simplified flow diagram of the block reading logic. A. Single block flow diagram \u00b6 B. Block range flow diagram \u00b6","title":"1. Overview"},{"location":"architecture/08_concepts/cardano_chain_follower/overview/#1-overview","text":"The cardano-chain-follower crate provides functionality to read arbitrary blocks and follow updates (new blocks and rollbacks) from a Cardano network (e.g. mainnet, preprod). Currently, the all communication with a Cardano node (remote or local) is done using the Node-to-Node protocol . A Mithril snapshot can be configured to be used both when reading blocks and following chain updates. The Pallas crate is used under the hood to provide node communication, block parsing and other Cardano chain features.","title":"1. Overview"},{"location":"architecture/08_concepts/cardano_chain_follower/overview/#11-chain-follow","text":"The chain follower is capable of receiving chain updates from a Cardano node using the ChainSync miniprotocol.","title":"1.1 Chain Follow"},{"location":"architecture/08_concepts/cardano_chain_follower/overview/#read-pointer","text":"The read pointer points at the location the chain is being read by a client connection.","title":"Read pointer"},{"location":"architecture/08_concepts/cardano_chain_follower/overview/#chain-updates","text":"The chain follower spawns a background task that keeps a Node-to-Node connection to a Cardano node and continuously receives updates from it and sends them to the follower using a async channel. A chain update can be either a roll forward (a new block added to the chain) or a rollback. If any node communication error happens in the background task, this is also sent through the channel. If the follower has been configured to use a Mithril snapshot, it will generate synthetic roll forward chain updates for each block until the snapshot's tip is reached. After that, updates are received from the node. If any errors occur while reading the block from the Mithril snapshot (e.g. the block is missing from the snapshot, I/O errors) the background task will fallback to receiving the failed block from the Cardano node. Below is a simplified flow diagram of the background task's process for producing chain updates.","title":"Chain Updates"},{"location":"architecture/08_concepts/cardano_chain_follower/overview/#a-chain-update-flow-diagram","text":"","title":"A. Chain update flow diagram"},{"location":"architecture/08_concepts/cardano_chain_follower/overview/#12-chain-read","text":"NOTE: Reading blocks does not affect the follower read pointer. When reading a single or a range of arbitrary blocks from the chain the follower initiates a new connection with the configured node blocks are read using the Blockfetch miniprotocol. If configured, available blocks are read from the Mithril snapshot as well. When a block is requested, the follower will try reading the block from the Mithril snapshot first (if configured) and, only if the block is not found, it'll ask the connected node for the block. When a range of blocks is requested, the follower will try reading as many blocks as it can from the Mithril snapshot (if configured) and, if any blocks are not contained in the snapshot, it'll ask the connected node for them. Below is a simplified flow diagram of the block reading logic.","title":"1.2 Chain Read"},{"location":"architecture/08_concepts/cardano_chain_follower/overview/#a-single-block-flow-diagram","text":"","title":"A. Single block flow diagram"},{"location":"architecture/08_concepts/cardano_chain_follower/overview/#b-block-range-flow-diagram","text":"","title":"B. Block range flow diagram"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_data/","text":"Hermes Application Data \u00b6 Applications can contain read-only shared embedded data. This data is shared between all WASM Component Modules within the application. The data can be used for any purpose defined by the Application and is stored in /srv/share . Note: Even though the data is \"shared\" it is not available to any other application running inside a Hermes node.","title":"Hermes Application Data"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_data/#hermes-application-data","text":"Applications can contain read-only shared embedded data. This data is shared between all WASM Component Modules within the application. The data can be used for any purpose defined by the Application and is stored in /srv/share . Note: Even though the data is \"shared\" it is not available to any other application running inside a Hermes node.","title":"Hermes Application Data"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_loading/","text":"The Application Loading Process \u00b6 The high level steps of the app loading process are: .d2-df41b1629f5f4ac6b77627d9c097d9fa .text { font-family: \"d2-df41b1629f5f4ac6b77627d9c097d9fa-font-regular\"; } @font-face { font-family: d2-df41b1629f5f4ac6b77627d9c097d9fa-font-regular; src: url(\"data:application/font-woff;base64,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\"); } .d2-df41b1629f5f4ac6b77627d9c097d9fa .text-bold { font-family: \"d2-df41b1629f5f4ac6b77627d9c097d9fa-font-bold\"; } @font-face { font-family: d2-df41b1629f5f4ac6b77627d9c097d9fa-font-bold; src: url(\"data:application/font-woff;base64,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\"); } .shape { shape-rendering: geometricPrecision; stroke-linejoin: round; } .connection { stroke-linecap: round; stroke-linejoin: round; } .blend { mix-blend-mode: multiply; opacity: 0.5; } .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-N1{fill:#0A0F25;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-N2{fill:#676C7E;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-N3{fill:#9499AB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-N4{fill:#CFD2DD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-N5{fill:#DEE1EB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-N6{fill:#EEF1F8;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-N7{fill:#FFFFFF;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-B1{fill:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-B2{fill:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-B3{fill:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-B4{fill:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-B5{fill:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-B6{fill:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-AA2{fill:#4A6FF3;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-AA4{fill:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-AA5{fill:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-AB4{fill:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-AB5{fill:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-N1{stroke:#0A0F25;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-N2{stroke:#676C7E;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-N3{stroke:#9499AB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-N4{stroke:#CFD2DD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-N5{stroke:#DEE1EB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-N6{stroke:#EEF1F8;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-N7{stroke:#FFFFFF;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-B1{stroke:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-B2{stroke:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-B3{stroke:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-B4{stroke:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-B5{stroke:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-B6{stroke:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-AA2{stroke:#4A6FF3;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-AA4{stroke:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-AA5{stroke:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-AB4{stroke:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-AB5{stroke:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-N1{background-color:#0A0F25;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-N2{background-color:#676C7E;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-N3{background-color:#9499AB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-N4{background-color:#CFD2DD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-N5{background-color:#DEE1EB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-N6{background-color:#EEF1F8;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-N7{background-color:#FFFFFF;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-B1{background-color:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-B2{background-color:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-B3{background-color:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-B4{background-color:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-B5{background-color:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-B6{background-color:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-AA2{background-color:#4A6FF3;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-AA4{background-color:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-AA5{background-color:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-AB4{background-color:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-AB5{background-color:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-N1{color:#0A0F25;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-N2{color:#676C7E;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-N3{color:#9499AB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-N4{color:#CFD2DD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-N5{color:#DEE1EB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-N6{color:#EEF1F8;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-N7{color:#FFFFFF;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-B1{color:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-B2{color:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-B3{color:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-B4{color:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-B5{color:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-B6{color:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-AA2{color:#4A6FF3;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-AA4{color:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-AA5{color:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-AB4{color:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-AB5{color:#F7F8FE;}.appendix text.text{fill:#0A0F25}.md{--color-fg-default:#0A0F25;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#FFFFFF;--color-canvas-subtle:#EEF1F8;--color-border-default:#0D32B2;--color-border-muted:#0D32B2;--color-neutral-muted:#EEF1F8;--color-accent-fg:#0D32B2;--color-accent-emphasis:#0D32B2;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-darker-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:lighten}.sketch-overlay-B2{fill:url(#streaks-darker-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:lighten}.sketch-overlay-B3{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-B5{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-B6{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-AA2{fill:url(#streaks-dark-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:overlay}.sketch-overlay-AA4{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-AA5{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-AB5{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-darker-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:lighten}.sketch-overlay-N2{fill:url(#streaks-dark-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.light-code{display: block}.dark-code{display: none} Validate App Package Load or Create App RW HDF5 Filesystem Create RO Links to App Package Validate WASM Component Modules Check for extra contents Generate Application Hash Validate Signatures Check for Extra Files Generate Module Hash Validate Module Signature Loading/Creating the App RW HDF5 Filesystem \u00b6 All Applications will need a RW Filesystem, even if its just for Hermes to store data about the application. The Process of loading the application is actually the process of creating or validating the RW Filesystem. Initially the Applications RW HDF5 Filesystem looks like this: Name Type Description Writable Required / Root Directory /tmp Temporary Files stored in memory /etc Writable settings The Application is at this stage un-configured. Once the user has configured the Application, the following files are created in the Application RW Storage and loading can continue. Name Type Description Writable Required /etc/settings.json Hermes Engine settings for this application. /etc/<module-name>/settings.json Module specific Runtime Configurable Settings If the Application has requested RW storage, then it is created (and sized accordingly) at: Name Type Description Writable Required /var/ Contains variable data files. (Persistent) Loading the Application itself \u00b6 At this stage, the RW Filesystem is now prepared. HDF5 allows us to create symbolic links between different HDF5 files. We use this capability to create RO symbolic links between the RW filesystem and the Application HDF5 package. During this process, any files which are defined in /usr/lib which would over-ride the contents of a module are linked inside the module, rather than the original module contents. This allows us the re-create the view the application sees of itself, without editing the actual application at-all. During this process symbolic RO links are created for the following files within the Application package: Name Type Description Writable Required /srv Data which is served by this system. /srv/www Files automatically served for this application on HTTP. /srv/share Data files which are not automatically served but can be shared by all Wasm Modules in the application. /usr Shareable, read-only data. /usr/lib Application over-rides for webasm library modules. /usr/lib/<module-name> Application over-rides for named webasm library module. /usr/lib/<module-name>/config.json Config to use for the module instead of its bundled config. /usr/lib/<module-name>/share Overrides for a modules shareable readonly data /lib Wasm Component Module Library Directory /lib/<module-name>/metadata.json Modules Metadata /lib/<module-name>/module.wasm Actual WASM Module /lib/<module-name>/config.schema.json Modules Fixed Configuration Schema /lib/<module-name>/config.json Modules Fixed Configuration (Must match the schema) /lib/<module-name>/settings.schema.json Modules User Settings Schema /lib/<module-name>/share Modules shareable readonly data /lib/<module-name>/author.cose Modules Author Signature /metadata.json Applications Metadata /author.cose Application Author Signature /publisher.cose Application Publisher Signature Mounting the /srv/www filesystem in the HTTP gateway \u00b6 At this stage the Applications /srv/www from the RW Filesystem (as linked to the application package itself) is registered with the HTTP gateway inside the hermes node, and it can begin serving those files. Loading and Initializing the WASM Modules \u00b6 The final step is to iterate all the WASM Modules in the RW Filesystem (as linked to the App) and load them in canonical order into the WASM Executor. This needs to be the final step because when a WASM Module is first loaded, it may be initialized. That process may require access to any of the data or configuration stored within the Application. It is only safe to access that data when the entire RW Filesystem and its cross linked application resources are ready to be accessed.","title":"The Application Loading Process"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_loading/#the-application-loading-process","text":"The high level steps of the app loading process are: .d2-df41b1629f5f4ac6b77627d9c097d9fa .text { font-family: \"d2-df41b1629f5f4ac6b77627d9c097d9fa-font-regular\"; } @font-face { font-family: d2-df41b1629f5f4ac6b77627d9c097d9fa-font-regular; src: url(\"data:application/font-woff;base64,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\"); } .d2-df41b1629f5f4ac6b77627d9c097d9fa .text-bold { font-family: \"d2-df41b1629f5f4ac6b77627d9c097d9fa-font-bold\"; } @font-face { font-family: d2-df41b1629f5f4ac6b77627d9c097d9fa-font-bold; src: url(\"data:application/font-woff;base64,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\"); } .shape { shape-rendering: geometricPrecision; stroke-linejoin: round; } .connection { stroke-linecap: round; stroke-linejoin: round; } .blend { mix-blend-mode: multiply; opacity: 0.5; } .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-N1{fill:#0A0F25;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-N2{fill:#676C7E;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-N3{fill:#9499AB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-N4{fill:#CFD2DD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-N5{fill:#DEE1EB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-N6{fill:#EEF1F8;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-N7{fill:#FFFFFF;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-B1{fill:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-B2{fill:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-B3{fill:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-B4{fill:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-B5{fill:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-B6{fill:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-AA2{fill:#4A6FF3;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-AA4{fill:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-AA5{fill:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-AB4{fill:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .fill-AB5{fill:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-N1{stroke:#0A0F25;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-N2{stroke:#676C7E;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-N3{stroke:#9499AB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-N4{stroke:#CFD2DD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-N5{stroke:#DEE1EB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-N6{stroke:#EEF1F8;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-N7{stroke:#FFFFFF;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-B1{stroke:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-B2{stroke:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-B3{stroke:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-B4{stroke:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-B5{stroke:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-B6{stroke:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-AA2{stroke:#4A6FF3;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-AA4{stroke:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-AA5{stroke:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-AB4{stroke:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .stroke-AB5{stroke:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-N1{background-color:#0A0F25;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-N2{background-color:#676C7E;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-N3{background-color:#9499AB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-N4{background-color:#CFD2DD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-N5{background-color:#DEE1EB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-N6{background-color:#EEF1F8;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-N7{background-color:#FFFFFF;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-B1{background-color:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-B2{background-color:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-B3{background-color:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-B4{background-color:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-B5{background-color:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-B6{background-color:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-AA2{background-color:#4A6FF3;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-AA4{background-color:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-AA5{background-color:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-AB4{background-color:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .background-color-AB5{background-color:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-N1{color:#0A0F25;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-N2{color:#676C7E;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-N3{color:#9499AB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-N4{color:#CFD2DD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-N5{color:#DEE1EB;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-N6{color:#EEF1F8;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-N7{color:#FFFFFF;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-B1{color:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-B2{color:#0D32B2;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-B3{color:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-B4{color:#E3E9FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-B5{color:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-B6{color:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-AA2{color:#4A6FF3;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-AA4{color:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-AA5{color:#F7F8FE;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-AB4{color:#EDF0FD;} .d2-df41b1629f5f4ac6b77627d9c097d9fa .color-AB5{color:#F7F8FE;}.appendix text.text{fill:#0A0F25}.md{--color-fg-default:#0A0F25;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#FFFFFF;--color-canvas-subtle:#EEF1F8;--color-border-default:#0D32B2;--color-border-muted:#0D32B2;--color-neutral-muted:#EEF1F8;--color-accent-fg:#0D32B2;--color-accent-emphasis:#0D32B2;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-darker-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:lighten}.sketch-overlay-B2{fill:url(#streaks-darker-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:lighten}.sketch-overlay-B3{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-B5{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-B6{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-AA2{fill:url(#streaks-dark-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:overlay}.sketch-overlay-AA4{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-AA5{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-AB5{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-darker-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:lighten}.sketch-overlay-N2{fill:url(#streaks-dark-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-bright-d2-df41b1629f5f4ac6b77627d9c097d9fa);mix-blend-mode:darken}.light-code{display: block}.dark-code{display: none} Validate App Package Load or Create App RW HDF5 Filesystem Create RO Links to App Package Validate WASM Component Modules Check for extra contents Generate Application Hash Validate Signatures Check for Extra Files Generate Module Hash Validate Module Signature","title":"The Application Loading Process"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_loading/#loadingcreating-the-app-rw-hdf5-filesystem","text":"All Applications will need a RW Filesystem, even if its just for Hermes to store data about the application. The Process of loading the application is actually the process of creating or validating the RW Filesystem. Initially the Applications RW HDF5 Filesystem looks like this: Name Type Description Writable Required / Root Directory /tmp Temporary Files stored in memory /etc Writable settings The Application is at this stage un-configured. Once the user has configured the Application, the following files are created in the Application RW Storage and loading can continue. Name Type Description Writable Required /etc/settings.json Hermes Engine settings for this application. /etc/<module-name>/settings.json Module specific Runtime Configurable Settings If the Application has requested RW storage, then it is created (and sized accordingly) at: Name Type Description Writable Required /var/ Contains variable data files. (Persistent)","title":"Loading/Creating the App RW HDF5 Filesystem"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_loading/#loading-the-application-itself","text":"At this stage, the RW Filesystem is now prepared. HDF5 allows us to create symbolic links between different HDF5 files. We use this capability to create RO symbolic links between the RW filesystem and the Application HDF5 package. During this process, any files which are defined in /usr/lib which would over-ride the contents of a module are linked inside the module, rather than the original module contents. This allows us the re-create the view the application sees of itself, without editing the actual application at-all. During this process symbolic RO links are created for the following files within the Application package: Name Type Description Writable Required /srv Data which is served by this system. /srv/www Files automatically served for this application on HTTP. /srv/share Data files which are not automatically served but can be shared by all Wasm Modules in the application. /usr Shareable, read-only data. /usr/lib Application over-rides for webasm library modules. /usr/lib/<module-name> Application over-rides for named webasm library module. /usr/lib/<module-name>/config.json Config to use for the module instead of its bundled config. /usr/lib/<module-name>/share Overrides for a modules shareable readonly data /lib Wasm Component Module Library Directory /lib/<module-name>/metadata.json Modules Metadata /lib/<module-name>/module.wasm Actual WASM Module /lib/<module-name>/config.schema.json Modules Fixed Configuration Schema /lib/<module-name>/config.json Modules Fixed Configuration (Must match the schema) /lib/<module-name>/settings.schema.json Modules User Settings Schema /lib/<module-name>/share Modules shareable readonly data /lib/<module-name>/author.cose Modules Author Signature /metadata.json Applications Metadata /author.cose Application Author Signature /publisher.cose Application Publisher Signature","title":"Loading the Application itself"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_loading/#mounting-the-srvwww-filesystem-in-the-http-gateway","text":"At this stage the Applications /srv/www from the RW Filesystem (as linked to the application package itself) is registered with the HTTP gateway inside the hermes node, and it can begin serving those files.","title":"Mounting the /srv/www filesystem in the HTTP gateway"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_loading/#loading-and-initializing-the-wasm-modules","text":"The final step is to iterate all the WASM Modules in the RW Filesystem (as linked to the App) and load them in canonical order into the WASM Executor. This needs to be the final step because when a WASM Module is first loaded, it may be initialized. That process may require access to any of the data or configuration stored within the Application. It is only safe to access that data when the entire RW Filesystem and its cross linked application resources are ready to be accessed.","title":"Loading and Initializing the WASM Modules"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_metadata/","text":"Application Metadata \u00b6 Metadata for Hermes Applications is specified as a metadata.json file located in the root group in the HDF5 File. It is a json document and must conform to the Application metadata json schema to be valid. Application Metadata Contents \u00b6 The Application Metadata is formally defined by hermes_app_metadata.schema.json . All Application metadata files MUST conform to that schema, or the Application will be considered invalid. Diagram: Hermes Application Metadata \u00b6 .d2-699534e163e445219289b98835280c53 .text { font-family: \"d2-699534e163e445219289b98835280c53-font-regular\"; } @font-face { font-family: d2-699534e163e445219289b98835280c53-font-regular; src: url(\"data:application/font-woff;base64,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\"); } .d2-699534e163e445219289b98835280c53 .text-mono { font-family: \"d2-699534e163e445219289b98835280c53-font-mono\"; } @font-face { font-family: d2-699534e163e445219289b98835280c53-font-mono; src: url(\"data:application/font-woff;base64,\"); } .d2-699534e163e445219289b98835280c53 .text-mono-bold { font-family: \"d2-699534e163e445219289b98835280c53-font-mono-bold\"; } @font-face { font-family: d2-699534e163e445219289b98835280c53-font-mono-bold; src: url(\"data:application/font-woff;base64,d09GRgABAAAAABbAAAwAAAAAJbwAAQScAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABHAAAAGAAAABgmKbWhWNtYXAAAAF8AAAA4wAAAVgIigmRZ2FzcAAAAmAAAAAIAAAACAAAABBnbHlmAAACaAAADacAABNkt6SsCWhlYWQAABAQAAAANgAAADYbI9ohaGhlYQAAEEgAAAAkAAAAJAYzANNobXR4AAAQbAAAAJkAAAD8k6gRSmxvY2EAABEIAAAAgAAAAICilqfubWF4cAAAEYgAAAAgAAAAIABzAmpuYW1lAAARqAAABO8AAA2sAwZtKnBvc3QAABaYAAAAIAAAACD/uAAzcHJlcAAAFrgAAAAHAAAAB2gGjIUABAJYArwABQAAAooCWAAAAEsCigJYAAABXgAyAR4AAAILAwkDBAMCAgQgAAL3AgA4AwAAAAAAAAAAQURCTwCgACD//wPY/u8AAAQkAcZgAAGfAAAAAAHeApQAAAAgAAN4nJTPyy6jARzG4eebtjPTmc50pnMep6rzqa2iDjuxEAkhITaIuAwRV2RNHBPuwYKFhXvA9i+pjS69+yf5vUikJMhJJ4uoKUorKCoZNqKsYty0GbPmzFuwZMWadRs2bdm2a89+BE2mqt5klq2+MjsvJu7lpWSQjcd4iKe4isu4iPM4ieM4isO4jbu4ies4iLM4bZS+dYlRFTVlU3r06tNvwKChRmvVOylpGe998FHWJ58bjyeMyfniq7xvviv44adffvvjr3/+a9GqTbsORZ1KunSrm+QZAAD//wEAAP//emE6/QAAAQAB//8AD3icjFdrcBvXdT73YgGIxBIECCzeXAC7CyzeIHaBBUkQ4JviE3yb4kMiLUsxZZGyLEgWHVHuJKkjpaZTu5JrxnlMXMszdWu7aWfqKE0109RqR7I7nU4aj6dNM0maTjzjmbTshP1HAp3dBV922smfu4PF3XvO+c53vnMuaIEFwBl8GzRQAyQ0AAVQMvvNAZHnWb0+y9vFbJb1YjOLG8pv3AmFiPD64uIbRNS76b1yCt/eXZkfOX267nt/dXExl3vze6gEgKEGAI/iDagDM0DJIlpYTTDIszqdXsNn/FTNB9/54BtTpIckSFfdtAk1443dy2gwdUEUL6TK7369VAIEUmUbt+JNoAF6mQTOpCVJFGx2fTDIMjodZbXZREHK2nU6dCa/OtU0+cJM4Yx/3J7lEv2RyFCKa3WMh1bIyPT1iZWvjYu+eZtTPNXZvSj4XLPJFCCIVbYxizfBL58fDP4f52fYjGjW6dDM5M2xsa9MdZ3yjlMCH+nhmT7RwtYu/sK/Sg69fGH1a2Oib55yqSZqay+ulX/kbQIABIMA2Ig3wABQyohmNuOnWLNIDW5uovubm+vo9vp6eWUdlL2tAJjGG9Ao50C0y9DLX6QLOMvq9SzPs7SGolpf7bARto5X1wmdHmsEoV9MarBeR+CNj+fmPt69/L57/MSY651vfvMd19iJcff78tkYgpVtLOBNqAfvkYhtlFWn4wVJyqQPQkex4tNdXU8X1ZUR3G6BUVay+MrF1ZdHRl5evfhK8XdSi309C01NCz19iynZxhAATuENIFUW7Z3OspRZFGQDLDv08fFSb9/l3qmhfC6fG8Ib/MLo8OnkT9CEJKTDgECobGMeb0Jc8ZLPKnmQfeP5T7NA9tRup7FsA0W6vpCZDswmk3FHwjvFdfD588dzl2JDTE8Tl/A0eUdjBSb3FNmUOEsHfU67m6rjjMneJmkmE4ucdLrpRovLSjKmZE9CWmgGJKOEW/AG6OVI1Kz9+3vY9R42ra/vbqn5qgfAAwrPoaQRLTabXZSkrEXU/OjvvlGstxsJk9048of38Ub5n6SzknRWQk27lwFDvrKN7WgHaIgAzKi5yCawjL6eL2AFNzMrFwwvc9CI5Uh/JgyEXvmOxhFnHE2iJ80MjUf6zkhrBiIwh/2troFxn9lLhnoikydq7T6zgTIuWWlz6rHh8n80e0KX3NYJwsbY6m21gKG/so3D+B5QwKkos3qZk3rxNzJCT9lsaII5ThNk6ZZW03ica59typ+edcdcVt7niNupOMn4JHzvraKbLjw1PP1M+xrdKcZzNOV8aDYBgm651tCOzOv/p9bkWp4pXh8Y+9Jwbsnb05jxRLo4tj3Md7pzsVUyf2Vi4ko+QM9bLUxHNNrBeCwnA5zC7WRlG5vwPbACo1jYMyDycsXJOGZkHPfNIThVyp/OhNschP7WmkHjHnBGLdawzZ1wC+Tzz4xfbvc4R97c7Rbd3BrlfNhQT+eTA71qzrPVWLjPVJHen/Hr058JaXDk+sDg010jyxktLt9ElF1McRLN9TQxeX8quizHNX6l0H6+xxqoeczTlvd1CWKnr8E865YpCBMKxx6CSa2powVgRpmsn/ow+WgxOuz1OMTGZKL8yU3UgnZbTkrm2pWa2ki8jNH1VV0JQAPpShy3oR0QoAsm9/2XgTl4SKJgFym2WrlMkFeiEUVBeaH5lFBY1N/s/kZEdZ7N8UGq0e9yB3OPNie4h2dq6rILrUaugawNRxdOP97/3ATFWK0MZZVXf6iNiUULbtZoMfX8s7s5RgsWwhjyOoUGoqEr2jYWIlcMrKVlgNNqj5nqLA2t3enxBHrYEHC7OIuFc7kDDeXbJrfZWUdoSLvR3ajmqR8AexSOy0q0x23KzJqVFOnN/beOaTzjzVMjt/whOu7C995abIyvnCr/I/IKCbez/JcAUKlAEQB9H/9aF5TVGXSQi6vvI5W26vu2g/eAYVjJ1z04BqRi2SxmRUSJfNYyfIt497XyGx+8OPVjfK98/kH5hes/ny/fBwRiZRt78V/L3VJmryw3Zus+gZ4/ufR1lBDohoDdF2wnL55CN0plSLDHjq2Q9Uqscg8voB2Z/XLfUEO1HwSsxLsfOPtkLWEUor7EMWMmmmndcBup2pLRaLTWoq08HQ2HmOQjg+U7aCJud5b/HE3YbfJzH1O0A9bDdg5DumYgfJPNU0UVUrTV5UscRVSt1TDa+W37UOfl/v7LnerKxO32OKOsVTVQ16uqHqgrKPrWr9hQ9G1m39N9SrN2ynJU3/rXDBrvSKggC1uzv91F6Kc9B/J2F/+x4GYLl4an19o9rvGXEHdY3+SY+rFJwUXWn0yWVczsq1BWNGuO6s91PeHoZRURinTJuvrJgQDdfXnM6VNEiPaLuycQd1iBEFwGwBzagYYjuVb1QG++vEZqAudy/rCNtgc8iVkf2lrJ52prr+n1Une5DAgylW0lh5Gj/TWBeSUVR3V5r7mGur6YbI+flcJBgzsZOHvi8090r/JdgamwnTal24cf8WdXybh3oZF2mg31deQx23BL33TUecLuqLEYrBajOdYSjvdHodrfg/gmOKvZz7CZbFakRIo9LJq/O3oysv4lyzM//KEtwTU22Vz+UTJ7uvPPVnWbm6V3Agmq9tgTtWb5vEJlG9ehLZmTM3LtiNXKMVeV/6fTw7e8YU/MeWvNQPjHyJVTSCj/XEg4/KivbDoeSOz1erRV7eP2ah/Pipp//f7tImkzEAaKLL7wLtr6JDAcCg0HPimblLojAPAU2pJnyCPfHTqB5auTr356/KterZ7QaA1673mfvk5LaLWE5+bw226iRktojulcaOuX3EAwOMjeuSM/B7hflk2v+fsj3t7ka4q9AAAW0JaMXcnCHzKjtx/YCbz12rdEebiusdfEXv2jt77VYmw0EgaHIYXwf45RUYqKWccq/z1BxSgqapuQz/VWCjiHtsCtYFjlRDZ7BAoj/n1b0OSqtdZEU2TtR38waXSQRK3DMPD8fXt++m91xEWNJuBxoV98yA7xgWHuw7KhMBWVNVEDzZVt7MM3oA4aIbxf9dWW8umazzIHf6LYwIX8ly88+Vx+ddAn0rTo86ZpOu31xmJeXzRKjtw+//qdO6+fvz1yKbQ0MXkyEDg5ObEUejHCsOEwy0QAwSgAbsTXlNwq83cBZ0WzSI3+6QvRdsGx8uJV9OS8vp6q3925KmMhAmA7vgEeeX8BZ1Rp4w8ERC9Joki1zn9lOJsKtrtHU+cGus62dJ7Puzscr0yNXD8XT6Z416goCPN56cKTkka7Lp8bqWxjC74BCTX+Kshq5JlqFz1iSE9Vi88uzfY5enxjUUbyMpND7YOMEAt0+geTK/neJ3IdLaHOQN8l0h5yn/RwZsbhCduWbUEnwzW654LR8Ehzqs9GGMKFcG4yWu0VCXwNTACPmtNSVuGMn/JnkGhG0wQiTAHTErq++z+o5i9QiR6lXZLn9y6eRc/uPqdwsK2yjf17ccgTuTKvfmqW+2w0OpRPLQxEEyOnM92P+0asbb5wb4TJ0q6YOx3xtHt17IlAdjbd/jjJDV+dmv3iVDjuPdHgjjw2NTobsMW5VJQOLgX4yEx315Ko1D0AduNrYAQoFTRZf8ZPGTX6HxD2aI9Q/gH6Sdtg2EKMfvnqlcL6XPfTn3/pJGiUuduDbwANUcgddJ+Dyecw7po9VsoxaaoaqY7iKDqw0uKX/KFM9nT74lNSgJG8zeeZJirUyKZ8LZp41hZuZho8JjpNxkZFvjVqIjz9gjQaWRyNHXcQpnghKowm0bOxlJOjApyL85T/jQ9RPgdVV+cNWD0hSsFa1mrXPmeOUEbFuiqX7H4blV03YlTT8zl/cQ9jrzPmSUcb2xv1MsZz6Y7lNmF+MBIfeYxM0AcYxwJNMW9giQ2rGO+lQfbjbmUbfRt+Kt9he49Up9jZKaY7OsieVKq3N5XqAQTvVnj0Nnwkz10zvCTx/IF/6lc/DnR3Ym2b0W/xCHRXolA4/y+P2Aebrp4hDY64P9EyP774XKWi2sSMjpejR92gk5+VCkygJNbhtwke8pVrAKCHPMjMlP/rQzbcgJ7V6WR2KFxdwJ7K+6ABmMn4qTb0szsXLgCCB5VltIXvy3e7GbN6H3+AQnfvbmoWirsdReXb5coyerG6R723m5fv3kWhzSL+m+LOHWXPE9VzUvu3DuWiqsqGErFIVTOlEEupBKVERAq9vjSn1TpykpRzaLVzSyPhcMysTUhSQmuOhcObhTEuI/ga/Db0CLL5G7yixI7niyTtCRXjLWINUSO2xIshD00W1Xn3XGUZ/Zfqy0ymSpODqV7hDJupSq5ycaZULlNWHXsuHI6ZCNk2YYqFwyNLc1qdo02S2hw67dzS5m+0mh9nJdG7759PyHBjBUAwWFnCRvz3CuZIRINo4Fr5u9/WfG7nVdXPQ//3IhGhW+XvXkMDexuQMm+/ibZAK+uTjDqyPUDz6Hqp2nPfxwX0VfxrmYudR7gYaW6ORLNZXEiFwqIYDqVUe/Kc/ub+fLBfQ+qMbcTvJYZ8UTpl40KmB2jelp69b6k/V2ewJzh0tlROJMbbOfWcj1ASfQG/Lfs1yfOiXl9htX+iZVHyVy+99CtAe9yT45rM+Kk+9A/ItrwMAP8LAAD//wEAAP//RFjfXQAAAQAAAAEEnJZ7mkRfDzz1AAMD6AAAAADcHHOkAAAAAN2XHqD/TP46AwwEJAABAAYAAgAAAAAAAAABAAAD2P7vAAACWP9M/0wDDAABAAAAAAAAAAAAAAAAAAAAP3icNI+9CQJhEEQfg4mRJRiIBocg+I94JoIcpygYTQlqbG1iCWIDtiMHc9F8fLx5uyszkEGmK7OUGcvUMhuZkcxRZirTl+nJlDKVzF5mIrOSucrM83+WKWROMrP4q7BtPmUW8e7i7sgM817LXNIv4tiGLdN9y7ySzfxDmI/MTeYhc88tdfb6xvdr+D8AAAD//wEAAP//yY0ncQAAAAAAACoAKgBMAHwAsADGAPQBJgFIAYwBngG6AfoCMgJiApgC0AL2A2wDkAOcA6gDwgPiBBYEOARqBKIE2AT4BTgFYAWCBZ4F1gYCBjIGcAaIBrQG+AcYB1wHdgfOCBIIKAhMCFgIZghuCHoIjAieCOQJKAk4CUgJWAlwCZQJpAmyAAEAAAA/AfgAKgBuAAYAAQAAAAAAAAAAAAAAAAADAAN4nJyWTW8b1RfGf2OntsdN+88/lNIUKJcSSholEztKoypFArdpVUNISpxSoVIJx3acUfwme9w2rFmwZMVnAMSqqy4QYpUFC5aIFSvEig+AWCA0Z449Y9ckbVWpee7c8/o8595r4J3Y38SxxmzgABRbnONAcYwUvyuOs8KfiseYsS4oPkbZWlecYNp6pDjJj9YvilMsxb5SbLMU+0nxcRZj/yg+ETfxjOKTLCVuKZ5iOvF5gC1IJ75WbDGe0FxWjInED4rjTCR+VjzG2cRvio8xnvhLcYLJ5JjiJJPJ04pTTCZnFNtMJlcUp5lOrik+jkm2FI8zl/xS8Qkyye8Vn8RJKlfW/1hMnVU8weVUL87/uZDq9TXJ26lvFb8QqfkU51N/KH4x0vvpSO8vRXKdieSa4qSdUnyWcbvX48sR31c4ZZ9X/Cppe1nxuYjva4zb7yo2TNi9+l8PZ8M6z6T9ieI3SNsNxdOROG9GaniLJfuh4ovM2t8pnsWxdWasOebSPY3mI3kdMmmdE2shUkOGmfSniheZTX+h+Fqk31Xh8BsMi2TIksEwr6tFWeUo02SbCoYC+3TwqFCngyFPgxJN2rTk/6LslTHMsIuHR4sVFljggfxzKPajOeJZZ4GLzGF4gIvHLoZNKnSo0Oa+RrtBkwYehnWK1P1azBkKNOnSpkTFTOFE1xiu0aQs6BZtmlylSY0yWRzp9DJXyLHKVTa4MuDb8wz85vueh8c3fbuPpPYOrlRtBjLu0sSTzhvc7+85ZMmyzBXqFNmjIlY7VHgoGRZxuITDMpdYlljPXq8rihUxeKJUWVQs0mYPQ5Od59balS597Xy/2zREyWCvgKeWQfYGZRbE30iPu8KVkchd0biNK9bOc1VziyJdahhWcTDc1Kj+hG0Jr/7frkyeX3eFxjNMqsc+LSpssat8hpNZEA49HginIeM1XFGgITPtc9IVFoK+e6wVyLOGYUPiNwYirw1E8DsZNWFZ6TesbDBvqP99irjUKLJNTXbCk1eUvDk+FOyxghlip0NJFGrhiUYdieWIBlUW2OAGa0OVHM1RWf4G2m/T7U9P0J0/Nf55z1EQ5QtmSk5bTlgrCCN3yLPFTTa4zZasc2yySY51tshzXXw32JSTu8E6q+KRFxzs3ZATsM7HGN4nLzZ+7IryEyjmn8mWVN+R2oNZdqnTEs79yh3ptSIdPrvChh2N2vPtiE8Jlx2xNKJfgypdilR1KlpSYV247M1GeOqCiahLL7624X6Vpty0bTm5flTDvt4d/rQGNQU3hPcUqjrPNTP/faNtyunzuwhRXroIZrzTZ78i3Q6uq/qWuHKfBveV4YLwUZDXxMVY71GS7L6vz4WJP3riy+MnvhyIym22cYMpjR9wjX3JVtPqDNvCinhwN/Yr9+iIfh1R16/oM4ni3013yXBP75kmVbnZWsJ5Sc7ivqyC+bnL/CG2Rb0v26LXntjPjshdlteiJtoZ6a2q0ae5Jxx7OhvBHWto0JU3uC27wSmV3sgeWs9wpI72MKd1Dao4J6/CsCbD2o6yeixfh5QZyw6oPcrvQH55VOX98Nm4Iye/KtN8nYf6bq71v4XoA+HSFV4K8kb591jwCoeevXf5qsQvsTdy5sMZnx+Z9Sifp7cc7PYo68EeD7cd5uAo+1G/WEbbKXP/AgAA//8BAAD///u8HqIAAAMAAAAAAAD/tQAyAAAAAQAAAAAAAAAAAAAAAAAAAAC4Af+FsASNAA==\"); } .shape { shape-rendering: geometricPrecision; stroke-linejoin: round; } .connection { stroke-linecap: round; stroke-linejoin: round; } .blend { mix-blend-mode: multiply; opacity: 0.5; } .d2-699534e163e445219289b98835280c53 .fill-N1{fill:#0A0F25;} .d2-699534e163e445219289b98835280c53 .fill-N2{fill:#676C7E;} .d2-699534e163e445219289b98835280c53 .fill-N3{fill:#9499AB;} .d2-699534e163e445219289b98835280c53 .fill-N4{fill:#CFD2DD;} .d2-699534e163e445219289b98835280c53 .fill-N5{fill:#DEE1EB;} .d2-699534e163e445219289b98835280c53 .fill-N6{fill:#EEF1F8;} .d2-699534e163e445219289b98835280c53 .fill-N7{fill:#FFFFFF;} .d2-699534e163e445219289b98835280c53 .fill-B1{fill:#0D32B2;} .d2-699534e163e445219289b98835280c53 .fill-B2{fill:#0D32B2;} .d2-699534e163e445219289b98835280c53 .fill-B3{fill:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .fill-B4{fill:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .fill-B5{fill:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .fill-B6{fill:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .fill-AA2{fill:#4A6FF3;} .d2-699534e163e445219289b98835280c53 .fill-AA4{fill:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .fill-AA5{fill:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .fill-AB4{fill:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .fill-AB5{fill:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .stroke-N1{stroke:#0A0F25;} .d2-699534e163e445219289b98835280c53 .stroke-N2{stroke:#676C7E;} .d2-699534e163e445219289b98835280c53 .stroke-N3{stroke:#9499AB;} .d2-699534e163e445219289b98835280c53 .stroke-N4{stroke:#CFD2DD;} .d2-699534e163e445219289b98835280c53 .stroke-N5{stroke:#DEE1EB;} .d2-699534e163e445219289b98835280c53 .stroke-N6{stroke:#EEF1F8;} .d2-699534e163e445219289b98835280c53 .stroke-N7{stroke:#FFFFFF;} .d2-699534e163e445219289b98835280c53 .stroke-B1{stroke:#0D32B2;} .d2-699534e163e445219289b98835280c53 .stroke-B2{stroke:#0D32B2;} .d2-699534e163e445219289b98835280c53 .stroke-B3{stroke:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .stroke-B4{stroke:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .stroke-B5{stroke:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .stroke-B6{stroke:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .stroke-AA2{stroke:#4A6FF3;} .d2-699534e163e445219289b98835280c53 .stroke-AA4{stroke:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .stroke-AA5{stroke:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .stroke-AB4{stroke:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .stroke-AB5{stroke:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .background-color-N1{background-color:#0A0F25;} .d2-699534e163e445219289b98835280c53 .background-color-N2{background-color:#676C7E;} .d2-699534e163e445219289b98835280c53 .background-color-N3{background-color:#9499AB;} .d2-699534e163e445219289b98835280c53 .background-color-N4{background-color:#CFD2DD;} .d2-699534e163e445219289b98835280c53 .background-color-N5{background-color:#DEE1EB;} .d2-699534e163e445219289b98835280c53 .background-color-N6{background-color:#EEF1F8;} .d2-699534e163e445219289b98835280c53 .background-color-N7{background-color:#FFFFFF;} .d2-699534e163e445219289b98835280c53 .background-color-B1{background-color:#0D32B2;} .d2-699534e163e445219289b98835280c53 .background-color-B2{background-color:#0D32B2;} .d2-699534e163e445219289b98835280c53 .background-color-B3{background-color:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .background-color-B4{background-color:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .background-color-B5{background-color:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .background-color-B6{background-color:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .background-color-AA2{background-color:#4A6FF3;} .d2-699534e163e445219289b98835280c53 .background-color-AA4{background-color:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .background-color-AA5{background-color:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .background-color-AB4{background-color:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .background-color-AB5{background-color:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .color-N1{color:#0A0F25;} .d2-699534e163e445219289b98835280c53 .color-N2{color:#676C7E;} .d2-699534e163e445219289b98835280c53 .color-N3{color:#9499AB;} .d2-699534e163e445219289b98835280c53 .color-N4{color:#CFD2DD;} .d2-699534e163e445219289b98835280c53 .color-N5{color:#DEE1EB;} .d2-699534e163e445219289b98835280c53 .color-N6{color:#EEF1F8;} .d2-699534e163e445219289b98835280c53 .color-N7{color:#FFFFFF;} .d2-699534e163e445219289b98835280c53 .color-B1{color:#0D32B2;} .d2-699534e163e445219289b98835280c53 .color-B2{color:#0D32B2;} .d2-699534e163e445219289b98835280c53 .color-B3{color:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .color-B4{color:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .color-B5{color:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .color-B6{color:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .color-AA2{color:#4A6FF3;} .d2-699534e163e445219289b98835280c53 .color-AA4{color:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .color-AA5{color:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .color-AB4{color:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .color-AB5{color:#F7F8FE;}.appendix text.text{fill:#0A0F25}.md{--color-fg-default:#0A0F25;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#FFFFFF;--color-canvas-subtle:#EEF1F8;--color-border-default:#0D32B2;--color-border-muted:#0D32B2;--color-neutral-muted:#EEF1F8;--color-accent-fg:#0D32B2;--color-accent-emphasis:#0D32B2;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-darker-d2-699534e163e445219289b98835280c53);mix-blend-mode:lighten}.sketch-overlay-B2{fill:url(#streaks-darker-d2-699534e163e445219289b98835280c53);mix-blend-mode:lighten}.sketch-overlay-B3{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-B5{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-B6{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-AA2{fill:url(#streaks-dark-d2-699534e163e445219289b98835280c53);mix-blend-mode:overlay}.sketch-overlay-AA4{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-AA5{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-AB5{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-darker-d2-699534e163e445219289b98835280c53);mix-blend-mode:lighten}.sketch-overlay-N2{fill:url(#streaks-dark-d2-699534e163e445219289b98835280c53);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal-d2-699534e163e445219289b98835280c53);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal-d2-699534e163e445219289b98835280c53);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.light-code{display: block}.dark-code{display: none} metadata.json { \"name\" : \"Athena - Project Catalyst Voting\" , \"version\" : \"V2.7.3\" , \"description\" : \"Project Catalyst Innovation Platform\" , \"about\" : \"About Project Catalyst, long form.\\nMulti line.\" , \"src\" : [ \"https://github.com/input-output-hk/hermes\" , \"https://github.com/input-output-hk/catalyst-voices\" ], \"copyright\" : [ \"Copyright \u24b8 2024, IOG Singapore.\" ], \"license\" : [ { \"spdx\" : \"Apache-2.0\" , \"file\" : \"/srv/data/apache2.txt\" }, { \"spdx\" : \"MIT\" , \"file\" : \"/srv/data/mit.txt\" } ], \"build_date\" : 1709041814 , \"developer\" : { \"name\" : \"IOG Singapore.\" , \"contact\" : \"Contact details.\" , \"payment\" : \"wallet address\" } \"resources\" : { \"minimum\" : { \"filestorage\" : 100 , \"sqlite\" : 1024 , }, \"requested\" : { \"filestorage\" : 300 , \"sqlite\" : 4096 , }, \"maximum\" : { \"filestorage\" : 1024 , \"sqlite\" : 32768 , } } \"permissions\" : { \"admin\" : true } } { \"name\" : \"Athena - Project Catalyst Voting\" , \"version\" : \"V2.7.3\" , \"description\" : \"Project Catalyst Innovation Platform\" , \"about\" : \"About Project Catalyst, long form.\\nMulti line.\" , \"src\" : [ \"https://github.com/input-output-hk/hermes\" , \"https://github.com/input-output-hk/catalyst-voices\" ] , \"copyright\" : [ \"Copyright \u24b8 2024, IOG Singapore.\" ] , \"license\" : [ { \"spdx\" : \"Apache-2.0\" , \"file\" : \"/srv/data/apache2.txt\" } , { \"spdx\" : \"MIT\" , \"file\" : \"/srv/data/mit.txt\" } ] , \"build_date\" : 1709041814 , \"developer\" : { \"name\" : \"IOG Singapore.\" , \"contact\" : \"Contact details.\" , \"payment\" : \"wallet address\" } \"resources\" : { \"minimum\" : { \"filestorage\" : 100 , \"sqlite\" : 1024 , } , \"requested\" : { \"filestorage\" : 300 , \"sqlite\" : 4096 , } , \"maximum\" : { \"filestorage\" : 1024 , \"sqlite\" : 32768 , } } \"permissions\" : { \"admin\" : true } } Note: Diagram is illustrative of metadata contents only. See hermes_app_metadata.schema.json for the formal definition. Application identifying Data \u00b6 Application Name : Single Line name of the application. Icon Version Description - Short Description of the Application About - Long form Description of the Application Copyright - Copyright Notices License - SPDX Strings and/or a Link to a License held within the app image. Application Developer/Author \u00b6 Developers Name Optional contact information Optional payment address Resources \u00b6 Each application will need a minimum set of resources from Hermes. The Metadata also lists the minimum viable resources required for the application. It should also list what are the resources the Application would like to have available. It can optionally list the maximum allocatable resources which could enable enhanced features or other functions in the application. If a resource minimum is set as 0, then it means the resource can be denied by the user but the application can still operate. Permissions \u00b6 When Hermes has permissioned resources, the metadata will list the permissions being requested by the application. Configuration \u00b6 Other than resourcing and permissions, the metadata.json file does not contain the configuration of the application. Application configuration is defined by the WASM Component modules. Metadata Schema \u00b6 Schema: hermes_app_metadata.schema.json { \"$schema\" : \"http://json-schema.org/draft-07/schema#\" , \"$id\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_app_metadata.schema.json\" , \"title\" : \"Application Metadata Schema\" , \"description\" : \"Metadata which defines a Hermes Application and is carried inside the Hermes Application Package.\" , \"type\" : \"object\" , \"additionalProperties\" : false , \"properties\" : { \"$schema\" : { \"type\" : \"string\" , \"title\" : \"Application Metadata Schema Reference\" , \"default\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_app_metadata.schema.json\" , \"pattern\" : \"^(https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/)|(.*/)hermes_app_metadata.schema.json$\" , \"description\" : \"Reference to the Application Metadata Schema.\\nShould be to https:// this will be validated.\\nLocal references are only to simplify development.\" }, \"name\" : { \"type\" : \"string\" , \"title\" : \"Application Name\" , \"description\" : \"Name of the Application\" }, \"version\" : { \"type\" : \"string\" , \"title\" : \"Application Version\" , \"description\" : \"Version of the Application\" , \"pattern\" : \"^V[0-9]+\\\\.[0-9]+\\\\.[0-9]+( .*$)?$\" }, \"description\" : { \"type\" : \"string\" , \"title\" : \"Application Description\" , \"description\" : \"Short Description of the Application\" }, \"about\" : { \"type\" : \"string\" , \"title\" : \"Application About\" , \"description\" : \"Long form Description of the Application\" }, \"src\" : { \"type\" : \"array\" , \"title\" : \"Links to the source of this application.\" , \"description\" : \"Can be links to code repositories or the Authors website.\\nSpecifying any `src` is Optional, however if defined, then these URLs must be reachable when the Application is packaged.\" , \"items\" : { \"type\" : \"string\" , \"format\" : \"uri\" , \"pattern\" : \"^https://[^\\\\s/?#]+.[^\\\\s/?#]+(/[^\\\\s?#]*)?$\" }, \"uniqueItems\" : true , \"minItems\" : 1 }, \"copyright\" : { \"type\" : \"array\" , \"title\" : \"Application Copyright\" , \"description\" : \"List of Copyright Notices/Claims over the Application.\\nIf no copyright is claimed then there should be an explicit statement about the Application being in the public domain.\" , \"items\" : { \"type\" : \"string\" }, \"uniqueItems\" : true , \"minItems\" : 1 }, \"license\" : { \"type\" : \"array\" , \"title\" : \"Application License\" , \"description\" : \"List of Licenses/Claims over the Application.\\nMust declare at least `spdx` or `file`, `note` is Optional.\\nIf `file` is specified it must exist within the Package for the Application to be valid.\" , \"uniqueItems\" : true , \"minItems\" : 1 , \"items\" : { \"type\" : \"object\" , \"additionalProperties\" : false , \"minProperties\" : 1 , \"$comment\" : \"Validation Should be one or both of `spdx` and `file` and `note` is optional.\" , \"properties\" : { \"spdx\" : { \"type\" : \"string\" , \"title\" : \"License SPDX ID\" , \"description\" : \"SPDX ID of the License.\\nIn the case of proprietary or non SPDX licenses, do not specify a SPDX ID and just include a license file.\" }, \"file\" : { \"type\" : \"string\" , \"title\" : \"License File\" , \"description\" : \"Path to the License File inside the Package.\\nMust be a `.txt` file and it must exist at Package creation time.\\nFile MUST be text, displayable using monospaced fonts and no line exceeds 80 characters.\" , \"pattern\" : \"^/.*\\\\.txt$\" }, \"note\" : { \"type\" : \"string\" , \"title\" : \"License Note\" , \"description\" : \"Note about the License.\\nFor Example: Could limit the license to a particular aspect of the Application or part of the code.\" } } } }, \"build_date\" : { \"type\" : \"integer\" , \"title\" : \"Application Build Date\" , \"description\" : \"Unix Epoch Timestamp of when the Application was packaged or built.\\nThis field will be overwritten if present, by the Hermes packaging system.\\nThe field is required, but this will be checked when the package is validated.\" , \"default\" : 0 }, \"developer\" : { \"type\" : \"object\" , \"title\" : \"Application Developer\" , \"additionalProperties\" : true , \"properties\" : { \"name\" : { \"type\" : \"string\" , \"title\" : \"Application Developer Name\" , \"description\" : \"Name of the Developer\" } }, \"required\" : [ \"name\" ] }, \"resources\" : { \"type\" : \"object\" , \"title\" : \"Application Resources\" , \"additionalProperties\" : false , \"properties\" : { \"file-storage\" : { \"type\" : \"object\" , \"title\" : \"Application File Storage Allocation\" , \"description\" : \"File Storage Allocation of the Application\" , \"additionalProperties\" : false , \"properties\" : { \"minimum\" : { \"type\" : \"integer\" , \"title\" : \"Application Minimum File Storage\" , \"description\" : \"Minimum File Storage of the Application.\\nSize is in MegaBytes.\" }, \"requested\" : { \"type\" : \"integer\" , \"title\" : \"Application Requested File Storage\" , \"description\" : \"Requested File Storage of the Application.\\nSize is in MegaBytes.\" }, \"maximum\" : { \"type\" : \"integer\" , \"title\" : \"Application Maximum File Storage\" , \"description\" : \"Maximum File Storage of the Application.\\nSize is in MegaBytes.\" } }, \"required\" : [ \"minimum\" ] }, \"sqlite-db\" : { \"type\" : \"object\" , \"title\" : \"Application SQLite DB Storage Allocation\" , \"description\" : \"SQLite DB Storage Allocation of the Application\" , \"additionalProperties\" : false , \"minProperties\" : 1 , \"properties\" : { \"minimum\" : { \"type\" : \"integer\" , \"title\" : \"Application Minimum SQLite DB Storage\" , \"description\" : \"Minimum SQLite DB Storage of the Application.\\nSize is in MegaBytes.\" }, \"requested\" : { \"type\" : \"integer\" , \"title\" : \"Application Requested SQLite DB Storage\" , \"description\" : \"Requested SQLite DB Storage of the Application.\\nSize is in MegaBytes.\" }, \"maximum\" : { \"type\" : \"integer\" , \"title\" : \"Application Maximum SQLite DB Storage\" , \"description\" : \"Maximum SQLite DB Storage of the Application.\\nSize is in MegaBytes.\" } }, \"required\" : [ \"minimum\" ] } } }, \"permissions\" : { \"type\" : \"object\" , \"title\" : \"Application Permissions\" , \"additionalProperties\" : false , \"properties\" : { \"admin\" : { \"type\" : \"boolean\" , \"title\" : \"Application requires Admin Privileges\" , \"description\" : \"Does the application require Admin Privileges.\" , \"default\" : false } } } }, \"required\" : [ \"$schema\" , \"name\" , \"version\" , \"description\" , \"copyright\" , \"license\" ] } Metadata Example \u00b6 Example: hermes_app_metadata.json { \"$schema\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_app_metadata.schema.json\" , \"name\" : \"Athena - Project Catalyst Voting\" , \"version\" : \"V2.7.3\" , \"description\" : \"Project Catalyst Innovation Platform\" , \"src\" : [ \"https://github.com/input-output-hk/hermes\" , \"https://github.com/input-output-hk/catalyst-voices\" ], \"copyright\" : [ \"Copyright \u24b8 2024, IOG Singapore.\" ], \"license\" : [ { \"spdx\" : \"Apache-2.0\" , \"file\" : \"/srv/data/apache2.txt\" , \"note\" : \"Both SPDX and File can be specified together.\\nThis allows the text of the License to be shown in any admin UI.\" }, { \"spdx\" : \"MIT\" , \"file\" : \"/srv/data/mit.txt\" }, { \"spdx\" : \"Apache-2.0\" , \"note\" : \"Just defines the license by the SPDX ID.\" }, { \"file\" : \"/srv/data/apache2.txt\" , \"note\" : \"Just defines the license by the file path.\" } ], \"developer\" : { \"name\" : \"IOG Singapore.\" , \"contact\" : \"Contact details.\" , \"payment\" : \"wallet address\" } }","title":"Application Metadata"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_metadata/#application-metadata","text":"Metadata for Hermes Applications is specified as a metadata.json file located in the root group in the HDF5 File. It is a json document and must conform to the Application metadata json schema to be valid.","title":"Application Metadata"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_metadata/#application-metadata-contents","text":"The Application Metadata is formally defined by hermes_app_metadata.schema.json . All Application metadata files MUST conform to that schema, or the Application will be considered invalid.","title":"Application Metadata Contents"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_metadata/#diagram-hermes-application-metadata","text":".d2-699534e163e445219289b98835280c53 .text { font-family: \"d2-699534e163e445219289b98835280c53-font-regular\"; } @font-face { font-family: d2-699534e163e445219289b98835280c53-font-regular; src: url(\"data:application/font-woff;base64,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\"); } .d2-699534e163e445219289b98835280c53 .text-mono { font-family: \"d2-699534e163e445219289b98835280c53-font-mono\"; } @font-face { font-family: d2-699534e163e445219289b98835280c53-font-mono; src: url(\"data:application/font-woff;base64,\"); } .d2-699534e163e445219289b98835280c53 .text-mono-bold { font-family: \"d2-699534e163e445219289b98835280c53-font-mono-bold\"; } @font-face { font-family: d2-699534e163e445219289b98835280c53-font-mono-bold; src: url(\"data:application/font-woff;base64,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\"); } .shape { shape-rendering: geometricPrecision; stroke-linejoin: round; } .connection { stroke-linecap: round; stroke-linejoin: round; } .blend { mix-blend-mode: multiply; opacity: 0.5; } .d2-699534e163e445219289b98835280c53 .fill-N1{fill:#0A0F25;} .d2-699534e163e445219289b98835280c53 .fill-N2{fill:#676C7E;} .d2-699534e163e445219289b98835280c53 .fill-N3{fill:#9499AB;} .d2-699534e163e445219289b98835280c53 .fill-N4{fill:#CFD2DD;} .d2-699534e163e445219289b98835280c53 .fill-N5{fill:#DEE1EB;} .d2-699534e163e445219289b98835280c53 .fill-N6{fill:#EEF1F8;} .d2-699534e163e445219289b98835280c53 .fill-N7{fill:#FFFFFF;} .d2-699534e163e445219289b98835280c53 .fill-B1{fill:#0D32B2;} .d2-699534e163e445219289b98835280c53 .fill-B2{fill:#0D32B2;} .d2-699534e163e445219289b98835280c53 .fill-B3{fill:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .fill-B4{fill:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .fill-B5{fill:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .fill-B6{fill:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .fill-AA2{fill:#4A6FF3;} .d2-699534e163e445219289b98835280c53 .fill-AA4{fill:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .fill-AA5{fill:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .fill-AB4{fill:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .fill-AB5{fill:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .stroke-N1{stroke:#0A0F25;} .d2-699534e163e445219289b98835280c53 .stroke-N2{stroke:#676C7E;} .d2-699534e163e445219289b98835280c53 .stroke-N3{stroke:#9499AB;} .d2-699534e163e445219289b98835280c53 .stroke-N4{stroke:#CFD2DD;} .d2-699534e163e445219289b98835280c53 .stroke-N5{stroke:#DEE1EB;} .d2-699534e163e445219289b98835280c53 .stroke-N6{stroke:#EEF1F8;} .d2-699534e163e445219289b98835280c53 .stroke-N7{stroke:#FFFFFF;} .d2-699534e163e445219289b98835280c53 .stroke-B1{stroke:#0D32B2;} .d2-699534e163e445219289b98835280c53 .stroke-B2{stroke:#0D32B2;} .d2-699534e163e445219289b98835280c53 .stroke-B3{stroke:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .stroke-B4{stroke:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .stroke-B5{stroke:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .stroke-B6{stroke:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .stroke-AA2{stroke:#4A6FF3;} .d2-699534e163e445219289b98835280c53 .stroke-AA4{stroke:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .stroke-AA5{stroke:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .stroke-AB4{stroke:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .stroke-AB5{stroke:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .background-color-N1{background-color:#0A0F25;} .d2-699534e163e445219289b98835280c53 .background-color-N2{background-color:#676C7E;} .d2-699534e163e445219289b98835280c53 .background-color-N3{background-color:#9499AB;} .d2-699534e163e445219289b98835280c53 .background-color-N4{background-color:#CFD2DD;} .d2-699534e163e445219289b98835280c53 .background-color-N5{background-color:#DEE1EB;} .d2-699534e163e445219289b98835280c53 .background-color-N6{background-color:#EEF1F8;} .d2-699534e163e445219289b98835280c53 .background-color-N7{background-color:#FFFFFF;} .d2-699534e163e445219289b98835280c53 .background-color-B1{background-color:#0D32B2;} .d2-699534e163e445219289b98835280c53 .background-color-B2{background-color:#0D32B2;} .d2-699534e163e445219289b98835280c53 .background-color-B3{background-color:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .background-color-B4{background-color:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .background-color-B5{background-color:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .background-color-B6{background-color:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .background-color-AA2{background-color:#4A6FF3;} .d2-699534e163e445219289b98835280c53 .background-color-AA4{background-color:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .background-color-AA5{background-color:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .background-color-AB4{background-color:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .background-color-AB5{background-color:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .color-N1{color:#0A0F25;} .d2-699534e163e445219289b98835280c53 .color-N2{color:#676C7E;} .d2-699534e163e445219289b98835280c53 .color-N3{color:#9499AB;} .d2-699534e163e445219289b98835280c53 .color-N4{color:#CFD2DD;} .d2-699534e163e445219289b98835280c53 .color-N5{color:#DEE1EB;} .d2-699534e163e445219289b98835280c53 .color-N6{color:#EEF1F8;} .d2-699534e163e445219289b98835280c53 .color-N7{color:#FFFFFF;} .d2-699534e163e445219289b98835280c53 .color-B1{color:#0D32B2;} .d2-699534e163e445219289b98835280c53 .color-B2{color:#0D32B2;} .d2-699534e163e445219289b98835280c53 .color-B3{color:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .color-B4{color:#E3E9FD;} .d2-699534e163e445219289b98835280c53 .color-B5{color:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .color-B6{color:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .color-AA2{color:#4A6FF3;} .d2-699534e163e445219289b98835280c53 .color-AA4{color:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .color-AA5{color:#F7F8FE;} .d2-699534e163e445219289b98835280c53 .color-AB4{color:#EDF0FD;} .d2-699534e163e445219289b98835280c53 .color-AB5{color:#F7F8FE;}.appendix text.text{fill:#0A0F25}.md{--color-fg-default:#0A0F25;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#FFFFFF;--color-canvas-subtle:#EEF1F8;--color-border-default:#0D32B2;--color-border-muted:#0D32B2;--color-neutral-muted:#EEF1F8;--color-accent-fg:#0D32B2;--color-accent-emphasis:#0D32B2;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-darker-d2-699534e163e445219289b98835280c53);mix-blend-mode:lighten}.sketch-overlay-B2{fill:url(#streaks-darker-d2-699534e163e445219289b98835280c53);mix-blend-mode:lighten}.sketch-overlay-B3{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-B5{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-B6{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-AA2{fill:url(#streaks-dark-d2-699534e163e445219289b98835280c53);mix-blend-mode:overlay}.sketch-overlay-AA4{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-AA5{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-AB5{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-darker-d2-699534e163e445219289b98835280c53);mix-blend-mode:lighten}.sketch-overlay-N2{fill:url(#streaks-dark-d2-699534e163e445219289b98835280c53);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal-d2-699534e163e445219289b98835280c53);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal-d2-699534e163e445219289b98835280c53);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-bright-d2-699534e163e445219289b98835280c53);mix-blend-mode:darken}.light-code{display: block}.dark-code{display: none} metadata.json { \"name\" : \"Athena - Project Catalyst Voting\" , \"version\" : \"V2.7.3\" , \"description\" : \"Project Catalyst Innovation Platform\" , \"about\" : \"About Project Catalyst, long form.\\nMulti line.\" , \"src\" : [ \"https://github.com/input-output-hk/hermes\" , \"https://github.com/input-output-hk/catalyst-voices\" ], \"copyright\" : [ \"Copyright \u24b8 2024, IOG Singapore.\" ], \"license\" : [ { \"spdx\" : \"Apache-2.0\" , \"file\" : \"/srv/data/apache2.txt\" }, { \"spdx\" : \"MIT\" , \"file\" : \"/srv/data/mit.txt\" } ], \"build_date\" : 1709041814 , \"developer\" : { \"name\" : \"IOG Singapore.\" , \"contact\" : \"Contact details.\" , \"payment\" : \"wallet address\" } \"resources\" : { \"minimum\" : { \"filestorage\" : 100 , \"sqlite\" : 1024 , }, \"requested\" : { \"filestorage\" : 300 , \"sqlite\" : 4096 , }, \"maximum\" : { \"filestorage\" : 1024 , \"sqlite\" : 32768 , } } \"permissions\" : { \"admin\" : true } } { \"name\" : \"Athena - Project Catalyst Voting\" , \"version\" : \"V2.7.3\" , \"description\" : \"Project Catalyst Innovation Platform\" , \"about\" : \"About Project Catalyst, long form.\\nMulti line.\" , \"src\" : [ \"https://github.com/input-output-hk/hermes\" , \"https://github.com/input-output-hk/catalyst-voices\" ] , \"copyright\" : [ \"Copyright \u24b8 2024, IOG Singapore.\" ] , \"license\" : [ { \"spdx\" : \"Apache-2.0\" , \"file\" : \"/srv/data/apache2.txt\" } , { \"spdx\" : \"MIT\" , \"file\" : \"/srv/data/mit.txt\" } ] , \"build_date\" : 1709041814 , \"developer\" : { \"name\" : \"IOG Singapore.\" , \"contact\" : \"Contact details.\" , \"payment\" : \"wallet address\" } \"resources\" : { \"minimum\" : { \"filestorage\" : 100 , \"sqlite\" : 1024 , } , \"requested\" : { \"filestorage\" : 300 , \"sqlite\" : 4096 , } , \"maximum\" : { \"filestorage\" : 1024 , \"sqlite\" : 32768 , } } \"permissions\" : { \"admin\" : true } } Note: Diagram is illustrative of metadata contents only. See hermes_app_metadata.schema.json for the formal definition.","title":"Diagram: Hermes Application Metadata"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_metadata/#application-identifying-data","text":"Application Name : Single Line name of the application. Icon Version Description - Short Description of the Application About - Long form Description of the Application Copyright - Copyright Notices License - SPDX Strings and/or a Link to a License held within the app image.","title":"Application identifying Data"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_metadata/#application-developerauthor","text":"Developers Name Optional contact information Optional payment address","title":"Application Developer/Author"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_metadata/#resources","text":"Each application will need a minimum set of resources from Hermes. The Metadata also lists the minimum viable resources required for the application. It should also list what are the resources the Application would like to have available. It can optionally list the maximum allocatable resources which could enable enhanced features or other functions in the application. If a resource minimum is set as 0, then it means the resource can be denied by the user but the application can still operate.","title":"Resources"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_metadata/#permissions","text":"When Hermes has permissioned resources, the metadata will list the permissions being requested by the application.","title":"Permissions"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_metadata/#configuration","text":"Other than resourcing and permissions, the metadata.json file does not contain the configuration of the application. Application configuration is defined by the WASM Component modules.","title":"Configuration"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_metadata/#metadata-schema","text":"Schema: hermes_app_metadata.schema.json { \"$schema\" : \"http://json-schema.org/draft-07/schema#\" , \"$id\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_app_metadata.schema.json\" , \"title\" : \"Application Metadata Schema\" , \"description\" : \"Metadata which defines a Hermes Application and is carried inside the Hermes Application Package.\" , \"type\" : \"object\" , \"additionalProperties\" : false , \"properties\" : { \"$schema\" : { \"type\" : \"string\" , \"title\" : \"Application Metadata Schema Reference\" , \"default\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_app_metadata.schema.json\" , \"pattern\" : \"^(https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/)|(.*/)hermes_app_metadata.schema.json$\" , \"description\" : \"Reference to the Application Metadata Schema.\\nShould be to https:// this will be validated.\\nLocal references are only to simplify development.\" }, \"name\" : { \"type\" : \"string\" , \"title\" : \"Application Name\" , \"description\" : \"Name of the Application\" }, \"version\" : { \"type\" : \"string\" , \"title\" : \"Application Version\" , \"description\" : \"Version of the Application\" , \"pattern\" : \"^V[0-9]+\\\\.[0-9]+\\\\.[0-9]+( .*$)?$\" }, \"description\" : { \"type\" : \"string\" , \"title\" : \"Application Description\" , \"description\" : \"Short Description of the Application\" }, \"about\" : { \"type\" : \"string\" , \"title\" : \"Application About\" , \"description\" : \"Long form Description of the Application\" }, \"src\" : { \"type\" : \"array\" , \"title\" : \"Links to the source of this application.\" , \"description\" : \"Can be links to code repositories or the Authors website.\\nSpecifying any `src` is Optional, however if defined, then these URLs must be reachable when the Application is packaged.\" , \"items\" : { \"type\" : \"string\" , \"format\" : \"uri\" , \"pattern\" : \"^https://[^\\\\s/?#]+.[^\\\\s/?#]+(/[^\\\\s?#]*)?$\" }, \"uniqueItems\" : true , \"minItems\" : 1 }, \"copyright\" : { \"type\" : \"array\" , \"title\" : \"Application Copyright\" , \"description\" : \"List of Copyright Notices/Claims over the Application.\\nIf no copyright is claimed then there should be an explicit statement about the Application being in the public domain.\" , \"items\" : { \"type\" : \"string\" }, \"uniqueItems\" : true , \"minItems\" : 1 }, \"license\" : { \"type\" : \"array\" , \"title\" : \"Application License\" , \"description\" : \"List of Licenses/Claims over the Application.\\nMust declare at least `spdx` or `file`, `note` is Optional.\\nIf `file` is specified it must exist within the Package for the Application to be valid.\" , \"uniqueItems\" : true , \"minItems\" : 1 , \"items\" : { \"type\" : \"object\" , \"additionalProperties\" : false , \"minProperties\" : 1 , \"$comment\" : \"Validation Should be one or both of `spdx` and `file` and `note` is optional.\" , \"properties\" : { \"spdx\" : { \"type\" : \"string\" , \"title\" : \"License SPDX ID\" , \"description\" : \"SPDX ID of the License.\\nIn the case of proprietary or non SPDX licenses, do not specify a SPDX ID and just include a license file.\" }, \"file\" : { \"type\" : \"string\" , \"title\" : \"License File\" , \"description\" : \"Path to the License File inside the Package.\\nMust be a `.txt` file and it must exist at Package creation time.\\nFile MUST be text, displayable using monospaced fonts and no line exceeds 80 characters.\" , \"pattern\" : \"^/.*\\\\.txt$\" }, \"note\" : { \"type\" : \"string\" , \"title\" : \"License Note\" , \"description\" : \"Note about the License.\\nFor Example: Could limit the license to a particular aspect of the Application or part of the code.\" } } } }, \"build_date\" : { \"type\" : \"integer\" , \"title\" : \"Application Build Date\" , \"description\" : \"Unix Epoch Timestamp of when the Application was packaged or built.\\nThis field will be overwritten if present, by the Hermes packaging system.\\nThe field is required, but this will be checked when the package is validated.\" , \"default\" : 0 }, \"developer\" : { \"type\" : \"object\" , \"title\" : \"Application Developer\" , \"additionalProperties\" : true , \"properties\" : { \"name\" : { \"type\" : \"string\" , \"title\" : \"Application Developer Name\" , \"description\" : \"Name of the Developer\" } }, \"required\" : [ \"name\" ] }, \"resources\" : { \"type\" : \"object\" , \"title\" : \"Application Resources\" , \"additionalProperties\" : false , \"properties\" : { \"file-storage\" : { \"type\" : \"object\" , \"title\" : \"Application File Storage Allocation\" , \"description\" : \"File Storage Allocation of the Application\" , \"additionalProperties\" : false , \"properties\" : { \"minimum\" : { \"type\" : \"integer\" , \"title\" : \"Application Minimum File Storage\" , \"description\" : \"Minimum File Storage of the Application.\\nSize is in MegaBytes.\" }, \"requested\" : { \"type\" : \"integer\" , \"title\" : \"Application Requested File Storage\" , \"description\" : \"Requested File Storage of the Application.\\nSize is in MegaBytes.\" }, \"maximum\" : { \"type\" : \"integer\" , \"title\" : \"Application Maximum File Storage\" , \"description\" : \"Maximum File Storage of the Application.\\nSize is in MegaBytes.\" } }, \"required\" : [ \"minimum\" ] }, \"sqlite-db\" : { \"type\" : \"object\" , \"title\" : \"Application SQLite DB Storage Allocation\" , \"description\" : \"SQLite DB Storage Allocation of the Application\" , \"additionalProperties\" : false , \"minProperties\" : 1 , \"properties\" : { \"minimum\" : { \"type\" : \"integer\" , \"title\" : \"Application Minimum SQLite DB Storage\" , \"description\" : \"Minimum SQLite DB Storage of the Application.\\nSize is in MegaBytes.\" }, \"requested\" : { \"type\" : \"integer\" , \"title\" : \"Application Requested SQLite DB Storage\" , \"description\" : \"Requested SQLite DB Storage of the Application.\\nSize is in MegaBytes.\" }, \"maximum\" : { \"type\" : \"integer\" , \"title\" : \"Application Maximum SQLite DB Storage\" , \"description\" : \"Maximum SQLite DB Storage of the Application.\\nSize is in MegaBytes.\" } }, \"required\" : [ \"minimum\" ] } } }, \"permissions\" : { \"type\" : \"object\" , \"title\" : \"Application Permissions\" , \"additionalProperties\" : false , \"properties\" : { \"admin\" : { \"type\" : \"boolean\" , \"title\" : \"Application requires Admin Privileges\" , \"description\" : \"Does the application require Admin Privileges.\" , \"default\" : false } } } }, \"required\" : [ \"$schema\" , \"name\" , \"version\" , \"description\" , \"copyright\" , \"license\" ] }","title":"Metadata Schema"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_metadata/#metadata-example","text":"Example: hermes_app_metadata.json { \"$schema\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_app_metadata.schema.json\" , \"name\" : \"Athena - Project Catalyst Voting\" , \"version\" : \"V2.7.3\" , \"description\" : \"Project Catalyst Innovation Platform\" , \"src\" : [ \"https://github.com/input-output-hk/hermes\" , \"https://github.com/input-output-hk/catalyst-voices\" ], \"copyright\" : [ \"Copyright \u24b8 2024, IOG Singapore.\" ], \"license\" : [ { \"spdx\" : \"Apache-2.0\" , \"file\" : \"/srv/data/apache2.txt\" , \"note\" : \"Both SPDX and File can be specified together.\\nThis allows the text of the License to be shown in any admin UI.\" }, { \"spdx\" : \"MIT\" , \"file\" : \"/srv/data/mit.txt\" }, { \"spdx\" : \"Apache-2.0\" , \"note\" : \"Just defines the license by the SPDX ID.\" }, { \"file\" : \"/srv/data/apache2.txt\" , \"note\" : \"Just defines the license by the file path.\" } ], \"developer\" : { \"name\" : \"IOG Singapore.\" , \"contact\" : \"Contact details.\" , \"payment\" : \"wallet address\" } }","title":"Metadata Example"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_package/","text":"Packaging A Hermes Application \u00b6 Each Hermes application is distributed in an HDF5 File , which is organized as a rooted and directed graph. For practical purposes, the objects in the graph are named HDF5 objects (defined in the HDF5 Abstract Data Model ). The graph is navigated in a similar fashion to POSIX file-systems, by concatenating object names with \" / \". For example: /group1/group2/ \" traverses the graph from the root , which contains group1 , which contains and retrieves group2 . Prerequisites to Packaging an Application \u00b6 A valid metadata.json for the application. Any files required for static data need to be prepared and ready for inclusion. Any files for /usr/lib need to be prepared and ready for inclusion. Each WASM Component Module required needs to be pre-packaged and signed. The hermes engine executable. Tooling \u00b6 All Packaging operations can be performed with the hermes engine when used from the command line. To get a list of options related to packaging: ./hermes package --help The Application Packaging Process \u00b6 Create an unsigned Application Package. Sign it as one or more authors. Optionally, Sign it as one or more publishers. Creating the unsigned Application Package \u00b6 ./hermes app package <manifest.json> [ <optional output path> ] [ --name <app name override> ] manifest.json - Defines the location of all the src artifacts needed to build the package. This file must conform to the manifests json schema . An example manifest of this json schema if here . [<optional output path>] - By default the application will be created in the same directory where manifest placed. This option allows the path of the generated application to be set, it can be absolute or relative to the manifest directory. --name app name override - The name to give the application, instead of taking it from the manifest file. Note: the extension .happ will automatically be added to the app name to signify this is a Hermes Application. Signing the Application Package \u00b6 As the author of the Application: ./hermes package sign <X.509 Private Cert> <app_package_name> This takes the X.509 Private Certificate presented, and signs or counter-signs the Application package. As the publisher of the Application: ./hermes package sign --publisher <X.509 Private Cert> <app_package_name> This takes the X.509 Private Certificate presented, and signs or counter-signs the Application package. Note: A Hermes Application is INVALID if it does not contain at least 1 Author Signature. Inspecting a Hermes Application \u00b6 ./hermes package inspect <app_package_name> This command will dump the logical contents of the Application package and if it is considered valid or not. It does not extract files from the package. If files need to be extracted or individually accessed outside of Hermes, any HDF5 Viewer can be used. Manifest Schema \u00b6 Schema: hermes_app_manifest.schema.json { \"$schema\" : \"http://json-schema.org/draft-07/schema#\" , \"$id\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_app_manifest.schema.json\" , \"title\" : \"Hermes Application Package Manifest Schema\" , \"description\" : \"Defines the src packages which are used to build a Hermes Application.\\nIt is important that one of the properties `www` or `share` is set or `module` array has at least one item.\\nIf all of them are not set and `modules` array is empty, an application cannot be built.\" , \"type\" : \"object\" , \"additionalProperties\" : false , \"properties\" : { \"$schema\" : { \"type\" : \"string\" , \"title\" : \"Application Package Manifest Schema Reference\" , \"default\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_app_manifest.schema.json\" , \"pattern\" : \"^(https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/)|(.*/)hermes_app_manifest.schema.json$\" , \"description\" : \"Reference to the Application Manifest Schema.\\nShould be to https:// this will be validated.\\nLocal references are only to simplify development.\" }, \"name\" : { \"type\" : \"string\" , \"title\" : \"Hermes Application Package name.\" , \"description\" : \"Name of the Hermes application package with which it will be created.\" , \"default\" : \"app\" }, \"icon\" : { \"type\" : \"string\" , \"title\" : \"Application Icon\" , \"description\" : \"Link to the Hermes application icon svg file.\\nWill be renamed to `icon.svg` inside the package.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" , \"default\" : \"icon.svg\" }, \"metadata\" : { \"type\" : \"string\" , \"title\" : \"Application Metadata File\" , \"description\" : \"Link to the Hermes application metadata JSON file.\\nWill be renamed to `metadata.json` inside the package.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" , \"default\" : \"metadata.json\" }, \"modules\" : { \"type\" : \"array\" , \"title\" : \"Application Module Files\" , \"description\" : \"List of WASM Component Library Module Files.\" , \"items\" : { \"type\" : \"object\" , \"title\" : \"Application WASM Module Package definition\" , \"description\" : \"Prepackaged Hermes WASM Component Module.\" , \"additionalProperties\" : false , \"properties\" : { \"package\" : { \"type\" : \"string\" , \"title\" : \"Application WASM Module Package File\" , \"description\" : \"Path to the WASM Component Library Module Package File.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+[.]hmod$\" }, \"name\" : { \"type\" : \"string\" , \"title\" : \"Application WASM Module Name\" , \"description\" : \"Name of the WASM Component Library Module.\\nMust be unique within the Application.\\nIf not defined is extracted from the WASM Module itself.\" }, \"config\" : { \"type\" : \"string\" , \"title\" : \"Application WASM Module Config\" , \"description\" : \"Path to the WASM Component Library Module Config File.\\nThis will replace any `config.json` inside the module.\\nIf defined it must be valid according to the modules `config.schema.json` file.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" }, \"share\" : { \"type\" : \"string\" , \"title\" : \"Application WASM Module Package Share Dataset.\" , \"description\" : \"Path to the WASM Component Library Module Shareable Data.\\nWill replace or augment any data defined within the module itself.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" } }, \"required\" : [ \"package\" ] }, \"uniqueItems\" : true }, \"www\" : { \"type\" : \"string\" , \"title\" : \"Data to be served to a browser at the applications URL from /\" , \"description\" : \"A Directory or archive of data to be served to a browser for the App.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" }, \"share\" : { \"type\" : \"string\" , \"title\" : \"Data to be shared amongst all modules within the application.\" , \"description\" : \"A Directory or archive of data to be shared with all Modules in the application.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" } }, \"required\" : [ \"$schema\" ] } Manifest Example \u00b6 Example: hermes_app_manifest.json { \"$schema\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_app_manifest.schema.json\" , \"icon\" : \"file://icon.svg\" , \"metadata\" : \"file://metadata.json\" , \"modules\" : [ { \"package\" : \"file://modules/counter.hmod\" }, { \"package\" : \"file://modules/counter.hmod\" , \"name\" : \"counter1\" , \"config\" : \"file://modules/counter1/config.json\" }, { \"package\" : \"file://modules/counter.hmod\" , \"name\" : \"counter2\" , \"config\" : \"file://modules/counter2/config.json\" , \"share\" : \"file://modules/counter2/share\" } ], \"srv\" : { \"www\" : \"file://srv/flutter_app.zst\" , \"share\" : \"file://srv/share\" } }","title":"Packaging A Hermes Application"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_package/#packaging-a-hermes-application","text":"Each Hermes application is distributed in an HDF5 File , which is organized as a rooted and directed graph. For practical purposes, the objects in the graph are named HDF5 objects (defined in the HDF5 Abstract Data Model ). The graph is navigated in a similar fashion to POSIX file-systems, by concatenating object names with \" / \". For example: /group1/group2/ \" traverses the graph from the root , which contains group1 , which contains and retrieves group2 .","title":"Packaging A Hermes Application"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_package/#prerequisites-to-packaging-an-application","text":"A valid metadata.json for the application. Any files required for static data need to be prepared and ready for inclusion. Any files for /usr/lib need to be prepared and ready for inclusion. Each WASM Component Module required needs to be pre-packaged and signed. The hermes engine executable.","title":"Prerequisites to Packaging an Application"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_package/#tooling","text":"All Packaging operations can be performed with the hermes engine when used from the command line. To get a list of options related to packaging: ./hermes package --help","title":"Tooling"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_package/#the-application-packaging-process","text":"Create an unsigned Application Package. Sign it as one or more authors. Optionally, Sign it as one or more publishers.","title":"The Application Packaging Process"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_package/#creating-the-unsigned-application-package","text":"./hermes app package <manifest.json> [ <optional output path> ] [ --name <app name override> ] manifest.json - Defines the location of all the src artifacts needed to build the package. This file must conform to the manifests json schema . An example manifest of this json schema if here . [<optional output path>] - By default the application will be created in the same directory where manifest placed. This option allows the path of the generated application to be set, it can be absolute or relative to the manifest directory. --name app name override - The name to give the application, instead of taking it from the manifest file. Note: the extension .happ will automatically be added to the app name to signify this is a Hermes Application.","title":"Creating the unsigned Application Package"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_package/#signing-the-application-package","text":"As the author of the Application: ./hermes package sign <X.509 Private Cert> <app_package_name> This takes the X.509 Private Certificate presented, and signs or counter-signs the Application package. As the publisher of the Application: ./hermes package sign --publisher <X.509 Private Cert> <app_package_name> This takes the X.509 Private Certificate presented, and signs or counter-signs the Application package. Note: A Hermes Application is INVALID if it does not contain at least 1 Author Signature.","title":"Signing the Application Package"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_package/#inspecting-a-hermes-application","text":"./hermes package inspect <app_package_name> This command will dump the logical contents of the Application package and if it is considered valid or not. It does not extract files from the package. If files need to be extracted or individually accessed outside of Hermes, any HDF5 Viewer can be used.","title":"Inspecting a Hermes Application"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_package/#manifest-schema","text":"Schema: hermes_app_manifest.schema.json { \"$schema\" : \"http://json-schema.org/draft-07/schema#\" , \"$id\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_app_manifest.schema.json\" , \"title\" : \"Hermes Application Package Manifest Schema\" , \"description\" : \"Defines the src packages which are used to build a Hermes Application.\\nIt is important that one of the properties `www` or `share` is set or `module` array has at least one item.\\nIf all of them are not set and `modules` array is empty, an application cannot be built.\" , \"type\" : \"object\" , \"additionalProperties\" : false , \"properties\" : { \"$schema\" : { \"type\" : \"string\" , \"title\" : \"Application Package Manifest Schema Reference\" , \"default\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_app_manifest.schema.json\" , \"pattern\" : \"^(https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/)|(.*/)hermes_app_manifest.schema.json$\" , \"description\" : \"Reference to the Application Manifest Schema.\\nShould be to https:// this will be validated.\\nLocal references are only to simplify development.\" }, \"name\" : { \"type\" : \"string\" , \"title\" : \"Hermes Application Package name.\" , \"description\" : \"Name of the Hermes application package with which it will be created.\" , \"default\" : \"app\" }, \"icon\" : { \"type\" : \"string\" , \"title\" : \"Application Icon\" , \"description\" : \"Link to the Hermes application icon svg file.\\nWill be renamed to `icon.svg` inside the package.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" , \"default\" : \"icon.svg\" }, \"metadata\" : { \"type\" : \"string\" , \"title\" : \"Application Metadata File\" , \"description\" : \"Link to the Hermes application metadata JSON file.\\nWill be renamed to `metadata.json` inside the package.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" , \"default\" : \"metadata.json\" }, \"modules\" : { \"type\" : \"array\" , \"title\" : \"Application Module Files\" , \"description\" : \"List of WASM Component Library Module Files.\" , \"items\" : { \"type\" : \"object\" , \"title\" : \"Application WASM Module Package definition\" , \"description\" : \"Prepackaged Hermes WASM Component Module.\" , \"additionalProperties\" : false , \"properties\" : { \"package\" : { \"type\" : \"string\" , \"title\" : \"Application WASM Module Package File\" , \"description\" : \"Path to the WASM Component Library Module Package File.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+[.]hmod$\" }, \"name\" : { \"type\" : \"string\" , \"title\" : \"Application WASM Module Name\" , \"description\" : \"Name of the WASM Component Library Module.\\nMust be unique within the Application.\\nIf not defined is extracted from the WASM Module itself.\" }, \"config\" : { \"type\" : \"string\" , \"title\" : \"Application WASM Module Config\" , \"description\" : \"Path to the WASM Component Library Module Config File.\\nThis will replace any `config.json` inside the module.\\nIf defined it must be valid according to the modules `config.schema.json` file.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" }, \"share\" : { \"type\" : \"string\" , \"title\" : \"Application WASM Module Package Share Dataset.\" , \"description\" : \"Path to the WASM Component Library Module Shareable Data.\\nWill replace or augment any data defined within the module itself.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" } }, \"required\" : [ \"package\" ] }, \"uniqueItems\" : true }, \"www\" : { \"type\" : \"string\" , \"title\" : \"Data to be served to a browser at the applications URL from /\" , \"description\" : \"A Directory or archive of data to be served to a browser for the App.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" }, \"share\" : { \"type\" : \"string\" , \"title\" : \"Data to be shared amongst all modules within the application.\" , \"description\" : \"A Directory or archive of data to be shared with all Modules in the application.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" } }, \"required\" : [ \"$schema\" ] }","title":"Manifest Schema"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_package/#manifest-example","text":"Example: hermes_app_manifest.json { \"$schema\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_app_manifest.schema.json\" , \"icon\" : \"file://icon.svg\" , \"metadata\" : \"file://metadata.json\" , \"modules\" : [ { \"package\" : \"file://modules/counter.hmod\" }, { \"package\" : \"file://modules/counter.hmod\" , \"name\" : \"counter1\" , \"config\" : \"file://modules/counter1/config.json\" }, { \"package\" : \"file://modules/counter.hmod\" , \"name\" : \"counter2\" , \"config\" : \"file://modules/counter2/config.json\" , \"share\" : \"file://modules/counter2/share\" } ], \"srv\" : { \"www\" : \"file://srv/flutter_app.zst\" , \"share\" : \"file://srv/share\" } }","title":"Manifest Example"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_signatures/","text":"Hermes Application Signatures \u00b6 Signatures in Hermes Applications are created by Authors of the application. If there is an independent Publisher/s of the application they too can attach a signature to the application. This method protects any Application from being tampered with once released by the Author, and also allows it to be safely co-signed by a Publisher. Author signature payload \u00b6 Application package author signature payload according to the signing spec should follow this schema: Schema: hermes_module_cose_author_payload.schema.json { \"$schema\" : \"http://json-schema.org/draft-07/schema#\" , \"$id\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_cose_author_payload.schema.json\" , \"title\" : \"Hermes WASM Module Author COSE Payload Schema\" , \"description\" : \"Defines the COSE signing payload. A WASM module package specific information which should be cryptographically protected.\" , \"type\" : \"object\" , \"additionalProperties\" : false , \"properties\" : { \"metadata\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of metadata.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the metadata.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" }, \"component\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of module.wasm package file\" , \"description\" : \"A hex representation of the Blake2b hash of the module.wasm file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" }, \"config\" : { \"type\" : \"object\" , \"title\" : \"WASM Module Config Object.\" , \"description\" : \"Object representing the WASM Module Config File.\" , \"properties\" : { \"file\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of config.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the config.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" }, \"schema\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of config.schema.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the config.schema.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" } }, \"required\" : [ \"schema\" ] }, \"settings\" : { \"type\" : \"object\" , \"title\" : \"WASM Module Settings Object.\" , \"description\" : \"Object representing the WASM Module Settings.\" , \"properties\" : { \"schema\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of settings.schema.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the settings.schema.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" } }, \"required\" : [ \"schema\" ] }, \"share\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of the whole share package directory\" , \"description\" : \"A hex representation of the Blake2b hash of the whole share directory inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" } }, \"required\" : [ \"metadata\" , \"component\" ] } Application package author signature payload example: Example: hermes_module_cose_author_payload.json { \"metadata\" : \"e6d4ecf4e0df7688f8fb5d564fc6bcafffdfc46bb793631a9ed3bb6d888561df\" , \"component\" : \"0cfdb8d790b0a30fb8eb12d98c1791f35a279c0a5f8bf313cd582fc6b8cd69d5\" , \"config\" : { \"file\" : \"69e66dc097dbd3d3a333c699d05b2c7173d6d9cc7d6a7e35745339e282d70904\" , \"schema\" : \"0da53b44f7de08af0743779dfb9448fa32fe3584e9b940ae740a1bbc74741bba\" }, \"settings\" : { \"schema\" : \"9cd493f0cbdb907814b142e22e76fa8cf0e95bcd3117d4c3e7c4cbe4b885d932\" }, \"share\" : \"ed6ac923cfa79ab05cf2a41dc43493e0f74d8bd7596185be5bce74ffda85d9a5\" }","title":"Hermes Application Signatures"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_signatures/#hermes-application-signatures","text":"Signatures in Hermes Applications are created by Authors of the application. If there is an independent Publisher/s of the application they too can attach a signature to the application. This method protects any Application from being tampered with once released by the Author, and also allows it to be safely co-signed by a Publisher.","title":"Hermes Application Signatures"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_signatures/#author-signature-payload","text":"Application package author signature payload according to the signing spec should follow this schema: Schema: hermes_module_cose_author_payload.schema.json { \"$schema\" : \"http://json-schema.org/draft-07/schema#\" , \"$id\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_cose_author_payload.schema.json\" , \"title\" : \"Hermes WASM Module Author COSE Payload Schema\" , \"description\" : \"Defines the COSE signing payload. A WASM module package specific information which should be cryptographically protected.\" , \"type\" : \"object\" , \"additionalProperties\" : false , \"properties\" : { \"metadata\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of metadata.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the metadata.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" }, \"component\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of module.wasm package file\" , \"description\" : \"A hex representation of the Blake2b hash of the module.wasm file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" }, \"config\" : { \"type\" : \"object\" , \"title\" : \"WASM Module Config Object.\" , \"description\" : \"Object representing the WASM Module Config File.\" , \"properties\" : { \"file\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of config.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the config.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" }, \"schema\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of config.schema.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the config.schema.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" } }, \"required\" : [ \"schema\" ] }, \"settings\" : { \"type\" : \"object\" , \"title\" : \"WASM Module Settings Object.\" , \"description\" : \"Object representing the WASM Module Settings.\" , \"properties\" : { \"schema\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of settings.schema.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the settings.schema.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" } }, \"required\" : [ \"schema\" ] }, \"share\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of the whole share package directory\" , \"description\" : \"A hex representation of the Blake2b hash of the whole share directory inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" } }, \"required\" : [ \"metadata\" , \"component\" ] } Application package author signature payload example: Example: hermes_module_cose_author_payload.json { \"metadata\" : \"e6d4ecf4e0df7688f8fb5d564fc6bcafffdfc46bb793631a9ed3bb6d888561df\" , \"component\" : \"0cfdb8d790b0a30fb8eb12d98c1791f35a279c0a5f8bf313cd582fc6b8cd69d5\" , \"config\" : { \"file\" : \"69e66dc097dbd3d3a333c699d05b2c7173d6d9cc7d6a7e35745339e282d70904\" , \"schema\" : \"0da53b44f7de08af0743779dfb9448fa32fe3584e9b940ae740a1bbc74741bba\" }, \"settings\" : { \"schema\" : \"9cd493f0cbdb907814b142e22e76fa8cf0e95bcd3117d4c3e7c4cbe4b885d932\" }, \"share\" : \"ed6ac923cfa79ab05cf2a41dc43493e0f74d8bd7596185be5bce74ffda85d9a5\" }","title":"Author signature payload"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_srv_www/","text":"HTTP Served Application Data \u00b6 Hermes HTTP gateway \u00b6 Hermes provides a complete HTTP gateway. Applications are deployed to a sub-domain under the main domain of the hermes node. For example, if the Hermes node is located on the machine hermes.local , it will serve the application athena on athena.hermes.local . The gateway will direct all requests to the /api path on the applications URL to Webasm Component Modules. These will be delivered as Hermes events, and the Webasm Components will use HTTP gateway API's to produce responses. HTTP Static Data \u00b6 Any application run in a browser consists of a large number of static assets. Given the above example, the athena application can serve these static files contained in the Application from / . These are contained in /srv/www within the application package. If a file is requested that does not exist, the Hermes HTTP gateway will automatically respond with 404. It will also respond with 404 is there is no static HTTP data in the application. An example of an application which would not have static HTTP data is one where all data is served through the /api path. These static files are mapped 1:1 from the application package to the http url path. Example file to url mapping \u00b6 For example the following files in the package can be retrieved at the example URL. File URL /srv/www/index.html http://athena.hermes.local/index.html /srv/www/icons/athena.svg http://athena.hermes.local/icons/athena.svg These files are served with no interaction with the Webasm component modules within the application. Any file contained in the apps /srv/www directory are transparently available. The only restriction is that the path /api can not be used. This is because /api is reserved for http requests that are directed to Hermes Webasm component modules for service, rather than serving a static file. HTTP Static data validity checks \u00b6 If an application is attempted to be packaged with files in /srv/www/api then the packaging attempt will fail. Further, a Hermes application with data under /srv/www/api will also fail to load as an invalid package.","title":"HTTP Served Application Data"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_srv_www/#http-served-application-data","text":"","title":"HTTP Served Application Data"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_srv_www/#hermes-http-gateway","text":"Hermes provides a complete HTTP gateway. Applications are deployed to a sub-domain under the main domain of the hermes node. For example, if the Hermes node is located on the machine hermes.local , it will serve the application athena on athena.hermes.local . The gateway will direct all requests to the /api path on the applications URL to Webasm Component Modules. These will be delivered as Hermes events, and the Webasm Components will use HTTP gateway API's to produce responses.","title":"Hermes HTTP gateway"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_srv_www/#http-static-data","text":"Any application run in a browser consists of a large number of static assets. Given the above example, the athena application can serve these static files contained in the Application from / . These are contained in /srv/www within the application package. If a file is requested that does not exist, the Hermes HTTP gateway will automatically respond with 404. It will also respond with 404 is there is no static HTTP data in the application. An example of an application which would not have static HTTP data is one where all data is served through the /api path. These static files are mapped 1:1 from the application package to the http url path.","title":"HTTP Static Data"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_srv_www/#example-file-to-url-mapping","text":"For example the following files in the package can be retrieved at the example URL. File URL /srv/www/index.html http://athena.hermes.local/index.html /srv/www/icons/athena.svg http://athena.hermes.local/icons/athena.svg These files are served with no interaction with the Webasm component modules within the application. Any file contained in the apps /srv/www directory are transparently available. The only restriction is that the path /api can not be used. This is because /api is reserved for http requests that are directed to Hermes Webasm component modules for service, rather than serving a static file.","title":"Example file to url mapping"},{"location":"architecture/08_concepts/hermes_packaging_requirements/app_srv_www/#http-static-data-validity-checks","text":"If an application is attempted to be packaged with files in /srv/www/api then the packaging attempt will fail. Further, a Hermes application with data under /srv/www/api will also fail to load as an invalid package.","title":"HTTP Static data validity checks"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/","text":"Overview \u00b6 Hermes Applications and Filesystem Access \u00b6 Hermes applications are fully sandboxed. They do not have direct access to Filesystem resources on the host. However internally, a Hermes application will see a filesystem hierarchy that represents all the files that it may read and/or write. Hermes presents a filesystem hierarchy to the application which is adapted from the Linux Filesystem Hierarchy Standard V3 . Hermes application packages are structured around this standard to maximize consistency. How Hermes manages and organizes application files is necessary when considering the structure of the Application package itself. Components to a Hermes Application \u00b6 Each application consists of two HDF5 files. The Application package itself. The Applications persistent re-writable data. The application itself sees a unified view of these two files. Data is divided between them to make merging those views easy and consistent. The Full Application Filesystem Hierarchy \u00b6 Name Type Description Writable Required / Root Directory /tmp Temporary Files stored in memory /etc Writable settings /etc/settings.json Hermes Engine settings for this application. /etc/<module-name>/settings.json Module specific Runtime Configurable Settings /srv Data which is served by this system. /srv/www Files automatically served for this application on HTTP. /srv/share Data files which are not automatically served but can be shared by all Wasm Modules in the application. /usr Shareable, read-only data. /usr/lib Application over-rides for webasm library modules. /usr/lib/<module-name> Application over-rides for named webasm library module. /usr/lib/<module-name>/config.json Config to use for the module instead of its bundled config. /usr/lib/<module-name>/share Overrides for a modules shareable readonly data /lib Wasm Component Module Library Directory /lib/<module-name>/metadata.json Modules Metadata /lib/<module-name>/module.wasm Actual WASM Module /lib/<module-name>/config.schema.json Modules Fixed Configuration Schema /lib/<module-name>/config.json Modules Fixed Configuration (Must match the schema) /lib/<module-name>/settings.schema.json Modules User Settings Schema /lib/<module-name>/share Modules shareable readonly data /lib/<module-name>/author.cose Modules Author Signature /var/ Contains variable data files. (Persistent) /metadata.json Applications Metadata /icon.svg Application Icon /author.cose Application Author Signature /publisher.cose Application Publisher Signature Icon Legend \u00b6 - Directory (Persistent) - Directory (Temporary) - General File - Binary File - COSE Certificate - NO - YES Writable Data \u00b6 A Hermes application can have access to several writable data source. Databases - These are not described here and are documented elsewhere. Temporary file storage - Located in ram and not persisted between invocations of Hermes. Application writable and persistent storage . Temporary File Storage \u00b6 If so configured, Hermes can provide a fixed size re-writable in-memory file system to a Hermes Application. The application will see it at /tmp and it can use it like any normal filesystem. It has a maximum available size, defined by the user. Attempts to write more data than configured will fail. If no temporary storage has been provided to the application it will not see a /tmp directory in its directory hierarchy. Application writable and persistent storage \u00b6 The application will also be given a re-writable and persistent file storage. Like the Temporary File Storage it is configured with a maximum size. Attempts by an application to use more storage than configured will fail. Some data within the Application persistent writable storage is not actually writable by the application directly. This data is used by Hermes to store persistent configuration. It can be read by the application. This prevents the application from re-writing application settings without the users permission. From the full Filesystem Hierarchy, the following directories and files are contained in the Application writable and persistent storage. Name Type Description App Writable Hermes Writable / Root Directory /etc Writable settings /etc/settings.json Hermes Engine settings for this application. /etc/<module-name>/settings.json Module specific Runtime Configurable Settings /var Contains variable data files. (Persistent) The application can store any configuration it likes into /etc . Provided it does not modify or delete any settings.json files managed by Hermes itself. The application can read these files at any time. The application can store any data it requires, with any organization it needs in the /var directory. The only checks performed by hermes on these files are to ensure that the maximum size of the file system is not exceeded. These files/directories may NEVER appear in a Hermes application package. The READ ONLY portions of the File System are linked to in the Application Package. During the linking process, file over-rides are processed and cross linked. This simplifies both the Application logic and Hermes engine as the correct file will appear to exist in the most logical location. See Loading a Hermes Application Application Package \u00b6 Applications in Hermes are packaged and distributed using HDF5 (Hierarchical Data Format Version 5) files. For detailed information see Packaging A Hermes Application . Application packages consist of the following files. WASM Library Modules Configuration Files Static data files which can be served directly by a Hermes node. Static data files which can be read by any WASM Library Module within the Application. HDF5 is a Hierarchial file format. An Application package consists of a number of HDF5 files in the following relationship. .d2-75179d2cee85427d8db4afe4acc3ec26 .text { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-regular\"; } @font-face { font-family: d2-75179d2cee85427d8db4afe4acc3ec26-font-regular; src: url(\"data:application/font-woff;base64,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\"); } @font-face { font-family: d2-75179d2cee85427d8db4afe4acc3ec26-font-semibold; src: url(\"data:application/font-woff;base64,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&#8540;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\"); } .appendix-icon { filter: drop-shadow(0px 0px 32px rgba(31, 36, 58, 0.1)); } .d2-75179d2cee85427d8db4afe4acc3ec26 .text-mono { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-mono\"; } @font-face { font-family: d2-75179d2cee85427d8db4afe4acc3ec26-font-mono; src: url(\"data:application/font-woff;base64,\"); } .d2-75179d2cee85427d8db4afe4acc3ec26 .text-mono-bold { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-mono-bold\"; } @font-face { font-family: d2-75179d2cee85427d8db4afe4acc3ec26-font-mono-bold; src: url(\"data:application/font-woff;base64,d09GRgABAAAAABjMAAwAAAAAKEgAAQScAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABHAAAAGAAAABgmKbWhWNtYXAAAAF8AAAA1wAAAUQIFAoeZ2FzcAAAAlQAAAAIAAAACAAAABBnbHlmAAACXAAAD5QAABXA9hN+WGhlYWQAABHwAAAANgAAADYbI9ohaGhlYQAAEigAAAAkAAAAJAYzAN5obXR4AAASTAAAAK0AAAEorXAUw2xvY2EAABL8AAAAlgAAAJbXmNKCbWF4cAAAE5QAAAAgAAAAIAB+AmpuYW1lAAATtAAABO8AAA2sAwZtKnBvc3QAABikAAAAIAAAACD/uAAzcHJlcAAAGMQAAAAHAAAAB2gGjIUABAJYArwABQAAAooCWAAAAEsCigJYAAABXgAyAR4AAAILAwkDBAMCAgQgAAL3AgA4AwAAAAAAAAAAQURCTwCgACD//wPY/u8AAAQkAcZgAAGfAAAAAAHeApQAAAAgAAN4nIzOSU5iYQCF0fOKRxVUUWDfoqLYgNi3dIJIYjRxYJw4xWW4LqcadSnGZRj9TRgw9o5Pcj9EEiJkxFEVJQWxlIKisopNW7bVNDS1tHWcu3TtVs99CPRlaSB31Aey68KVGz13IYQ3eWPGZaXlwmf4khSHj/AaXsJzeAqP4T089Ft+tkhb04lTDcdag/9de/YdOHSkqqbjTN0vCbGk&#8535;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\"); } .shape { shape-rendering: geometricPrecision; stroke-linejoin: round; } .connection { stroke-linecap: round; stroke-linejoin: round; } .blend { mix-blend-mode: multiply; opacity: 0.5; } .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N1{fill:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N2{fill:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N3{fill:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N4{fill:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N5{fill:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N6{fill:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N7{fill:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B1{fill:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B2{fill:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B3{fill:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B4{fill:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B5{fill:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B6{fill:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AA2{fill:#4A6FF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AA4{fill:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AA5{fill:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AB4{fill:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AB5{fill:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N1{stroke:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N2{stroke:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N3{stroke:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N4{stroke:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N5{stroke:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N6{stroke:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N7{stroke:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B1{stroke:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B2{stroke:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B3{stroke:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B4{stroke:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B5{stroke:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B6{stroke:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AA2{stroke:#4A6FF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AA4{stroke:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AA5{stroke:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AB4{stroke:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AB5{stroke:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N1{background-color:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N2{background-color:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N3{background-color:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N4{background-color:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N5{background-color:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N6{background-color:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N7{background-color:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B1{background-color:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B2{background-color:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B3{background-color:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B4{background-color:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B5{background-color:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B6{background-color:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AA2{background-color:#4A6FF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AA4{background-color:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AA5{background-color:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AB4{background-color:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AB5{background-color:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N1{color:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N2{color:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N3{color:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N4{color:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N5{color:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N6{color:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N7{color:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B1{color:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B2{color:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B3{color:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B4{color:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B5{color:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B6{color:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AA2{color:#4A6FF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AA4{color:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AA5{color:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AB4{color:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AB5{color:#F7F8FE;}.appendix text.text{fill:#0A0F25}.md{--color-fg-default:#0A0F25;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#FFFFFF;--color-canvas-subtle:#EEF1F8;--color-border-default:#0D32B2;--color-border-muted:#0D32B2;--color-neutral-muted:#EEF1F8;--color-accent-fg:#0D32B2;--color-accent-emphasis:#0D32B2;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-darker-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:lighten}.sketch-overlay-B2{fill:url(#streaks-darker-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:lighten}.sketch-overlay-B3{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-B5{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-B6{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-AA2{fill:url(#streaks-dark-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:overlay}.sketch-overlay-AA4{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-AA5{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-AB5{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-darker-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:lighten}.sketch-overlay-N2{fill:url(#streaks-dark-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.light-code{display: block}.dark-code{display: none}@media screen and (prefers-color-scheme:dark){ .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N1{fill:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N2{fill:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N3{fill:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N4{fill:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N5{fill:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N6{fill:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N7{fill:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B1{fill:#000536;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B2{fill:#0F66B7;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B3{fill:#4393DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B4{fill:#87BFF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B5{fill:#BCDDFB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B6{fill:#E5F3FF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AA2{fill:#076F6F;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AA4{fill:#77DEDE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AA5{fill:#C3F8F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AB4{fill:#C1A2F3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AB5{fill:#DACEFB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N1{stroke:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N2{stroke:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N3{stroke:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N4{stroke:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N5{stroke:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N6{stroke:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N7{stroke:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B1{stroke:#000536;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B2{stroke:#0F66B7;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B3{stroke:#4393DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B4{stroke:#87BFF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B5{stroke:#BCDDFB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B6{stroke:#E5F3FF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AA2{stroke:#076F6F;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AA4{stroke:#77DEDE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AA5{stroke:#C3F8F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AB4{stroke:#C1A2F3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AB5{stroke:#DACEFB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N1{background-color:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N2{background-color:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N3{background-color:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N4{background-color:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N5{background-color:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N6{background-color:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N7{background-color:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B1{background-color:#000536;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B2{background-color:#0F66B7;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B3{background-color:#4393DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B4{background-color:#87BFF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B5{background-color:#BCDDFB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B6{background-color:#E5F3FF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AA2{background-color:#076F6F;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AA4{background-color:#77DEDE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AA5{background-color:#C3F8F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AB4{background-color:#C1A2F3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AB5{background-color:#DACEFB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N1{color:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N2{color:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N3{color:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N4{color:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N5{color:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N6{color:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N7{color:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B1{color:#000536;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B2{color:#0F66B7;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B3{color:#4393DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B4{color:#87BFF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B5{color:#BCDDFB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B6{color:#E5F3FF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AA2{color:#076F6F;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AA4{color:#77DEDE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AA5{color:#C3F8F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AB4{color:#C1A2F3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AB5{color:#DACEFB;}.appendix text.text{fill:#0A0F25}.md{--color-fg-default:#0A0F25;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#FFFFFF;--color-canvas-subtle:#EEF1F8;--color-border-default:#000536;--color-border-muted:#0F66B7;--color-neutral-muted:#EEF1F8;--color-accent-fg:#0F66B7;--color-accent-emphasis:#0F66B7;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-darker-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:lighten}.sketch-overlay-B2{fill:url(#streaks-dark-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:overlay}.sketch-overlay-B3{fill:url(#streaks-dark-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:overlay}.sketch-overlay-B4{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-B5{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-B6{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-AA2{fill:url(#streaks-dark-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:overlay}.sketch-overlay-AA4{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-AA5{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-AB5{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-N1{fill:url(#streaks-darker-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:lighten}.sketch-overlay-N2{fill:url(#streaks-dark-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.light-code{display: block}.dark-code{display: none}} .d2-75179d2cee85427d8db4afe4acc3ec26 .md em, .d2-75179d2cee85427d8db4afe4acc3ec26 .md dfn { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-italic\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md b, .d2-75179d2cee85427d8db4afe4acc3ec26 .md strong { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-bold\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md kbd, .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre, .d2-75179d2cee85427d8db4afe4acc3ec26 .md samp { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-mono\"; font-size: 1em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md { tab-size: 4; } /* variables are provided in d2renderers/d2svg/d2svg.go */ .d2-75179d2cee85427d8db4afe4acc3ec26 .md { -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; margin: 0; background-color: transparent; /* we don't want to define the background color */ font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-regular\"; font-size: 16px; line-height: 1.5; word-wrap: break-word; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md details, .d2-75179d2cee85427d8db4afe4acc3ec26 .md figcaption, .d2-75179d2cee85427d8db4afe4acc3ec26 .md figure { display: block; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md summary { display: list-item; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [hidden] { display: none !important; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md a { background-color: transparent; color: var(--color-accent-fg); text-decoration: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md a:active, .d2-75179d2cee85427d8db4afe4acc3ec26 .md a:hover { outline-width: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md abbr[title] { border-bottom: none; text-decoration: underline dotted; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md dfn { font-style: italic; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h1 { margin: 0.67em 0; padding-bottom: 0.3em; font-size: 2em; border-bottom: 1px solid var(--color-border-muted); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md mark { background-color: var(--color-attention-subtle); color: var(--color-text-primary); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md small { font-size: 90%; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md sub, .d2-75179d2cee85427d8db4afe4acc3ec26 .md sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md sub { bottom: -0.25em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md sup { top: -0.5em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md img { border-style: none; max-width: 100%; box-sizing: content-box; background-color: var(--color-canvas-default); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md figure { margin: 1em 40px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md hr { box-sizing: content-box; overflow: hidden; background: transparent; border-bottom: 1px solid var(--color-border-muted); height: 0.25em; padding: 0; margin: 24px 0; background-color: var(--color-border-default); border: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md input { font: inherit; margin: 0; overflow: visible; font-family: inherit; font-size: inherit; line-height: inherit; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"button\"], .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"reset\"], .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"submit\"] { -webkit-appearance: button; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"button\"]::-moz-focus-inner, .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"reset\"]::-moz-focus-inner, .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"submit\"]::-moz-focus-inner { border-style: none; padding: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"button\"]:-moz-focusring, .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"reset\"]:-moz-focusring, .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"submit\"]:-moz-focusring { outline: 1px dotted ButtonText; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"checkbox\"], .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"radio\"] { box-sizing: border-box; padding: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"number\"]::-webkit-inner-spin-button, .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"number\"]::-webkit-outer-spin-button { height: auto; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"search\"] { -webkit-appearance: textfield; outline-offset: -2px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"search\"]::-webkit-search-cancel-button, .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"search\"]::-webkit-search-decoration { -webkit-appearance: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ::-webkit-input-placeholder { color: inherit; opacity: 0.54; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ::-webkit-file-upload-button { -webkit-appearance: button; font: inherit; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md a:hover { text-decoration: underline; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md hr::before { display: table; content: \"\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md hr::after { display: table; clear: both; content: \"\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md table { border-spacing: 0; border-collapse: collapse; display: block; width: max-content; max-width: 100%; overflow: auto; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md td, .d2-75179d2cee85427d8db4afe4acc3ec26 .md th { padding: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md details summary { cursor: pointer; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md details:not([open]) > *:not(summary) { display: none !important; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md kbd { display: inline-block; padding: 3px 5px; color: var(--color-fg-default); vertical-align: middle; background-color: var(--color-canvas-subtle); border: solid 1px var(--color-neutral-muted); border-bottom-color: var(--color-neutral-muted); border-radius: 6px; box-shadow: inset 0 -1px 0 var(--color-neutral-muted); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h1, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h2, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h3, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h4, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h5, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h6 { margin-top: 24px; margin-bottom: 16px; font-weight: 400; line-height: 1.25; font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-semibold\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h2 { padding-bottom: 0.3em; font-size: 1.5em; border-bottom: 1px solid var(--color-border-muted); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h3 { font-size: 1.25em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h4 { font-size: 1em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h5 { font-size: 0.875em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h6 { font-size: 0.85em; color: var(--color-fg-muted); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md p { margin-top: 0; margin-bottom: 10px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md blockquote { margin: 0; padding: 0 1em; color: var(--color-fg-muted); border-left: 0.25em solid var(--color-border-default); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol { margin-top: 0; margin-bottom: 0; padding-left: 2em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol ol, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul ol { list-style-type: lower-roman; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul ul ol, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul ol ol, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol ul ol, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol ol ol { list-style-type: lower-alpha; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md dd { margin-left: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre { margin-top: 0; margin-bottom: 0; word-wrap: normal; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ::placeholder { color: var(--color-fg-subtle); opacity: 1; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md input::-webkit-outer-spin-button, .d2-75179d2cee85427d8db4afe4acc3ec26 .md input::-webkit-inner-spin-button { margin: 0; -webkit-appearance: none; appearance: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md::before { display: table; content: \"\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md::after { display: table; clear: both; content: \"\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md > *:first-child { margin-top: 0 !important; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md > *:last-child { margin-bottom: 0 !important; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md a:not([href]) { color: inherit; text-decoration: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .absent { color: var(--color-danger-fg); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .anchor { float: left; padding-right: 4px; margin-left: -20px; line-height: 1; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .anchor:focus { outline: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md p, .d2-75179d2cee85427d8db4afe4acc3ec26 .md blockquote, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol, .d2-75179d2cee85427d8db4afe4acc3ec26 .md dl, .d2-75179d2cee85427d8db4afe4acc3ec26 .md table, .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre, .d2-75179d2cee85427d8db4afe4acc3ec26 .md details { margin-top: 0; margin-bottom: 16px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md blockquote > :first-child { margin-top: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md blockquote > :last-child { margin-bottom: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md sup > a::before { content: \"[\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md sup > a::after { content: \"]\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h1:hover .anchor, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h2:hover .anchor, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h3:hover .anchor, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h4:hover .anchor, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h5:hover .anchor, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h6:hover .anchor { text-decoration: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h1 tt, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h1 code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h2 tt, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h2 code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h3 tt, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h3 code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h4 tt, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h4 code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h5 tt, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h5 code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h6 tt, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h6 code { padding: 0 0.2em; font-size: inherit; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul.no-list, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol.no-list { padding: 0; list-style-type: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol[type=\"1\"] { list-style-type: decimal; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol[type=\"a\"] { list-style-type: lower-alpha; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol[type=\"i\"] { list-style-type: lower-roman; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md div > ol:not([type]) { list-style-type: decimal; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul ul, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul ol, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol ol, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol ul { margin-top: 0; margin-bottom: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md li > p { margin-top: 16px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md li + li { margin-top: 0.25em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md dl { padding: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md dl dt { padding: 0; margin-top: 16px; font-size: 1em; font-style: italic; font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-semibold\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md dl dd { padding: 0 16px; margin-bottom: 16px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md table th { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-semibold\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md table th, .d2-75179d2cee85427d8db4afe4acc3ec26 .md table td { padding: 6px 13px; border: 1px solid var(--color-border-default); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md table tr { background-color: var(--color-canvas-default); border-top: 1px solid var(--color-border-muted); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md table tr:nth-child(2n) { background-color: var(--color-canvas-subtle); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md table img { background-color: transparent; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md img[align=\"right\"] { padding-left: 20px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md img[align=\"left\"] { padding-right: 20px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.frame { display: block; overflow: hidden; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.frame > span { display: block; float: left; width: auto; padding: 7px; margin: 13px 0 0; overflow: hidden; border: 1px solid var(--color-border-default); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.frame span img { display: block; float: left; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.frame span span { display: block; padding: 5px 0 0; clear: both; color: var(--color-fg-default); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.align-center { display: block; overflow: hidden; clear: both; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.align-center > span { display: block; margin: 13px auto 0; overflow: hidden; text-align: center; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.align-center span img { margin: 0 auto; text-align: center; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.align-right { display: block; overflow: hidden; clear: both; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.align-right > span { display: block; margin: 13px 0 0; overflow: hidden; text-align: right; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.align-right span img { margin: 0; text-align: right; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.float-left { display: block; float: left; margin-right: 13px; overflow: hidden; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.float-left span { margin: 13px 0 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.float-right { display: block; float: right; margin-left: 13px; overflow: hidden; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.float-right > span { display: block; margin: 13px auto 0; overflow: hidden; text-align: right; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md tt { padding: 0.2em 0.4em; margin: 0; font-size: 85%; background-color: var(--color-neutral-muted); border-radius: 6px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md code br, .d2-75179d2cee85427d8db4afe4acc3ec26 .md tt br { display: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md del code { text-decoration: inherit; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre code { font-size: 100%; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre > code { padding: 0; margin: 0; word-break: normal; white-space: pre; background: transparent; border: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .highlight { margin-bottom: 16px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .highlight pre { margin-bottom: 0; word-break: normal; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .highlight pre, .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre { padding: 16px; overflow: auto; font-size: 85%; line-height: 1.45; background-color: var(--color-canvas-subtle); border-radius: 6px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre tt { display: inline; max-width: auto; padding: 0; margin: 0; overflow: visible; line-height: inherit; word-wrap: normal; background-color: transparent; border: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .csv-data td, .d2-75179d2cee85427d8db4afe4acc3ec26 .md .csv-data th { padding: 5px; overflow: hidden; font-size: 12px; line-height: 1; text-align: left; white-space: nowrap; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .csv-data .blob-num { padding: 10px 8px 9px; text-align: right; background: var(--color-canvas-default); border: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .csv-data tr { border-top: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .csv-data th { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-semibold\"; background: var(--color-canvas-subtle); border-top: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .footnotes { font-size: 12px; color: var(--color-fg-muted); border-top: 1px solid var(--color-border-default); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .footnotes ol { padding-left: 16px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .footnotes li { position: relative; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .footnotes li:target::before { position: absolute; top: -8px; right: -8px; bottom: -8px; left: -24px; pointer-events: none; content: \"\"; border: 2px solid var(--color-accent-emphasis); border-radius: 6px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .footnotes li:target { color: var(--color-fg-default); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .task-list-item { list-style-type: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .task-list-item label { font-weight: 400; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .task-list-item.enabled label { cursor: pointer; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .task-list-item + .task-list-item { margin-top: 3px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .task-list-item .handle { display: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .task-list-item-checkbox { margin: 0 0.2em 0.25em -1.6em; vertical-align: middle; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .contains-task-list:dir(rtl) .task-list-item-checkbox { margin: 0 -1.6em 0.25em 0.2em; } / (root) /srv Conditionally Optional: Data for the service provided by this Application. An Application MUST have at least: - one `/srv/www` file set; or - one `/lib/<module-name>` WASM package. /usr/lib OPTIONAL: Data overrides for the Application. /lib Conditionally Optional: WASM Component Module Library. An Application MUST have at least: - one `/srv/www` file set; or - one `/lib/<module-name>` WASM package. HDF5 File \u00b6 metadata.json Defines the application. + Application Name + Version + Description ? Source Repo + License/s + Link to icon in http served files. ? Link to an OpenAPI Document in http served files. + Minimum Resource requirements ? Optimum Resource requirements ? Maximum Resource requirements ? Requested Permissions icon.svg Application icon.svg image file. author.cose Authors identity and Signature over the complete package. May be multiple signatures for multiple authors. publisher.cose OPTIONAL: Publisher identity and Signature over the complete package. May be multiple signatures for multiple publishers. /www OPTIONAL: Data served on HTTP automatically for the application. /share OPTIONAL: Data sharable by all Modules in the application. /<module-name-1> OPTIONAL: Override individual module contents at application level. /<module-name-1> WASM Components are individually packaged and signed before inclusion into an application. config.json OPTIONAL: Modules runtime config file. /share Override/Add Data files specific to this Module. /share OPTIONAL: Data files specific to this Module. metadata.json Defines the module. + Module Name + Version + Description ? Source Repo + License/s module.wasm Compiled WASM Component Module. config.schema.json OPTIONAL: Schema for the config.json file. config.json Conditionally Optional: Modules runtime config file. MUST Exist if `config.schema.json` exists. settings.schema.json OPTIONAL: Schema for the user option settings.json file. author.cose Authors signature over the wasm module. Conditionally Optional: Data for the service provided by this Application. An Application MUST have at least: - one `/srv/www` file set; or - one `/lib/<module-name>` WASM package. OPTIONAL: Data overrides for the Application. Conditionally Optional: WASM Component Module Library. An Application MUST have at least: - one `/srv/www` file set; or - one `/lib/<module-name>` WASM package. Defines the application. + Application Name + Version + Description ? Source Repo + License/s + Link to icon in http served files. ? Link to an OpenAPI Document in http served files. + Minimum Resource requirements ? Optimum Resource requirements ? Maximum Resource requirements ? Requested Permissions Application icon.svg image file. Authors identity and Signature over the complete package. May be multiple signatures for multiple authors. OPTIONAL: Publisher identity and Signature over the complete package. May be multiple signatures for multiple publishers. OPTIONAL: Data served on HTTP automatically for the application. OPTIONAL: Data sharable by all Modules in the application. OPTIONAL: Override individual module contents at application level. WASM Components are individually packaged and signed before inclusion into an application. OPTIONAL: Modules runtime config file. Override/Add Data files specific to this Module. OPTIONAL: Data files specific to this Module. Defines the module. + Module Name + Version + Description ? Source Repo + License/s Compiled WASM Component Module. OPTIONAL: Schema for the config.json file. Conditionally Optional: Modules runtime config file. MUST Exist if `config.schema.json` exists. OPTIONAL: Schema for the user option settings.json file. Authors signature over the wasm module. Application Root \u00b6 Each application package is an HDF5 file that stores all the static assets, data, and WASM modules. Each application package has associated metadata that is stored in the metadata.json file linked to the root path / . Application Metadata \u00b6 Every application includes Metadata which describes: the application itself; important information about the app; where it comes from; and what resources it needs to run. For detailed information see Application Metadata . Application Signatures \u00b6 Applications MUST be signed by their Author/s. They can also OPTIONALLY be signed by one or more publishers. These signatures enable hermes engine to determine if an application is trusted or not. Except for the party signing the certificate, they are otherwise identical. For detailed information see Hermes Application Signatures . Application Static HTTP Assets \u00b6 Static Assets consist of files that may be published only AS-IS via HTTP by the Application Modules. Application Static Assets are found in the /srv/www path. These Assets are OPTIONAL, however a valid Hermes application MUST consist of: at least one set of files at /srv/www ; or at least one WASM Component Module at /lib/<module-name> For detailed information see Packaging HTTP Served Files in a Hermes Application . Application Data \u00b6 This data is completely optional. Applications can also include sharable static data. This data is not served automatically, but can be read by any WASM module within the application. Application Data is found in the /src/share path. For detailed information see Hermes Application Data . Application Modules \u00b6 Application Modules are found in the /lib path. Individual WebAssembly Component Modules are named and stored in a subdirectory with that name. For example: /lib/greeter is the path to the greeter module. Modules themselves are pre-packaged and signed and are included into a Hermes Application when it is packaged. Modules may also be sym-linked, for example the same module may be used but configured differently. In this case, it only needs to be included once, and then named links in /lib can reference it. For example if the greeter module can also function as a goodbye module, it could be linked as so: /lib/goodbye -> /lib/greeter This allows modules to be reutilized without wastefully re-including them. The /usr/lib directory allows the runtime contents of a module to be altered by the application. This allows the same code to be used but operate differently because of its configuration. For detailed information see Hermes WASM Component Module . Additional Technical Resources \u00b6 HDF5 \u00b6 HDF5 CBOR \u00b6 CBOR Deterministic CBOR dcbor Rust crate. CDDL WASI And WIT \u00b6 WASI COSE \u00b6 RFC 8152 RFC 9052 RFC 9053","title":"Overview"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#overview","text":"","title":"Overview"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#hermes-applications-and-filesystem-access","text":"Hermes applications are fully sandboxed. They do not have direct access to Filesystem resources on the host. However internally, a Hermes application will see a filesystem hierarchy that represents all the files that it may read and/or write. Hermes presents a filesystem hierarchy to the application which is adapted from the Linux Filesystem Hierarchy Standard V3 . Hermes application packages are structured around this standard to maximize consistency. How Hermes manages and organizes application files is necessary when considering the structure of the Application package itself.","title":"Hermes Applications and Filesystem Access"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#components-to-a-hermes-application","text":"Each application consists of two HDF5 files. The Application package itself. The Applications persistent re-writable data. The application itself sees a unified view of these two files. Data is divided between them to make merging those views easy and consistent.","title":"Components to a Hermes Application"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#the-full-application-filesystem-hierarchy","text":"Name Type Description Writable Required / Root Directory /tmp Temporary Files stored in memory /etc Writable settings /etc/settings.json Hermes Engine settings for this application. /etc/<module-name>/settings.json Module specific Runtime Configurable Settings /srv Data which is served by this system. /srv/www Files automatically served for this application on HTTP. /srv/share Data files which are not automatically served but can be shared by all Wasm Modules in the application. /usr Shareable, read-only data. /usr/lib Application over-rides for webasm library modules. /usr/lib/<module-name> Application over-rides for named webasm library module. /usr/lib/<module-name>/config.json Config to use for the module instead of its bundled config. /usr/lib/<module-name>/share Overrides for a modules shareable readonly data /lib Wasm Component Module Library Directory /lib/<module-name>/metadata.json Modules Metadata /lib/<module-name>/module.wasm Actual WASM Module /lib/<module-name>/config.schema.json Modules Fixed Configuration Schema /lib/<module-name>/config.json Modules Fixed Configuration (Must match the schema) /lib/<module-name>/settings.schema.json Modules User Settings Schema /lib/<module-name>/share Modules shareable readonly data /lib/<module-name>/author.cose Modules Author Signature /var/ Contains variable data files. (Persistent) /metadata.json Applications Metadata /icon.svg Application Icon /author.cose Application Author Signature /publisher.cose Application Publisher Signature","title":"The Full Application Filesystem Hierarchy"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#icon-legend","text":"- Directory (Persistent) - Directory (Temporary) - General File - Binary File - COSE Certificate - NO - YES","title":"Icon Legend"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#writable-data","text":"A Hermes application can have access to several writable data source. Databases - These are not described here and are documented elsewhere. Temporary file storage - Located in ram and not persisted between invocations of Hermes. Application writable and persistent storage .","title":"Writable Data"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#temporary-file-storage","text":"If so configured, Hermes can provide a fixed size re-writable in-memory file system to a Hermes Application. The application will see it at /tmp and it can use it like any normal filesystem. It has a maximum available size, defined by the user. Attempts to write more data than configured will fail. If no temporary storage has been provided to the application it will not see a /tmp directory in its directory hierarchy.","title":"Temporary File Storage"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#application-writable-and-persistent-storage","text":"The application will also be given a re-writable and persistent file storage. Like the Temporary File Storage it is configured with a maximum size. Attempts by an application to use more storage than configured will fail. Some data within the Application persistent writable storage is not actually writable by the application directly. This data is used by Hermes to store persistent configuration. It can be read by the application. This prevents the application from re-writing application settings without the users permission. From the full Filesystem Hierarchy, the following directories and files are contained in the Application writable and persistent storage. Name Type Description App Writable Hermes Writable / Root Directory /etc Writable settings /etc/settings.json Hermes Engine settings for this application. /etc/<module-name>/settings.json Module specific Runtime Configurable Settings /var Contains variable data files. (Persistent) The application can store any configuration it likes into /etc . Provided it does not modify or delete any settings.json files managed by Hermes itself. The application can read these files at any time. The application can store any data it requires, with any organization it needs in the /var directory. The only checks performed by hermes on these files are to ensure that the maximum size of the file system is not exceeded. These files/directories may NEVER appear in a Hermes application package. The READ ONLY portions of the File System are linked to in the Application Package. During the linking process, file over-rides are processed and cross linked. This simplifies both the Application logic and Hermes engine as the correct file will appear to exist in the most logical location. See Loading a Hermes Application","title":"Application writable and persistent storage"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#application-package","text":"Applications in Hermes are packaged and distributed using HDF5 (Hierarchical Data Format Version 5) files. For detailed information see Packaging A Hermes Application . Application packages consist of the following files. WASM Library Modules Configuration Files Static data files which can be served directly by a Hermes node. Static data files which can be read by any WASM Library Module within the Application. HDF5 is a Hierarchial file format. An Application package consists of a number of HDF5 files in the following relationship. .d2-75179d2cee85427d8db4afe4acc3ec26 .text { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-regular\"; } @font-face { font-family: d2-75179d2cee85427d8db4afe4acc3ec26-font-regular; src: url(\"data:application/font-woff;base64,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\"); } @font-face { font-family: d2-75179d2cee85427d8db4afe4acc3ec26-font-semibold; src: url(\"data:application/font-woff;base64,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&#8540;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\"); } .appendix-icon { filter: drop-shadow(0px 0px 32px rgba(31, 36, 58, 0.1)); } .d2-75179d2cee85427d8db4afe4acc3ec26 .text-mono { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-mono\"; } @font-face { font-family: d2-75179d2cee85427d8db4afe4acc3ec26-font-mono; src: url(\"data:application/font-woff;base64,\"); } .d2-75179d2cee85427d8db4afe4acc3ec26 .text-mono-bold { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-mono-bold\"; } @font-face { font-family: d2-75179d2cee85427d8db4afe4acc3ec26-font-mono-bold; src: url(\"data:application/font-woff;base64,d09GRgABAAAAABjMAAwAAAAAKEgAAQScAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABHAAAAGAAAABgmKbWhWNtYXAAAAF8AAAA1wAAAUQIFAoeZ2FzcAAAAlQAAAAIAAAACAAAABBnbHlmAAACXAAAD5QAABXA9hN+WGhlYWQAABHwAAAANgAAADYbI9ohaGhlYQAAEigAAAAkAAAAJAYzAN5obXR4AAASTAAAAK0AAAEorXAUw2xvY2EAABL8AAAAlgAAAJbXmNKCbWF4cAAAE5QAAAAgAAAAIAB+AmpuYW1lAAATtAAABO8AAA2sAwZtKnBvc3QAABikAAAAIAAAACD/uAAzcHJlcAAAGMQAAAAHAAAAB2gGjIUABAJYArwABQAAAooCWAAAAEsCigJYAAABXgAyAR4AAAILAwkDBAMCAgQgAAL3AgA4AwAAAAAAAAAAQURCTwCgACD//wPY/u8AAAQkAcZgAAGfAAAAAAHeApQAAAAgAAN4nIzOSU5iYQCF0fOKRxVUUWDfoqLYgNi3dIJIYjRxYJw4xWW4LqcadSnGZRj9TRgw9o5Pcj9EEiJkxFEVJQWxlIKisopNW7bVNDS1tHWcu3TtVs99CPRlaSB31Aey68KVGz13IYQ3eWPGZaXlwmf4khSHj/AaXsJzeAqP4T089Ft+tkhb04lTDcdag/9de/YdOHSkqqbjTN0vCbGk&#8535;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\"); } .shape { shape-rendering: geometricPrecision; stroke-linejoin: round; } .connection { stroke-linecap: round; stroke-linejoin: round; } .blend { mix-blend-mode: multiply; opacity: 0.5; } .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N1{fill:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N2{fill:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N3{fill:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N4{fill:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N5{fill:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N6{fill:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N7{fill:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B1{fill:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B2{fill:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B3{fill:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B4{fill:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B5{fill:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B6{fill:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AA2{fill:#4A6FF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AA4{fill:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AA5{fill:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AB4{fill:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AB5{fill:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N1{stroke:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N2{stroke:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N3{stroke:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N4{stroke:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N5{stroke:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N6{stroke:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N7{stroke:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B1{stroke:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B2{stroke:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B3{stroke:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B4{stroke:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B5{stroke:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B6{stroke:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AA2{stroke:#4A6FF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AA4{stroke:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AA5{stroke:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AB4{stroke:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AB5{stroke:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N1{background-color:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N2{background-color:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N3{background-color:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N4{background-color:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N5{background-color:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N6{background-color:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N7{background-color:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B1{background-color:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B2{background-color:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B3{background-color:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B4{background-color:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B5{background-color:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B6{background-color:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AA2{background-color:#4A6FF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AA4{background-color:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AA5{background-color:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AB4{background-color:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AB5{background-color:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N1{color:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N2{color:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N3{color:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N4{color:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N5{color:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N6{color:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N7{color:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B1{color:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B2{color:#0D32B2;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B3{color:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B4{color:#E3E9FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B5{color:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B6{color:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AA2{color:#4A6FF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AA4{color:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AA5{color:#F7F8FE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AB4{color:#EDF0FD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AB5{color:#F7F8FE;}.appendix text.text{fill:#0A0F25}.md{--color-fg-default:#0A0F25;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#FFFFFF;--color-canvas-subtle:#EEF1F8;--color-border-default:#0D32B2;--color-border-muted:#0D32B2;--color-neutral-muted:#EEF1F8;--color-accent-fg:#0D32B2;--color-accent-emphasis:#0D32B2;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-darker-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:lighten}.sketch-overlay-B2{fill:url(#streaks-darker-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:lighten}.sketch-overlay-B3{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-B5{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-B6{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-AA2{fill:url(#streaks-dark-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:overlay}.sketch-overlay-AA4{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-AA5{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-AB5{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-darker-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:lighten}.sketch-overlay-N2{fill:url(#streaks-dark-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.light-code{display: block}.dark-code{display: none}@media screen and (prefers-color-scheme:dark){ .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N1{fill:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N2{fill:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N3{fill:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N4{fill:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N5{fill:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N6{fill:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-N7{fill:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B1{fill:#000536;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B2{fill:#0F66B7;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B3{fill:#4393DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B4{fill:#87BFF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B5{fill:#BCDDFB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-B6{fill:#E5F3FF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AA2{fill:#076F6F;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AA4{fill:#77DEDE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AA5{fill:#C3F8F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AB4{fill:#C1A2F3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .fill-AB5{fill:#DACEFB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N1{stroke:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N2{stroke:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N3{stroke:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N4{stroke:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N5{stroke:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N6{stroke:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-N7{stroke:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B1{stroke:#000536;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B2{stroke:#0F66B7;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B3{stroke:#4393DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B4{stroke:#87BFF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B5{stroke:#BCDDFB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-B6{stroke:#E5F3FF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AA2{stroke:#076F6F;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AA4{stroke:#77DEDE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AA5{stroke:#C3F8F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AB4{stroke:#C1A2F3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .stroke-AB5{stroke:#DACEFB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N1{background-color:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N2{background-color:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N3{background-color:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N4{background-color:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N5{background-color:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N6{background-color:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-N7{background-color:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B1{background-color:#000536;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B2{background-color:#0F66B7;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B3{background-color:#4393DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B4{background-color:#87BFF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B5{background-color:#BCDDFB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-B6{background-color:#E5F3FF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AA2{background-color:#076F6F;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AA4{background-color:#77DEDE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AA5{background-color:#C3F8F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AB4{background-color:#C1A2F3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .background-color-AB5{background-color:#DACEFB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N1{color:#0A0F25;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N2{color:#676C7E;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N3{color:#9499AB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N4{color:#CFD2DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N5{color:#DEE1EB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N6{color:#EEF1F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-N7{color:#FFFFFF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B1{color:#000536;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B2{color:#0F66B7;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B3{color:#4393DD;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B4{color:#87BFF3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B5{color:#BCDDFB;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-B6{color:#E5F3FF;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AA2{color:#076F6F;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AA4{color:#77DEDE;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AA5{color:#C3F8F8;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AB4{color:#C1A2F3;} .d2-75179d2cee85427d8db4afe4acc3ec26 .color-AB5{color:#DACEFB;}.appendix text.text{fill:#0A0F25}.md{--color-fg-default:#0A0F25;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#FFFFFF;--color-canvas-subtle:#EEF1F8;--color-border-default:#000536;--color-border-muted:#0F66B7;--color-neutral-muted:#EEF1F8;--color-accent-fg:#0F66B7;--color-accent-emphasis:#0F66B7;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-darker-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:lighten}.sketch-overlay-B2{fill:url(#streaks-dark-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:overlay}.sketch-overlay-B3{fill:url(#streaks-dark-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:overlay}.sketch-overlay-B4{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-B5{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-B6{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-AA2{fill:url(#streaks-dark-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:overlay}.sketch-overlay-AA4{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-AA5{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-AB5{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-N1{fill:url(#streaks-darker-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:lighten}.sketch-overlay-N2{fill:url(#streaks-dark-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-bright-d2-75179d2cee85427d8db4afe4acc3ec26);mix-blend-mode:darken}.light-code{display: block}.dark-code{display: none}} .d2-75179d2cee85427d8db4afe4acc3ec26 .md em, .d2-75179d2cee85427d8db4afe4acc3ec26 .md dfn { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-italic\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md b, .d2-75179d2cee85427d8db4afe4acc3ec26 .md strong { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-bold\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md kbd, .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre, .d2-75179d2cee85427d8db4afe4acc3ec26 .md samp { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-mono\"; font-size: 1em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md { tab-size: 4; } /* variables are provided in d2renderers/d2svg/d2svg.go */ .d2-75179d2cee85427d8db4afe4acc3ec26 .md { -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; margin: 0; background-color: transparent; /* we don't want to define the background color */ font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-regular\"; font-size: 16px; line-height: 1.5; word-wrap: break-word; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md details, .d2-75179d2cee85427d8db4afe4acc3ec26 .md figcaption, .d2-75179d2cee85427d8db4afe4acc3ec26 .md figure { display: block; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md summary { display: list-item; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [hidden] { display: none !important; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md a { background-color: transparent; color: var(--color-accent-fg); text-decoration: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md a:active, .d2-75179d2cee85427d8db4afe4acc3ec26 .md a:hover { outline-width: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md abbr[title] { border-bottom: none; text-decoration: underline dotted; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md dfn { font-style: italic; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h1 { margin: 0.67em 0; padding-bottom: 0.3em; font-size: 2em; border-bottom: 1px solid var(--color-border-muted); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md mark { background-color: var(--color-attention-subtle); color: var(--color-text-primary); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md small { font-size: 90%; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md sub, .d2-75179d2cee85427d8db4afe4acc3ec26 .md sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md sub { bottom: -0.25em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md sup { top: -0.5em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md img { border-style: none; max-width: 100%; box-sizing: content-box; background-color: var(--color-canvas-default); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md figure { margin: 1em 40px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md hr { box-sizing: content-box; overflow: hidden; background: transparent; border-bottom: 1px solid var(--color-border-muted); height: 0.25em; padding: 0; margin: 24px 0; background-color: var(--color-border-default); border: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md input { font: inherit; margin: 0; overflow: visible; font-family: inherit; font-size: inherit; line-height: inherit; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"button\"], .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"reset\"], .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"submit\"] { -webkit-appearance: button; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"button\"]::-moz-focus-inner, .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"reset\"]::-moz-focus-inner, .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"submit\"]::-moz-focus-inner { border-style: none; padding: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"button\"]:-moz-focusring, .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"reset\"]:-moz-focusring, .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"submit\"]:-moz-focusring { outline: 1px dotted ButtonText; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"checkbox\"], .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"radio\"] { box-sizing: border-box; padding: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"number\"]::-webkit-inner-spin-button, .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"number\"]::-webkit-outer-spin-button { height: auto; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"search\"] { -webkit-appearance: textfield; outline-offset: -2px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"search\"]::-webkit-search-cancel-button, .d2-75179d2cee85427d8db4afe4acc3ec26 .md [type=\"search\"]::-webkit-search-decoration { -webkit-appearance: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ::-webkit-input-placeholder { color: inherit; opacity: 0.54; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ::-webkit-file-upload-button { -webkit-appearance: button; font: inherit; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md a:hover { text-decoration: underline; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md hr::before { display: table; content: \"\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md hr::after { display: table; clear: both; content: \"\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md table { border-spacing: 0; border-collapse: collapse; display: block; width: max-content; max-width: 100%; overflow: auto; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md td, .d2-75179d2cee85427d8db4afe4acc3ec26 .md th { padding: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md details summary { cursor: pointer; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md details:not([open]) > *:not(summary) { display: none !important; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md kbd { display: inline-block; padding: 3px 5px; color: var(--color-fg-default); vertical-align: middle; background-color: var(--color-canvas-subtle); border: solid 1px var(--color-neutral-muted); border-bottom-color: var(--color-neutral-muted); border-radius: 6px; box-shadow: inset 0 -1px 0 var(--color-neutral-muted); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h1, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h2, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h3, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h4, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h5, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h6 { margin-top: 24px; margin-bottom: 16px; font-weight: 400; line-height: 1.25; font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-semibold\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h2 { padding-bottom: 0.3em; font-size: 1.5em; border-bottom: 1px solid var(--color-border-muted); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h3 { font-size: 1.25em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h4 { font-size: 1em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h5 { font-size: 0.875em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h6 { font-size: 0.85em; color: var(--color-fg-muted); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md p { margin-top: 0; margin-bottom: 10px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md blockquote { margin: 0; padding: 0 1em; color: var(--color-fg-muted); border-left: 0.25em solid var(--color-border-default); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol { margin-top: 0; margin-bottom: 0; padding-left: 2em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol ol, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul ol { list-style-type: lower-roman; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul ul ol, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul ol ol, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol ul ol, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol ol ol { list-style-type: lower-alpha; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md dd { margin-left: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre { margin-top: 0; margin-bottom: 0; word-wrap: normal; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ::placeholder { color: var(--color-fg-subtle); opacity: 1; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md input::-webkit-outer-spin-button, .d2-75179d2cee85427d8db4afe4acc3ec26 .md input::-webkit-inner-spin-button { margin: 0; -webkit-appearance: none; appearance: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md::before { display: table; content: \"\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md::after { display: table; clear: both; content: \"\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md > *:first-child { margin-top: 0 !important; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md > *:last-child { margin-bottom: 0 !important; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md a:not([href]) { color: inherit; text-decoration: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .absent { color: var(--color-danger-fg); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .anchor { float: left; padding-right: 4px; margin-left: -20px; line-height: 1; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .anchor:focus { outline: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md p, .d2-75179d2cee85427d8db4afe4acc3ec26 .md blockquote, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol, .d2-75179d2cee85427d8db4afe4acc3ec26 .md dl, .d2-75179d2cee85427d8db4afe4acc3ec26 .md table, .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre, .d2-75179d2cee85427d8db4afe4acc3ec26 .md details { margin-top: 0; margin-bottom: 16px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md blockquote > :first-child { margin-top: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md blockquote > :last-child { margin-bottom: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md sup > a::before { content: \"[\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md sup > a::after { content: \"]\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h1:hover .anchor, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h2:hover .anchor, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h3:hover .anchor, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h4:hover .anchor, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h5:hover .anchor, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h6:hover .anchor { text-decoration: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md h1 tt, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h1 code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h2 tt, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h2 code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h3 tt, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h3 code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h4 tt, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h4 code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h5 tt, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h5 code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h6 tt, .d2-75179d2cee85427d8db4afe4acc3ec26 .md h6 code { padding: 0 0.2em; font-size: inherit; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul.no-list, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol.no-list { padding: 0; list-style-type: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol[type=\"1\"] { list-style-type: decimal; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol[type=\"a\"] { list-style-type: lower-alpha; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol[type=\"i\"] { list-style-type: lower-roman; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md div > ol:not([type]) { list-style-type: decimal; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul ul, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ul ol, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol ol, .d2-75179d2cee85427d8db4afe4acc3ec26 .md ol ul { margin-top: 0; margin-bottom: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md li > p { margin-top: 16px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md li + li { margin-top: 0.25em; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md dl { padding: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md dl dt { padding: 0; margin-top: 16px; font-size: 1em; font-style: italic; font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-semibold\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md dl dd { padding: 0 16px; margin-bottom: 16px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md table th { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-semibold\"; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md table th, .d2-75179d2cee85427d8db4afe4acc3ec26 .md table td { padding: 6px 13px; border: 1px solid var(--color-border-default); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md table tr { background-color: var(--color-canvas-default); border-top: 1px solid var(--color-border-muted); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md table tr:nth-child(2n) { background-color: var(--color-canvas-subtle); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md table img { background-color: transparent; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md img[align=\"right\"] { padding-left: 20px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md img[align=\"left\"] { padding-right: 20px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.frame { display: block; overflow: hidden; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.frame > span { display: block; float: left; width: auto; padding: 7px; margin: 13px 0 0; overflow: hidden; border: 1px solid var(--color-border-default); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.frame span img { display: block; float: left; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.frame span span { display: block; padding: 5px 0 0; clear: both; color: var(--color-fg-default); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.align-center { display: block; overflow: hidden; clear: both; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.align-center > span { display: block; margin: 13px auto 0; overflow: hidden; text-align: center; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.align-center span img { margin: 0 auto; text-align: center; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.align-right { display: block; overflow: hidden; clear: both; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.align-right > span { display: block; margin: 13px 0 0; overflow: hidden; text-align: right; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.align-right span img { margin: 0; text-align: right; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.float-left { display: block; float: left; margin-right: 13px; overflow: hidden; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.float-left span { margin: 13px 0 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.float-right { display: block; float: right; margin-left: 13px; overflow: hidden; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md span.float-right > span { display: block; margin: 13px auto 0; overflow: hidden; text-align: right; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md tt { padding: 0.2em 0.4em; margin: 0; font-size: 85%; background-color: var(--color-neutral-muted); border-radius: 6px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md code br, .d2-75179d2cee85427d8db4afe4acc3ec26 .md tt br { display: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md del code { text-decoration: inherit; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre code { font-size: 100%; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre > code { padding: 0; margin: 0; word-break: normal; white-space: pre; background: transparent; border: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .highlight { margin-bottom: 16px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .highlight pre { margin-bottom: 0; word-break: normal; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .highlight pre, .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre { padding: 16px; overflow: auto; font-size: 85%; line-height: 1.45; background-color: var(--color-canvas-subtle); border-radius: 6px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre code, .d2-75179d2cee85427d8db4afe4acc3ec26 .md pre tt { display: inline; max-width: auto; padding: 0; margin: 0; overflow: visible; line-height: inherit; word-wrap: normal; background-color: transparent; border: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .csv-data td, .d2-75179d2cee85427d8db4afe4acc3ec26 .md .csv-data th { padding: 5px; overflow: hidden; font-size: 12px; line-height: 1; text-align: left; white-space: nowrap; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .csv-data .blob-num { padding: 10px 8px 9px; text-align: right; background: var(--color-canvas-default); border: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .csv-data tr { border-top: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .csv-data th { font-family: \"d2-75179d2cee85427d8db4afe4acc3ec26-font-semibold\"; background: var(--color-canvas-subtle); border-top: 0; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .footnotes { font-size: 12px; color: var(--color-fg-muted); border-top: 1px solid var(--color-border-default); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .footnotes ol { padding-left: 16px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .footnotes li { position: relative; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .footnotes li:target::before { position: absolute; top: -8px; right: -8px; bottom: -8px; left: -24px; pointer-events: none; content: \"\"; border: 2px solid var(--color-accent-emphasis); border-radius: 6px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .footnotes li:target { color: var(--color-fg-default); } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .task-list-item { list-style-type: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .task-list-item label { font-weight: 400; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .task-list-item.enabled label { cursor: pointer; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .task-list-item + .task-list-item { margin-top: 3px; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .task-list-item .handle { display: none; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .task-list-item-checkbox { margin: 0 0.2em 0.25em -1.6em; vertical-align: middle; } .d2-75179d2cee85427d8db4afe4acc3ec26 .md .contains-task-list:dir(rtl) .task-list-item-checkbox { margin: 0 -1.6em 0.25em 0.2em; } / (root) /srv Conditionally Optional: Data for the service provided by this Application. An Application MUST have at least: - one `/srv/www` file set; or - one `/lib/<module-name>` WASM package. /usr/lib OPTIONAL: Data overrides for the Application. /lib Conditionally Optional: WASM Component Module Library. An Application MUST have at least: - one `/srv/www` file set; or - one `/lib/<module-name>` WASM package.","title":"Application Package"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#hdf5-file","text":"metadata.json Defines the application. + Application Name + Version + Description ? Source Repo + License/s + Link to icon in http served files. ? Link to an OpenAPI Document in http served files. + Minimum Resource requirements ? Optimum Resource requirements ? Maximum Resource requirements ? Requested Permissions icon.svg Application icon.svg image file. author.cose Authors identity and Signature over the complete package. May be multiple signatures for multiple authors. publisher.cose OPTIONAL: Publisher identity and Signature over the complete package. May be multiple signatures for multiple publishers. /www OPTIONAL: Data served on HTTP automatically for the application. /share OPTIONAL: Data sharable by all Modules in the application. /<module-name-1> OPTIONAL: Override individual module contents at application level. /<module-name-1> WASM Components are individually packaged and signed before inclusion into an application. config.json OPTIONAL: Modules runtime config file. /share Override/Add Data files specific to this Module. /share OPTIONAL: Data files specific to this Module. metadata.json Defines the module. + Module Name + Version + Description ? Source Repo + License/s module.wasm Compiled WASM Component Module. config.schema.json OPTIONAL: Schema for the config.json file. config.json Conditionally Optional: Modules runtime config file. MUST Exist if `config.schema.json` exists. settings.schema.json OPTIONAL: Schema for the user option settings.json file. author.cose Authors signature over the wasm module. Conditionally Optional: Data for the service provided by this Application. An Application MUST have at least: - one `/srv/www` file set; or - one `/lib/<module-name>` WASM package. OPTIONAL: Data overrides for the Application. Conditionally Optional: WASM Component Module Library. An Application MUST have at least: - one `/srv/www` file set; or - one `/lib/<module-name>` WASM package. Defines the application. + Application Name + Version + Description ? Source Repo + License/s + Link to icon in http served files. ? Link to an OpenAPI Document in http served files. + Minimum Resource requirements ? Optimum Resource requirements ? Maximum Resource requirements ? Requested Permissions Application icon.svg image file. Authors identity and Signature over the complete package. May be multiple signatures for multiple authors. OPTIONAL: Publisher identity and Signature over the complete package. May be multiple signatures for multiple publishers. OPTIONAL: Data served on HTTP automatically for the application. OPTIONAL: Data sharable by all Modules in the application. OPTIONAL: Override individual module contents at application level. WASM Components are individually packaged and signed before inclusion into an application. OPTIONAL: Modules runtime config file. Override/Add Data files specific to this Module. OPTIONAL: Data files specific to this Module. Defines the module. + Module Name + Version + Description ? Source Repo + License/s Compiled WASM Component Module. OPTIONAL: Schema for the config.json file. Conditionally Optional: Modules runtime config file. MUST Exist if `config.schema.json` exists. OPTIONAL: Schema for the user option settings.json file. Authors signature over the wasm module.","title":"HDF5 File"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#application-root","text":"Each application package is an HDF5 file that stores all the static assets, data, and WASM modules. Each application package has associated metadata that is stored in the metadata.json file linked to the root path / .","title":"Application Root"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#application-metadata","text":"Every application includes Metadata which describes: the application itself; important information about the app; where it comes from; and what resources it needs to run. For detailed information see Application Metadata .","title":"Application Metadata"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#application-signatures","text":"Applications MUST be signed by their Author/s. They can also OPTIONALLY be signed by one or more publishers. These signatures enable hermes engine to determine if an application is trusted or not. Except for the party signing the certificate, they are otherwise identical. For detailed information see Hermes Application Signatures .","title":"Application Signatures"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#application-static-http-assets","text":"Static Assets consist of files that may be published only AS-IS via HTTP by the Application Modules. Application Static Assets are found in the /srv/www path. These Assets are OPTIONAL, however a valid Hermes application MUST consist of: at least one set of files at /srv/www ; or at least one WASM Component Module at /lib/<module-name> For detailed information see Packaging HTTP Served Files in a Hermes Application .","title":"Application Static HTTP Assets"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#application-data","text":"This data is completely optional. Applications can also include sharable static data. This data is not served automatically, but can be read by any WASM module within the application. Application Data is found in the /src/share path. For detailed information see Hermes Application Data .","title":"Application Data"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#application-modules","text":"Application Modules are found in the /lib path. Individual WebAssembly Component Modules are named and stored in a subdirectory with that name. For example: /lib/greeter is the path to the greeter module. Modules themselves are pre-packaged and signed and are included into a Hermes Application when it is packaged. Modules may also be sym-linked, for example the same module may be used but configured differently. In this case, it only needs to be included once, and then named links in /lib can reference it. For example if the greeter module can also function as a goodbye module, it could be linked as so: /lib/goodbye -> /lib/greeter This allows modules to be reutilized without wastefully re-including them. The /usr/lib directory allows the runtime contents of a module to be altered by the application. This allows the same code to be used but operate differently because of its configuration. For detailed information see Hermes WASM Component Module .","title":"Application Modules"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#additional-technical-resources","text":"","title":"Additional Technical Resources"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#hdf5","text":"HDF5","title":"HDF5"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#cbor","text":"CBOR Deterministic CBOR dcbor Rust crate. CDDL","title":"CBOR"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#wasi-and-wit","text":"WASI","title":"WASI And WIT"},{"location":"architecture/08_concepts/hermes_packaging_requirements/overview/#cose","text":"RFC 8152 RFC 9052 RFC 9053","title":"COSE"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/","text":"Packaging WebAssembly (WASM) modules in a Hermes Application \u00b6 Overview of a WASM Component Module \u00b6 WASM Component Modules consist of: Metadata which describes the module. The compiled WASM Code itself, which MUST target the Hermes WASM Component Model API. An Optional configuration JSON schema. An Optional default configuration file. An Optional settings JSON schema. And a required author's signature. .appendix-icon { filter: drop-shadow(0px 0px 32px rgba(31, 36, 58, 0.1)); } .d2-f7fa1ec4a0c049499c739019d413a5cb .text-mono { font-family: \"d2-f7fa1ec4a0c049499c739019d413a5cb-font-mono\"; } @font-face { font-family: d2-f7fa1ec4a0c049499c739019d413a5cb-font-mono; src: url(\"data:application/font-woff;base64,\"); } .d2-f7fa1ec4a0c049499c739019d413a5cb .text-mono-bold { font-family: \"d2-f7fa1ec4a0c049499c739019d413a5cb-font-mono-bold\"; } @font-face { font-family: d2-f7fa1ec4a0c049499c739019d413a5cb-font-mono-bold; src: url(\"data:application/font-woff;base64,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\"); } .shape { shape-rendering: geometricPrecision; stroke-linejoin: round; } .connection { stroke-linecap: round; stroke-linejoin: round; } .blend { mix-blend-mode: multiply; opacity: 0.5; } .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N1{fill:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N2{fill:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N3{fill:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N4{fill:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N5{fill:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N6{fill:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N7{fill:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B1{fill:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B2{fill:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B3{fill:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B4{fill:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B5{fill:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B6{fill:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AA2{fill:#4A6FF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AA4{fill:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AA5{fill:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AB4{fill:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AB5{fill:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N1{stroke:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N2{stroke:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N3{stroke:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N4{stroke:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N5{stroke:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N6{stroke:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N7{stroke:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B1{stroke:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B2{stroke:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B3{stroke:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B4{stroke:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B5{stroke:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B6{stroke:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AA2{stroke:#4A6FF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AA4{stroke:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AA5{stroke:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AB4{stroke:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AB5{stroke:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N1{background-color:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N2{background-color:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N3{background-color:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N4{background-color:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N5{background-color:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N6{background-color:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N7{background-color:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B1{background-color:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B2{background-color:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B3{background-color:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B4{background-color:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B5{background-color:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B6{background-color:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AA2{background-color:#4A6FF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AA4{background-color:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AA5{background-color:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AB4{background-color:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AB5{background-color:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N1{color:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N2{color:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N3{color:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N4{color:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N5{color:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N6{color:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N7{color:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B1{color:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B2{color:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B3{color:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B4{color:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B5{color:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B6{color:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AA2{color:#4A6FF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AA4{color:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AA5{color:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AB4{color:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AB5{color:#F7F8FE;}.appendix text.text{fill:#0A0F25}.md{--color-fg-default:#0A0F25;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#FFFFFF;--color-canvas-subtle:#EEF1F8;--color-border-default:#0D32B2;--color-border-muted:#0D32B2;--color-neutral-muted:#EEF1F8;--color-accent-fg:#0D32B2;--color-accent-emphasis:#0D32B2;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-darker-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:lighten}.sketch-overlay-B2{fill:url(#streaks-darker-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:lighten}.sketch-overlay-B3{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-B5{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-B6{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-AA2{fill:url(#streaks-dark-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:overlay}.sketch-overlay-AA4{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-AA5{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-AB5{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-darker-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:lighten}.sketch-overlay-N2{fill:url(#streaks-dark-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.light-code{display: block}.dark-code{display: none}@media screen and (prefers-color-scheme:dark){ .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N1{fill:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N2{fill:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N3{fill:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N4{fill:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N5{fill:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N6{fill:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N7{fill:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B1{fill:#000536;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B2{fill:#0F66B7;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B3{fill:#4393DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B4{fill:#87BFF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B5{fill:#BCDDFB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B6{fill:#E5F3FF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AA2{fill:#076F6F;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AA4{fill:#77DEDE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AA5{fill:#C3F8F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AB4{fill:#C1A2F3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AB5{fill:#DACEFB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N1{stroke:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N2{stroke:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N3{stroke:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N4{stroke:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N5{stroke:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N6{stroke:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N7{stroke:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B1{stroke:#000536;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B2{stroke:#0F66B7;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B3{stroke:#4393DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B4{stroke:#87BFF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B5{stroke:#BCDDFB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B6{stroke:#E5F3FF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AA2{stroke:#076F6F;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AA4{stroke:#77DEDE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AA5{stroke:#C3F8F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AB4{stroke:#C1A2F3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AB5{stroke:#DACEFB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N1{background-color:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N2{background-color:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N3{background-color:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N4{background-color:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N5{background-color:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N6{background-color:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N7{background-color:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B1{background-color:#000536;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B2{background-color:#0F66B7;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B3{background-color:#4393DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B4{background-color:#87BFF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B5{background-color:#BCDDFB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B6{background-color:#E5F3FF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AA2{background-color:#076F6F;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AA4{background-color:#77DEDE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AA5{background-color:#C3F8F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AB4{background-color:#C1A2F3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AB5{background-color:#DACEFB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N1{color:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N2{color:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N3{color:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N4{color:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N5{color:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N6{color:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N7{color:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B1{color:#000536;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B2{color:#0F66B7;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B3{color:#4393DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B4{color:#87BFF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B5{color:#BCDDFB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B6{color:#E5F3FF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AA2{color:#076F6F;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AA4{color:#77DEDE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AA5{color:#C3F8F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AB4{color:#C1A2F3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AB5{color:#DACEFB;}.appendix text.text{fill:#0A0F25}.md{--color-fg-default:#0A0F25;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#FFFFFF;--color-canvas-subtle:#EEF1F8;--color-border-default:#000536;--color-border-muted:#0F66B7;--color-neutral-muted:#EEF1F8;--color-accent-fg:#0F66B7;--color-accent-emphasis:#0F66B7;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-darker-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:lighten}.sketch-overlay-B2{fill:url(#streaks-dark-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:overlay}.sketch-overlay-B3{fill:url(#streaks-dark-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:overlay}.sketch-overlay-B4{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-B5{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-B6{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-AA2{fill:url(#streaks-dark-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:overlay}.sketch-overlay-AA4{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-AA5{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-AB5{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-N1{fill:url(#streaks-darker-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:lighten}.sketch-overlay-N2{fill:url(#streaks-dark-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.light-code{display: block}.dark-code{display: none}} WASM Component Module WASM Components are individually packaged and signed before inclusion into an application. /share OPTIONAL: Data files specific to this Module. metadata.json Defines the module. + Module Name + Version + Description ? Source Repo + License/s module.wasm Compiled WASM Component Module. config.schema.json OPTIONAL: Schema for the config.json file. config.json Conditionally Optional: Modules runtime config file. MUST Exist if `config.schema.json` exists. settings.schema.json OPTIONAL: Schema for the user option settings.json file. author.cose Authors signature over the wasm module. WASM Components are individually packaged and signed before inclusion into an application. OPTIONAL: Data files specific to this Module. Defines the module. + Module Name + Version + Description ? Source Repo + License/s Compiled WASM Component Module. OPTIONAL: Schema for the config.json file. Conditionally Optional: Modules runtime config file. MUST Exist if `config.schema.json` exists. OPTIONAL: Schema for the user option settings.json file. Authors signature over the wasm module. WASM Component Module Metadata \u00b6 Metadata for a module must conform to the Hermes Module metadata Schema. It holds information so that the Wasm module can be identified, including its source and license. The metadata is purely descriptive and does not contain any information related to the configuration of the module itself. WASM Component Module Metadata - Schema \u00b6 Schema: hermes_module_metadata.schema.json { \"$schema\" : \"http://json-schema.org/draft-07/schema#\" , \"$id\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_metadata.schema.json\" , \"title\" : \"WASM Module Metadata Schema\" , \"description\" : \"Metadata which defines a Hermes WASM Component Module and is carried inside the Hermes Module itself.\" , \"type\" : \"object\" , \"additionalProperties\" : false , \"properties\" : { \"$schema\" : { \"type\" : \"string\" , \"title\" : \"Hermes WASM Component Module Metadata Schema Reference\" , \"default\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_metadata.schema.json\" , \"pattern\" : \"^(https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/)|(.*/)hermes_module_metadata.schema.json$\" , \"description\" : \"Reference to the Module Metadata Schema.\\nShould be to https:// this will be validated.\\nLocal references are only to simplify development.\" }, \"name\" : { \"type\" : \"string\" , \"title\" : \"WASM module default name\" , \"description\" : \"Default Name of the WASM Component Module.\" }, \"version\" : { \"type\" : \"string\" , \"title\" : \"WASM module version\" , \"description\" : \"Version of the WASM module\" , \"pattern\" : \"^V[0-9]+\\\\.[0-9]+\\\\.[0-9]+( .*$)?\" }, \"description\" : { \"type\" : \"string\" , \"title\" : \"WASM module description\" , \"description\" : \"Short description of the WASM module\" }, \"src\" : { \"type\" : \"array\" , \"title\" : \"Links to the source of this WASM module.\" , \"description\" : \"Can be links to code repositories or the Authors website.\\nSpecifying any `src` is Optional, however if defined, then these URLs must be reachable when the WASM module is packaged.\" , \"items\" : { \"type\" : \"string\" , \"format\" : \"uri\" , \"pattern\" : \"^https://[^\\\\s/?#]+.[^\\\\s/?#]+(/[^\\\\s?#]*)?$\" }, \"uniqueItems\" : true , \"minItems\" : 1 }, \"copyright\" : { \"type\" : \"array\" , \"title\" : \"WASM Module Copyright\" , \"description\" : \"List of Copyright Notices/Claims over the WASM module.\\nIf no copyright is claimed then there should be an explicit statement about the WASM module being in the public domain.\" , \"items\" : { \"type\" : \"string\" }, \"uniqueItems\" : true , \"minItems\" : 1 }, \"license\" : { \"type\" : \"array\" , \"title\" : \"WASM Module License\" , \"description\" : \"List of Licenses/Claims over the WASM module.\\nMust declare at least `spdx` or `file`, `note` is Optional.\\nIf `file` is specified it must exist within the Package for the WASM module to be valid.\" , \"uniqueItems\" : true , \"minItems\" : 1 , \"items\" : { \"type\" : \"object\" , \"additionalProperties\" : false , \"minProperties\" : 1 , \"$comment\" : \"Validation Should be one or both of `spdx` and `file` and `note` is optional.\" , \"properties\" : { \"spdx\" : { \"type\" : \"string\" , \"title\" : \"License SPDX ID\" , \"description\" : \"SPDX ID of the License.\\nIn the case of proprietary or non SPDX licenses, do not specify a SPDX ID and just include a license file.\" }, \"file\" : { \"type\" : \"string\" , \"title\" : \"License File\" , \"description\" : \"Path to the License File inside the Package.\\nMust be a `.txt` file and it must exist at Package creation time.\\nFile MUST be text, displayable using monospaced fonts and no line exceeds 80 characters.\" , \"pattern\" : \"^/.*\\\\.txt$\" }, \"note\" : { \"type\" : \"string\" , \"title\" : \"License Note\" , \"description\" : \"Note about the License.\\nFor Example: Could limit the license to a particular aspect of the WASM module or part of the code.\" } } } }, \"build_date\" : { \"type\" : \"integer\" , \"title\" : \"WASM module Build Date\" , \"description\" : \"Unix Epoch Timestamp of when the WASM module was packaged or built.\\nThis field will be overwritten if present, by the hermes packaging system.\\nThe field is required, but this will be checked when the package is validated.\" , \"default\" : 0 }, \"developer\" : { \"type\" : \"object\" , \"title\" : \"WASM Module Developer\" , \"additionalProperties\" : true , \"properties\" : { \"name\" : { \"type\" : \"string\" , \"title\" : \"WASM Module Developer Name\" , \"description\" : \"Name of the Developer\" } }, \"required\" : [ \"name\" ] } }, \"required\" : [ \"$schema\" , \"name\" , \"version\" , \"description\" , \"copyright\" , \"license\" ] } WASM Component Module Metadata - Example \u00b6 Example: hermes_module_metadata.json { \"$schema\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_metadata.schema.json\" , \"name\" : \"counter\" , \"version\" : \"V2.7.3\" , \"description\" : \"An example Counter module\" , \"src\" : [ \"https://github.com/input-output-hk/hermes\" , \"https://github.com/input-output-hk/catalyst-voices\" ], \"copyright\" : [ \"Copyright \u24b8 2024, IOG Singapore.\" ], \"license\" : [ { \"spdx\" : \"Apache-2.0\" , \"file\" : \"/srv/data/apache2.txt\" , \"note\" : \"Both SPDX and File can be specified together.\\nThis allows the text of the License to be shown in any admin UI.\" }, { \"spdx\" : \"MIT\" , \"file\" : \"/srv/data/mit.txt\" }, { \"spdx\" : \"Apache-2.0\" , \"note\" : \"Just defines the license by the SPDX ID.\" }, { \"file\" : \"/srv/data/apache2.txt\" , \"note\" : \"Just defines the license by the file path.\" } ], \"developer\" : { \"name\" : \"IOG Singapore.\" , \"contact\" : \"Contact details.\" , \"payment\" : \"wallet address\" } } WASM Component Module Configuration \u00b6 Each WASM Component Module can be configured. The purpose of this is to allow the same WASM code to have different parameterized functionality. If one thinks of the Wasm Component Module as a kind of Class, the configuration allows a specific Instance of the class to be created. Copies of the same Module can have different config, which allows the creation of multiple Instances of the same class. The packaging process efficiently removes redundancy in the package and will link between modules that are identical. This configuration is defined by the WASM Component Module Author, and can be modified by the Application author. The user has no ability to alter the configuration. Configuration is controlled by two files. config.schema.json - This is a JSON Schema document which defines the structure expected of the configuration for the Module. config.json - The default configuration of the module. Both must be present if configuration is defined. It is valid for a WASM Component Module to not have any configuration, and so there would be no configuration files present in this case. Wasm Component Module Settings \u00b6 Settings are module configuration that are defined by the user of the application. This is how a user of the application can configure how the application should run. If there is user controllable configuration, then the WASM Component Module will contain a settings.schema.json file. This file defines the configuration options available to the user. The user MUST make a configuration for the application for each WASM module that requires it before the application can run. This is simplified because the schema can contain defaults which will be used if the user has made no selection. Therefore, if a WASM Module declares defaults for all options, the user need not make any changes to it. This file is optional, and is only included in the WASM Component Module if there is actual configuration that can be changed. Otherwise, it is not present. WASM Module read-only shareable data \u00b6 WASM Modules may need data sets to execute their functionality efficiently. Data which is strongly associated with a module is packaged with a module in its share directory. While this data is strongly associated with a module, it may be used by any module within the application. It is also possible for an Application to modify the shared data a WASM Module can see, without altering the signed Module itself. There is no restriction on the kinds or amount of shared data within a module. Nor is it required by a Module. WASM Component Module signatures \u00b6 Individual Modules have an Author. This allows us to compose applications by using pre-written WASM Component Modules as building blocks. But to do so, the Author of the Module must sign it. This allows us to validate that the Module is coming from a trusted source. Accordingly, similar to Applications themselves, individual WASM Component Modules needs to be signed by their author. The signature file is called author.cose and it is a signature across all the other files within the module. A module is invalid if the signature does not match, OR there are files present which are either unknown or not included in the signature. Packaging a WASM Component Module \u00b6 Similar to an Application, Hermes WASM Component Modules are packaged and signed by the Hermes application. Packaging a Module is controlled by a manifest file, which must conform to the Hermes WASM Component Module Manifest JSON schema. The WASM Component Module Packaging Process \u00b6 Create an unsigned WASM Component Module. Sign it as one or more authors. Creating the unsigned Application Package \u00b6 ./hermes module package <manifest.json> [ <optional output path> ] [ --name <module name override> ] manifest.json - Defines the location of all the src artifacts needed to build the package. This file must conform to the manifests JSON schema . An example manifest of this JSON schema is here . [<optional output path>] - By default the module will be created in the same directory where manifest placed. This option allows the path of the generated module to be set, it can be absolute or relative to the manifest directory. --name module name override - The name to give the module file, instead of taking it from the manifest file. Note: the extension .hmod will automatically be added to the module name to signify this is a Hermes WASM Component Module. Signing the WASM module package \u00b6 More detailed explanation about signing procedure could be found here . As the author of the WASM module package: ./hermes module sign <X.509 Private Cert> <module_name.hmod> This takes the X.509 Private Certificate presented, and signs or counter-signs the Application package. Note: A Hermes WASM Component Module is INVALID if it does not contain at least 1 Author Signature. Author signature payload \u00b6 WASM module package author signature payload according to the signing spec should follow this schema: Schema: hermes_module_cose_author_payload.schema.json { \"$schema\" : \"http://json-schema.org/draft-07/schema#\" , \"$id\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_cose_author_payload.schema.json\" , \"title\" : \"Hermes WASM Module Author COSE Payload Schema\" , \"description\" : \"Defines the COSE signing payload. A WASM module package specific information which should be cryptographically protected.\" , \"type\" : \"object\" , \"additionalProperties\" : false , \"properties\" : { \"metadata\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of metadata.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the metadata.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" }, \"component\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of module.wasm package file\" , \"description\" : \"A hex representation of the Blake2b hash of the module.wasm file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" }, \"config\" : { \"type\" : \"object\" , \"title\" : \"WASM Module Config Object.\" , \"description\" : \"Object representing the WASM Module Config File.\" , \"properties\" : { \"file\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of config.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the config.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" }, \"schema\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of config.schema.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the config.schema.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" } }, \"required\" : [ \"schema\" ] }, \"settings\" : { \"type\" : \"object\" , \"title\" : \"WASM Module Settings Object.\" , \"description\" : \"Object representing the WASM Module Settings.\" , \"properties\" : { \"schema\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of settings.schema.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the settings.schema.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" } }, \"required\" : [ \"schema\" ] }, \"share\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of the whole share package directory\" , \"description\" : \"A hex representation of the Blake2b hash of the whole share directory inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" } }, \"required\" : [ \"metadata\" , \"component\" ] } WASM module package author signature payload example: Example: hermes_module_cose_author_payload.json { \"metadata\" : \"e6d4ecf4e0df7688f8fb5d564fc6bcafffdfc46bb793631a9ed3bb6d888561df\" , \"component\" : \"0cfdb8d790b0a30fb8eb12d98c1791f35a279c0a5f8bf313cd582fc6b8cd69d5\" , \"config\" : { \"file\" : \"69e66dc097dbd3d3a333c699d05b2c7173d6d9cc7d6a7e35745339e282d70904\" , \"schema\" : \"0da53b44f7de08af0743779dfb9448fa32fe3584e9b940ae740a1bbc74741bba\" }, \"settings\" : { \"schema\" : \"9cd493f0cbdb907814b142e22e76fa8cf0e95bcd3117d4c3e7c4cbe4b885d932\" }, \"share\" : \"ed6ac923cfa79ab05cf2a41dc43493e0f74d8bd7596185be5bce74ffda85d9a5\" } Inspecting a Hermes Application \u00b6 ./hermes package inspect <app_package_name> This command will dump the logical contents of the WASM Component Module and if it is considered valid or not. It does not extract files from the module. If files need to be extracted or individually accessed outside of Hermes, any [HDF5 Viewer] can be used. As the module is compressed, part of the information that is displayed should be the total module size on-disk, and the true size of the uncompressed data it contains. The compressed/uncompressed statistic should be per file, and also for the total module. WASM Component Module Manifest - Schema \u00b6 Schema: hermes_module_manifest.schema.json { \"$schema\" : \"http://json-schema.org/draft-07/schema#\" , \"$id\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_manifest.schema.json\" , \"title\" : \"Hermes WASM Module Manifest Schema\" , \"description\" : \"Defines the src packages which are used to build a Hermes WASM Component Module.\" , \"type\" : \"object\" , \"additionalProperties\" : false , \"properties\" : { \"$schema\" : { \"type\" : \"string\" , \"title\" : \"WASM Module Package Manifest Schema Reference\" , \"default\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_manifest.schema.json\" , \"pattern\" : \"^(https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/)|(.*/)hermes_module_manifest.schema.json$\" , \"description\" : \"Reference to the WASM Manifest Schema.\\nShould be to https:// this will be validated.\\nLocal references are only to simplify development.\" }, \"name\" : { \"type\" : \"string\" , \"title\" : \"Hermes WASM Module Package name.\" , \"description\" : \"Name of the Hermes WASM module package with which it will be created.\" , \"default\" : \"module\" }, \"metadata\" : { \"type\" : \"string\" , \"title\" : \"Hermes WASM Module Metadata File\" , \"description\" : \"Link to the Hermes WASM module metadata JSON file.\\nWill be renamed to `metadata.json` inside the module.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" , \"default\" : \"metadata.json\" }, \"component\" : { \"type\" : \"string\" , \"title\" : \"WASM Component File\" , \"description\" : \"Link to the Hermes Module WASM Component file.\\nThis is a fully compiled and linked WASM Object file.\\nWill be renamed to `module.wasm` inside the module.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" , \"default\" : \"module.wasm\" }, \"config\" : { \"type\" : \"object\" , \"title\" : \"WASM Module Config Object.\" , \"description\" : \"Object representing the WASM Module Config File.\" , \"properties\" : { \"file\" : { \"type\" : \"string\" , \"title\" : \"WASM Module Config File Location\" , \"description\" : \"Path to the WASM Component Library Module Config File.\\nThis will be renamed to `config.json` inside the module.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" }, \"schema\" : { \"type\" : \"string\" , \"title\" : \"WASM Module Config Schema Location\" , \"description\" : \"Path to the WASM Component Module Config Schema File.\\nThis will be renamed to `config.schema.json` inside the module.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" } }, \"required\" : [ \"schema\" ] }, \"settings\" : { \"type\" : \"object\" , \"title\" : \"WASM Module Settings Object.\" , \"description\" : \"Object representing the WASM Module Settings.\" , \"properties\" : { \"schema\" : { \"type\" : \"string\" , \"title\" : \"WASM Module Settings Schema Location\" , \"description\" : \"Path to the WASM Component Module Settings Schema File.\\nThis will be renamed to `settings.schema.json` inside the module.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" } }, \"required\" : [ \"schema\" ] }, \"share\" : { \"type\" : \"string\" , \"title\" : \"WASM Module Share Dataset.\" , \"description\" : \"Path to the WASM Component Library Module Shareable Data.\\nWill set the default data defined for the module itself.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" } }, \"required\" : [ \"$schema\" ] } WASM Component Module Manifest - Example \u00b6 Example: hermes_module_manifest.json { \"$schema\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_manifest.schema.json\" , \"name\" : \"module\" , \"metadata\" : \"file://modules/counter/counter_metadata.json\" , \"component\" : \"file://counter.wasm\" , \"config\" : { \"file\" : \"file://modules/counter/config.json\" , \"schema\" : \"file://modules/counter/config.schema.json\" }, \"settings\" : { \"schema\" : \"file://modules/counter/settings.schema.json\" }, \"share\" : \"file://modules/counter/share\" } WASM Component Module Manifest - Minimal Example \u00b6 Example: MINIMAL hermes_module_minimal_manifest.json { \"$schema\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_manifest.schema.json\" }","title":"Packaging WebAssembly (WASM) modules in a Hermes Application"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#packaging-webassembly-wasm-modules-in-a-hermes-application","text":"","title":"Packaging WebAssembly (WASM) modules in a Hermes Application"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#overview-of-a-wasm-component-module","text":"WASM Component Modules consist of: Metadata which describes the module. The compiled WASM Code itself, which MUST target the Hermes WASM Component Model API. An Optional configuration JSON schema. An Optional default configuration file. An Optional settings JSON schema. And a required author's signature. .appendix-icon { filter: drop-shadow(0px 0px 32px rgba(31, 36, 58, 0.1)); } .d2-f7fa1ec4a0c049499c739019d413a5cb .text-mono { font-family: \"d2-f7fa1ec4a0c049499c739019d413a5cb-font-mono\"; } @font-face { font-family: d2-f7fa1ec4a0c049499c739019d413a5cb-font-mono; src: url(\"data:application/font-woff;base64,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\"); } .d2-f7fa1ec4a0c049499c739019d413a5cb .text-mono-bold { font-family: \"d2-f7fa1ec4a0c049499c739019d413a5cb-font-mono-bold\"; } @font-face { font-family: d2-f7fa1ec4a0c049499c739019d413a5cb-font-mono-bold; src: url(\"data:application/font-woff;base64,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\"); } .shape { shape-rendering: geometricPrecision; stroke-linejoin: round; } .connection { stroke-linecap: round; stroke-linejoin: round; } .blend { mix-blend-mode: multiply; opacity: 0.5; } .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N1{fill:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N2{fill:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N3{fill:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N4{fill:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N5{fill:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N6{fill:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N7{fill:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B1{fill:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B2{fill:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B3{fill:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B4{fill:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B5{fill:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B6{fill:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AA2{fill:#4A6FF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AA4{fill:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AA5{fill:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AB4{fill:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AB5{fill:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N1{stroke:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N2{stroke:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N3{stroke:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N4{stroke:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N5{stroke:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N6{stroke:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N7{stroke:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B1{stroke:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B2{stroke:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B3{stroke:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B4{stroke:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B5{stroke:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B6{stroke:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AA2{stroke:#4A6FF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AA4{stroke:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AA5{stroke:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AB4{stroke:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AB5{stroke:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N1{background-color:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N2{background-color:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N3{background-color:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N4{background-color:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N5{background-color:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N6{background-color:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N7{background-color:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B1{background-color:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B2{background-color:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B3{background-color:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B4{background-color:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B5{background-color:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B6{background-color:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AA2{background-color:#4A6FF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AA4{background-color:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AA5{background-color:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AB4{background-color:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AB5{background-color:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N1{color:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N2{color:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N3{color:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N4{color:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N5{color:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N6{color:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N7{color:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B1{color:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B2{color:#0D32B2;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B3{color:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B4{color:#E3E9FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B5{color:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B6{color:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AA2{color:#4A6FF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AA4{color:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AA5{color:#F7F8FE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AB4{color:#EDF0FD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AB5{color:#F7F8FE;}.appendix text.text{fill:#0A0F25}.md{--color-fg-default:#0A0F25;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#FFFFFF;--color-canvas-subtle:#EEF1F8;--color-border-default:#0D32B2;--color-border-muted:#0D32B2;--color-neutral-muted:#EEF1F8;--color-accent-fg:#0D32B2;--color-accent-emphasis:#0D32B2;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-darker-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:lighten}.sketch-overlay-B2{fill:url(#streaks-darker-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:lighten}.sketch-overlay-B3{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-B5{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-B6{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-AA2{fill:url(#streaks-dark-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:overlay}.sketch-overlay-AA4{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-AA5{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-AB5{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-darker-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:lighten}.sketch-overlay-N2{fill:url(#streaks-dark-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.light-code{display: block}.dark-code{display: none}@media screen and (prefers-color-scheme:dark){ .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N1{fill:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N2{fill:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N3{fill:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N4{fill:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N5{fill:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N6{fill:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-N7{fill:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B1{fill:#000536;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B2{fill:#0F66B7;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B3{fill:#4393DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B4{fill:#87BFF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B5{fill:#BCDDFB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-B6{fill:#E5F3FF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AA2{fill:#076F6F;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AA4{fill:#77DEDE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AA5{fill:#C3F8F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AB4{fill:#C1A2F3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .fill-AB5{fill:#DACEFB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N1{stroke:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N2{stroke:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N3{stroke:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N4{stroke:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N5{stroke:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N6{stroke:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-N7{stroke:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B1{stroke:#000536;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B2{stroke:#0F66B7;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B3{stroke:#4393DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B4{stroke:#87BFF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B5{stroke:#BCDDFB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-B6{stroke:#E5F3FF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AA2{stroke:#076F6F;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AA4{stroke:#77DEDE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AA5{stroke:#C3F8F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AB4{stroke:#C1A2F3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .stroke-AB5{stroke:#DACEFB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N1{background-color:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N2{background-color:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N3{background-color:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N4{background-color:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N5{background-color:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N6{background-color:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-N7{background-color:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B1{background-color:#000536;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B2{background-color:#0F66B7;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B3{background-color:#4393DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B4{background-color:#87BFF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B5{background-color:#BCDDFB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-B6{background-color:#E5F3FF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AA2{background-color:#076F6F;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AA4{background-color:#77DEDE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AA5{background-color:#C3F8F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AB4{background-color:#C1A2F3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .background-color-AB5{background-color:#DACEFB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N1{color:#0A0F25;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N2{color:#676C7E;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N3{color:#9499AB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N4{color:#CFD2DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N5{color:#DEE1EB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N6{color:#EEF1F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-N7{color:#FFFFFF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B1{color:#000536;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B2{color:#0F66B7;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B3{color:#4393DD;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B4{color:#87BFF3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B5{color:#BCDDFB;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-B6{color:#E5F3FF;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AA2{color:#076F6F;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AA4{color:#77DEDE;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AA5{color:#C3F8F8;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AB4{color:#C1A2F3;} .d2-f7fa1ec4a0c049499c739019d413a5cb .color-AB5{color:#DACEFB;}.appendix text.text{fill:#0A0F25}.md{--color-fg-default:#0A0F25;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#FFFFFF;--color-canvas-subtle:#EEF1F8;--color-border-default:#000536;--color-border-muted:#0F66B7;--color-neutral-muted:#EEF1F8;--color-accent-fg:#0F66B7;--color-accent-emphasis:#0F66B7;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-darker-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:lighten}.sketch-overlay-B2{fill:url(#streaks-dark-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:overlay}.sketch-overlay-B3{fill:url(#streaks-dark-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:overlay}.sketch-overlay-B4{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-B5{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-B6{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-AA2{fill:url(#streaks-dark-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:overlay}.sketch-overlay-AA4{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-AA5{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-AB5{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-N1{fill:url(#streaks-darker-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:lighten}.sketch-overlay-N2{fill:url(#streaks-dark-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-bright-d2-f7fa1ec4a0c049499c739019d413a5cb);mix-blend-mode:darken}.light-code{display: block}.dark-code{display: none}} WASM Component Module WASM Components are individually packaged and signed before inclusion into an application. /share OPTIONAL: Data files specific to this Module. metadata.json Defines the module. + Module Name + Version + Description ? Source Repo + License/s module.wasm Compiled WASM Component Module. config.schema.json OPTIONAL: Schema for the config.json file. config.json Conditionally Optional: Modules runtime config file. MUST Exist if `config.schema.json` exists. settings.schema.json OPTIONAL: Schema for the user option settings.json file. author.cose Authors signature over the wasm module. WASM Components are individually packaged and signed before inclusion into an application. OPTIONAL: Data files specific to this Module. Defines the module. + Module Name + Version + Description ? Source Repo + License/s Compiled WASM Component Module. OPTIONAL: Schema for the config.json file. Conditionally Optional: Modules runtime config file. MUST Exist if `config.schema.json` exists. OPTIONAL: Schema for the user option settings.json file. Authors signature over the wasm module.","title":"Overview of a WASM Component Module"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#wasm-component-module-metadata","text":"Metadata for a module must conform to the Hermes Module metadata Schema. It holds information so that the Wasm module can be identified, including its source and license. The metadata is purely descriptive and does not contain any information related to the configuration of the module itself.","title":"WASM Component Module Metadata"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#wasm-component-module-metadata-schema","text":"Schema: hermes_module_metadata.schema.json { \"$schema\" : \"http://json-schema.org/draft-07/schema#\" , \"$id\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_metadata.schema.json\" , \"title\" : \"WASM Module Metadata Schema\" , \"description\" : \"Metadata which defines a Hermes WASM Component Module and is carried inside the Hermes Module itself.\" , \"type\" : \"object\" , \"additionalProperties\" : false , \"properties\" : { \"$schema\" : { \"type\" : \"string\" , \"title\" : \"Hermes WASM Component Module Metadata Schema Reference\" , \"default\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_metadata.schema.json\" , \"pattern\" : \"^(https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/)|(.*/)hermes_module_metadata.schema.json$\" , \"description\" : \"Reference to the Module Metadata Schema.\\nShould be to https:// this will be validated.\\nLocal references are only to simplify development.\" }, \"name\" : { \"type\" : \"string\" , \"title\" : \"WASM module default name\" , \"description\" : \"Default Name of the WASM Component Module.\" }, \"version\" : { \"type\" : \"string\" , \"title\" : \"WASM module version\" , \"description\" : \"Version of the WASM module\" , \"pattern\" : \"^V[0-9]+\\\\.[0-9]+\\\\.[0-9]+( .*$)?\" }, \"description\" : { \"type\" : \"string\" , \"title\" : \"WASM module description\" , \"description\" : \"Short description of the WASM module\" }, \"src\" : { \"type\" : \"array\" , \"title\" : \"Links to the source of this WASM module.\" , \"description\" : \"Can be links to code repositories or the Authors website.\\nSpecifying any `src` is Optional, however if defined, then these URLs must be reachable when the WASM module is packaged.\" , \"items\" : { \"type\" : \"string\" , \"format\" : \"uri\" , \"pattern\" : \"^https://[^\\\\s/?#]+.[^\\\\s/?#]+(/[^\\\\s?#]*)?$\" }, \"uniqueItems\" : true , \"minItems\" : 1 }, \"copyright\" : { \"type\" : \"array\" , \"title\" : \"WASM Module Copyright\" , \"description\" : \"List of Copyright Notices/Claims over the WASM module.\\nIf no copyright is claimed then there should be an explicit statement about the WASM module being in the public domain.\" , \"items\" : { \"type\" : \"string\" }, \"uniqueItems\" : true , \"minItems\" : 1 }, \"license\" : { \"type\" : \"array\" , \"title\" : \"WASM Module License\" , \"description\" : \"List of Licenses/Claims over the WASM module.\\nMust declare at least `spdx` or `file`, `note` is Optional.\\nIf `file` is specified it must exist within the Package for the WASM module to be valid.\" , \"uniqueItems\" : true , \"minItems\" : 1 , \"items\" : { \"type\" : \"object\" , \"additionalProperties\" : false , \"minProperties\" : 1 , \"$comment\" : \"Validation Should be one or both of `spdx` and `file` and `note` is optional.\" , \"properties\" : { \"spdx\" : { \"type\" : \"string\" , \"title\" : \"License SPDX ID\" , \"description\" : \"SPDX ID of the License.\\nIn the case of proprietary or non SPDX licenses, do not specify a SPDX ID and just include a license file.\" }, \"file\" : { \"type\" : \"string\" , \"title\" : \"License File\" , \"description\" : \"Path to the License File inside the Package.\\nMust be a `.txt` file and it must exist at Package creation time.\\nFile MUST be text, displayable using monospaced fonts and no line exceeds 80 characters.\" , \"pattern\" : \"^/.*\\\\.txt$\" }, \"note\" : { \"type\" : \"string\" , \"title\" : \"License Note\" , \"description\" : \"Note about the License.\\nFor Example: Could limit the license to a particular aspect of the WASM module or part of the code.\" } } } }, \"build_date\" : { \"type\" : \"integer\" , \"title\" : \"WASM module Build Date\" , \"description\" : \"Unix Epoch Timestamp of when the WASM module was packaged or built.\\nThis field will be overwritten if present, by the hermes packaging system.\\nThe field is required, but this will be checked when the package is validated.\" , \"default\" : 0 }, \"developer\" : { \"type\" : \"object\" , \"title\" : \"WASM Module Developer\" , \"additionalProperties\" : true , \"properties\" : { \"name\" : { \"type\" : \"string\" , \"title\" : \"WASM Module Developer Name\" , \"description\" : \"Name of the Developer\" } }, \"required\" : [ \"name\" ] } }, \"required\" : [ \"$schema\" , \"name\" , \"version\" , \"description\" , \"copyright\" , \"license\" ] }","title":"WASM Component Module Metadata - Schema"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#wasm-component-module-metadata-example","text":"Example: hermes_module_metadata.json { \"$schema\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_metadata.schema.json\" , \"name\" : \"counter\" , \"version\" : \"V2.7.3\" , \"description\" : \"An example Counter module\" , \"src\" : [ \"https://github.com/input-output-hk/hermes\" , \"https://github.com/input-output-hk/catalyst-voices\" ], \"copyright\" : [ \"Copyright \u24b8 2024, IOG Singapore.\" ], \"license\" : [ { \"spdx\" : \"Apache-2.0\" , \"file\" : \"/srv/data/apache2.txt\" , \"note\" : \"Both SPDX and File can be specified together.\\nThis allows the text of the License to be shown in any admin UI.\" }, { \"spdx\" : \"MIT\" , \"file\" : \"/srv/data/mit.txt\" }, { \"spdx\" : \"Apache-2.0\" , \"note\" : \"Just defines the license by the SPDX ID.\" }, { \"file\" : \"/srv/data/apache2.txt\" , \"note\" : \"Just defines the license by the file path.\" } ], \"developer\" : { \"name\" : \"IOG Singapore.\" , \"contact\" : \"Contact details.\" , \"payment\" : \"wallet address\" } }","title":"WASM Component Module Metadata - Example"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#wasm-component-module-configuration","text":"Each WASM Component Module can be configured. The purpose of this is to allow the same WASM code to have different parameterized functionality. If one thinks of the Wasm Component Module as a kind of Class, the configuration allows a specific Instance of the class to be created. Copies of the same Module can have different config, which allows the creation of multiple Instances of the same class. The packaging process efficiently removes redundancy in the package and will link between modules that are identical. This configuration is defined by the WASM Component Module Author, and can be modified by the Application author. The user has no ability to alter the configuration. Configuration is controlled by two files. config.schema.json - This is a JSON Schema document which defines the structure expected of the configuration for the Module. config.json - The default configuration of the module. Both must be present if configuration is defined. It is valid for a WASM Component Module to not have any configuration, and so there would be no configuration files present in this case.","title":"WASM Component Module Configuration"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#wasm-component-module-settings","text":"Settings are module configuration that are defined by the user of the application. This is how a user of the application can configure how the application should run. If there is user controllable configuration, then the WASM Component Module will contain a settings.schema.json file. This file defines the configuration options available to the user. The user MUST make a configuration for the application for each WASM module that requires it before the application can run. This is simplified because the schema can contain defaults which will be used if the user has made no selection. Therefore, if a WASM Module declares defaults for all options, the user need not make any changes to it. This file is optional, and is only included in the WASM Component Module if there is actual configuration that can be changed. Otherwise, it is not present.","title":"Wasm Component Module Settings"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#wasm-module-read-only-shareable-data","text":"WASM Modules may need data sets to execute their functionality efficiently. Data which is strongly associated with a module is packaged with a module in its share directory. While this data is strongly associated with a module, it may be used by any module within the application. It is also possible for an Application to modify the shared data a WASM Module can see, without altering the signed Module itself. There is no restriction on the kinds or amount of shared data within a module. Nor is it required by a Module.","title":"WASM Module read-only shareable data"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#wasm-component-module-signatures","text":"Individual Modules have an Author. This allows us to compose applications by using pre-written WASM Component Modules as building blocks. But to do so, the Author of the Module must sign it. This allows us to validate that the Module is coming from a trusted source. Accordingly, similar to Applications themselves, individual WASM Component Modules needs to be signed by their author. The signature file is called author.cose and it is a signature across all the other files within the module. A module is invalid if the signature does not match, OR there are files present which are either unknown or not included in the signature.","title":"WASM Component Module signatures"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#packaging-a-wasm-component-module","text":"Similar to an Application, Hermes WASM Component Modules are packaged and signed by the Hermes application. Packaging a Module is controlled by a manifest file, which must conform to the Hermes WASM Component Module Manifest JSON schema.","title":"Packaging a WASM Component Module"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#the-wasm-component-module-packaging-process","text":"Create an unsigned WASM Component Module. Sign it as one or more authors.","title":"The WASM Component Module Packaging Process"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#creating-the-unsigned-application-package","text":"./hermes module package <manifest.json> [ <optional output path> ] [ --name <module name override> ] manifest.json - Defines the location of all the src artifacts needed to build the package. This file must conform to the manifests JSON schema . An example manifest of this JSON schema is here . [<optional output path>] - By default the module will be created in the same directory where manifest placed. This option allows the path of the generated module to be set, it can be absolute or relative to the manifest directory. --name module name override - The name to give the module file, instead of taking it from the manifest file. Note: the extension .hmod will automatically be added to the module name to signify this is a Hermes WASM Component Module.","title":"Creating the unsigned Application Package"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#signing-the-wasm-module-package","text":"More detailed explanation about signing procedure could be found here . As the author of the WASM module package: ./hermes module sign <X.509 Private Cert> <module_name.hmod> This takes the X.509 Private Certificate presented, and signs or counter-signs the Application package. Note: A Hermes WASM Component Module is INVALID if it does not contain at least 1 Author Signature.","title":"Signing the WASM module package"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#author-signature-payload","text":"WASM module package author signature payload according to the signing spec should follow this schema: Schema: hermes_module_cose_author_payload.schema.json { \"$schema\" : \"http://json-schema.org/draft-07/schema#\" , \"$id\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_cose_author_payload.schema.json\" , \"title\" : \"Hermes WASM Module Author COSE Payload Schema\" , \"description\" : \"Defines the COSE signing payload. A WASM module package specific information which should be cryptographically protected.\" , \"type\" : \"object\" , \"additionalProperties\" : false , \"properties\" : { \"metadata\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of metadata.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the metadata.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" }, \"component\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of module.wasm package file\" , \"description\" : \"A hex representation of the Blake2b hash of the module.wasm file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" }, \"config\" : { \"type\" : \"object\" , \"title\" : \"WASM Module Config Object.\" , \"description\" : \"Object representing the WASM Module Config File.\" , \"properties\" : { \"file\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of config.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the config.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" }, \"schema\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of config.schema.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the config.schema.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" } }, \"required\" : [ \"schema\" ] }, \"settings\" : { \"type\" : \"object\" , \"title\" : \"WASM Module Settings Object.\" , \"description\" : \"Object representing the WASM Module Settings.\" , \"properties\" : { \"schema\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of settings.schema.json package file\" , \"description\" : \"A hex representation of the Blake2b hash of the settings.schema.json file inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" } }, \"required\" : [ \"schema\" ] }, \"share\" : { \"type\" : \"string\" , \"title\" : \"Blake2b hash hex of the whole share package directory\" , \"description\" : \"A hex representation of the Blake2b hash of the whole share directory inside the package.\" , \"pattern\" : \"^[0-9a-f]{64}$\" } }, \"required\" : [ \"metadata\" , \"component\" ] } WASM module package author signature payload example: Example: hermes_module_cose_author_payload.json { \"metadata\" : \"e6d4ecf4e0df7688f8fb5d564fc6bcafffdfc46bb793631a9ed3bb6d888561df\" , \"component\" : \"0cfdb8d790b0a30fb8eb12d98c1791f35a279c0a5f8bf313cd582fc6b8cd69d5\" , \"config\" : { \"file\" : \"69e66dc097dbd3d3a333c699d05b2c7173d6d9cc7d6a7e35745339e282d70904\" , \"schema\" : \"0da53b44f7de08af0743779dfb9448fa32fe3584e9b940ae740a1bbc74741bba\" }, \"settings\" : { \"schema\" : \"9cd493f0cbdb907814b142e22e76fa8cf0e95bcd3117d4c3e7c4cbe4b885d932\" }, \"share\" : \"ed6ac923cfa79ab05cf2a41dc43493e0f74d8bd7596185be5bce74ffda85d9a5\" }","title":"Author signature payload"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#inspecting-a-hermes-application","text":"./hermes package inspect <app_package_name> This command will dump the logical contents of the WASM Component Module and if it is considered valid or not. It does not extract files from the module. If files need to be extracted or individually accessed outside of Hermes, any [HDF5 Viewer] can be used. As the module is compressed, part of the information that is displayed should be the total module size on-disk, and the true size of the uncompressed data it contains. The compressed/uncompressed statistic should be per file, and also for the total module.","title":"Inspecting a Hermes Application"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#wasm-component-module-manifest-schema","text":"Schema: hermes_module_manifest.schema.json { \"$schema\" : \"http://json-schema.org/draft-07/schema#\" , \"$id\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_manifest.schema.json\" , \"title\" : \"Hermes WASM Module Manifest Schema\" , \"description\" : \"Defines the src packages which are used to build a Hermes WASM Component Module.\" , \"type\" : \"object\" , \"additionalProperties\" : false , \"properties\" : { \"$schema\" : { \"type\" : \"string\" , \"title\" : \"WASM Module Package Manifest Schema Reference\" , \"default\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_manifest.schema.json\" , \"pattern\" : \"^(https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/)|(.*/)hermes_module_manifest.schema.json$\" , \"description\" : \"Reference to the WASM Manifest Schema.\\nShould be to https:// this will be validated.\\nLocal references are only to simplify development.\" }, \"name\" : { \"type\" : \"string\" , \"title\" : \"Hermes WASM Module Package name.\" , \"description\" : \"Name of the Hermes WASM module package with which it will be created.\" , \"default\" : \"module\" }, \"metadata\" : { \"type\" : \"string\" , \"title\" : \"Hermes WASM Module Metadata File\" , \"description\" : \"Link to the Hermes WASM module metadata JSON file.\\nWill be renamed to `metadata.json` inside the module.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" , \"default\" : \"metadata.json\" }, \"component\" : { \"type\" : \"string\" , \"title\" : \"WASM Component File\" , \"description\" : \"Link to the Hermes Module WASM Component file.\\nThis is a fully compiled and linked WASM Object file.\\nWill be renamed to `module.wasm` inside the module.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" , \"default\" : \"module.wasm\" }, \"config\" : { \"type\" : \"object\" , \"title\" : \"WASM Module Config Object.\" , \"description\" : \"Object representing the WASM Module Config File.\" , \"properties\" : { \"file\" : { \"type\" : \"string\" , \"title\" : \"WASM Module Config File Location\" , \"description\" : \"Path to the WASM Component Library Module Config File.\\nThis will be renamed to `config.json` inside the module.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" }, \"schema\" : { \"type\" : \"string\" , \"title\" : \"WASM Module Config Schema Location\" , \"description\" : \"Path to the WASM Component Module Config Schema File.\\nThis will be renamed to `config.schema.json` inside the module.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" } }, \"required\" : [ \"schema\" ] }, \"settings\" : { \"type\" : \"object\" , \"title\" : \"WASM Module Settings Object.\" , \"description\" : \"Object representing the WASM Module Settings.\" , \"properties\" : { \"schema\" : { \"type\" : \"string\" , \"title\" : \"WASM Module Settings Schema Location\" , \"description\" : \"Path to the WASM Component Module Settings Schema File.\\nThis will be renamed to `settings.schema.json` inside the module.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" } }, \"required\" : [ \"schema\" ] }, \"share\" : { \"type\" : \"string\" , \"title\" : \"WASM Module Share Dataset.\" , \"description\" : \"Path to the WASM Component Library Module Shareable Data.\\nWill set the default data defined for the module itself.\\nIt Could be a valid URI or regular local path on your system.\" , \"pattern\" : \"^([a-z0-9-_\\\\.+]+://)?(/?([a-zA-Z0-9-_\\\\.]+))+$\" } }, \"required\" : [ \"$schema\" ] }","title":"WASM Component Module Manifest - Schema"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#wasm-component-module-manifest-example","text":"Example: hermes_module_manifest.json { \"$schema\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_manifest.schema.json\" , \"name\" : \"module\" , \"metadata\" : \"file://modules/counter/counter_metadata.json\" , \"component\" : \"file://counter.wasm\" , \"config\" : { \"file\" : \"file://modules/counter/config.json\" , \"schema\" : \"file://modules/counter/config.schema.json\" }, \"settings\" : { \"schema\" : \"file://modules/counter/settings.schema.json\" }, \"share\" : \"file://modules/counter/share\" }","title":"WASM Component Module Manifest - Example"},{"location":"architecture/08_concepts/hermes_packaging_requirements/wasm_modules/#wasm-component-module-manifest-minimal-example","text":"Example: MINIMAL hermes_module_minimal_manifest.json { \"$schema\" : \"https://raw.githubusercontent.com/input-output-hk/hermes/main/hermes/schemas/hermes_module_manifest.schema.json\" }","title":"WASM Component Module Manifest - Minimal Example"},{"location":"architecture/08_concepts/hermes_runtime_engine/h_app_exec/","text":"Hermes application execution \u00b6 Basically, the Hermes application is a set of Hermes event handler functions and nothing more. The source code could be split into different WASM components, but they will have the same state specified for this Hermes application . Application's state initializes during the application initializing process and mainly based on the configuration of the Hermes runtime extensions config files. For each event handling execution, the application's state remains consistent and immutable . It means that before any event processing, it is made a copy of the initial application's state, this copy used during the execution and removed after it. So the overall application state remains the same.","title":"Hermes application execution"},{"location":"architecture/08_concepts/hermes_runtime_engine/h_app_exec/#hermes-application-execution","text":"Basically, the Hermes application is a set of Hermes event handler functions and nothing more. The source code could be split into different WASM components, but they will have the same state specified for this Hermes application . Application's state initializes during the application initializing process and mainly based on the configuration of the Hermes runtime extensions config files. For each event handling execution, the application's state remains consistent and immutable . It means that before any event processing, it is made a copy of the initial application's state, this copy used during the execution and removed after it. So the overall application state remains the same.","title":"Hermes application execution"},{"location":"architecture/08_concepts/hermes_runtime_engine/h_app_struct/","text":"Hermes application structure \u00b6 Hermes application it is a collection of compiled WASM components , HRE config files and some metadata bundled in HDF5 file format. Each WASM component it is the event handlers implementation of export functions from the WIT file, specified by the Hermes runtime extension . For more details, see Hermes Application Package","title":"Hermes application structure"},{"location":"architecture/08_concepts/hermes_runtime_engine/h_app_struct/#hermes-application-structure","text":"Hermes application it is a collection of compiled WASM components , HRE config files and some metadata bundled in HDF5 file format. Each WASM component it is the event handlers implementation of export functions from the WIT file, specified by the Hermes runtime extension . For more details, see Hermes Application Package","title":"Hermes application structure"},{"location":"architecture/08_concepts/hermes_runtime_engine/h_events_queue/","text":"Hermes events queue implementation \u00b6 Hermes events queue it is a simple multi-producers single-consumer (MPSC) queue data structure. It receives Hermes events from different Hermes runtime extensions and responsible to transport them in corresponding order to the Hermes application .","title":"Hermes events queue implementation"},{"location":"architecture/08_concepts/hermes_runtime_engine/h_events_queue/#hermes-events-queue-implementation","text":"Hermes events queue it is a simple multi-producers single-consumer (MPSC) queue data structure. It receives Hermes events from different Hermes runtime extensions and responsible to transport them in corresponding order to the Hermes application .","title":"Hermes events queue implementation"},{"location":"architecture/08_concepts/hermes_runtime_engine/hre_init_setup/","text":"HRE initial setup \u00b6 To properly setup a Hermes runtime extension (HRE) module a specific configuration file should be provided by the Hermes application . This configuration file is loaded during the HRE initialization process and provides a necessary data to start a specific HRE for a specific Hermes application . Each HRE defines a JSON schema of the desired configuration for it. For example for some kind of networking HRE module a json schema could look like: { \"host\" : { \"type\" : \"string\" }, \"port\" : { \"type\" : \"integer\" }, \"timeout\" : { \"type\" : \"integer\" , \"minimum\" : 0 }, \"maxConnections\" : { \"type\" : \"integer\" , \"minimum\" : 1 }, }","title":"HRE initial setup"},{"location":"architecture/08_concepts/hermes_runtime_engine/hre_init_setup/#hre-initial-setup","text":"To properly setup a Hermes runtime extension (HRE) module a specific configuration file should be provided by the Hermes application . This configuration file is loaded during the HRE initialization process and provides a necessary data to start a specific HRE for a specific Hermes application . Each HRE defines a JSON schema of the desired configuration for it. For example for some kind of networking HRE module a json schema could look like: { \"host\" : { \"type\" : \"string\" }, \"port\" : { \"type\" : \"integer\" }, \"timeout\" : { \"type\" : \"integer\" , \"minimum\" : 0 }, \"maxConnections\" : { \"type\" : \"integer\" , \"minimum\" : 1 }, }","title":"HRE initial setup"},{"location":"architecture/08_concepts/hermes_runtime_engine/hre_state/","text":"HRE state management \u00b6 Hermes Runtime Extension (HRE) may possess internal mutable states. These states must be global across the entire Hermes application , ensuring shared and consistent access among all active Hermes applications .","title":"HRE state management"},{"location":"architecture/08_concepts/hermes_runtime_engine/hre_state/#hre-state-management","text":"Hermes Runtime Extension (HRE) may possess internal mutable states. These states must be global across the entire Hermes application , ensuring shared and consistent access among all active Hermes applications .","title":"HRE state management"},{"location":"architecture/08_concepts/hermes_runtime_engine/hre_structure/","text":"HRE structure \u00b6 Hermes Runtime Extension ( HRE ) - stands as logically separate module (like a library) of the Hermes engine and provides an additional functionality to the Hermes runtime, therefore to Hermes application . WIT files represent a source of truth of the Hermes events and HRE api definitions for a specific HRE , and describe a standardized communication interface between Hermes application and Hermes engine's runtime itself. Each HRE implementation take place inside hermes/bin/srs/runtime_extensions directory, for both Hermes related and WASI specific. Example WIT files for the hermes-cron \u00b6 world.wit \u00b6 package hermes:cron; world all { import api; export event; } event.wit \u00b6 /// # Cron API /// /// Event triggered on CRON schedule. /// /// ## Event Scheduling /// /// **Guarantee**: Cron events with the same tag will be delivered and executed in the order /// they occur. /// /// **Guarantee**: Later cron events with the same tag will not begin processing until the /// previous cron event with that tag has been fully processed by all processors of the event. /// /// **Warning**: Events with different tags can arrive out of sequence with respect to each other. /// Sequence is only guaranteed by the tag. /// CRON API Interface - Export ONLY interface event { use api.{cron-event-tag, cron-tagged}; /// Triggered when a cron event fires. /// /// This event is only ever generated for the application that added /// the cron job. /// /// The module must export this interface to use it. /// /// ## Parameters /// /// - `event` : The tagged cron event that was triggered. /// - `last` : This cron event will not retrigger. /// /// Returns: /// - `true` - retrigger. (Ignored if the cron event is `final`). /// - `false` - stop the cron. on-cron: func(event: cron-tagged, last: bool) -> bool; } world cron-event { export event; } api.wit \u00b6 /// # Cron API /// /// Allow time based scheduling of events. /// /// ## Permissions /// /// This API is ALWAYS available. // cspell: words crontabs mkcron retrigger retriggering /// CRON API Interface - Imports ONLY interface api { /// Get the `instant` type from the `wasi:clocks` module. use wasi:clocks/monotonic-clock@0.2.6.{instant}; /// A Tag used to mark a delivered cron event. type cron-event-tag = string; /// A cron schedule in crontab format. type cron-sched = string; /// A tagged crontab entry /// It is valid for multiple crontab entries at the same time to have different tags. /// It is valid for crontab entries at different times to have the same tag. /// BUT there can only ever be 1 crontab entry at a specified time with a specified tag. /// ie, `when` + `tag` is uniquely identifying of every crontab entry. /// See: [crontab.5 man page](https://www.man7.org/linux/man-pages/man5/crontab.5.html) for details on cron schedule format. record cron-tagged { /// The crontab entry in standard cron format. /// The Time is ALWAYS relative to UTC and does not account for local time. /// If Localtime adjustment is required it must be handled by the module. when: cron-sched, /// The tag associated with the crontab entry. tag: cron-event-tag } /// A discreet time entry used to help convert numeric times into crontab entries. variant cron-component { // Maps to `*` in a cron schedule (ie, match all) all, // Match an absolute time/date at(u8), // Match an inclusive list of time/date values. range(tuple<u8,u8>), } /// A list of cron time components type cron-time = list<cron-component>; /// # Schedule Recurrent CRON event /// /// Cron events will be delivered to the `on-cron` event handler. /// /// ## Parameters /// /// - `entry`: The crontab entry to add. /// - `when`: When the event triggers. Standard crontab format. /// - `tag`: A tag which will accompany the triggered event. /// - `retrigger`: /// - `true`: The event will re-trigger every time the crontab entry matches until cancelled. /// - `false`: The event will automatically cancel after it is generated once. /// /// ## Returns /// /// - `true`: Crontab added successfully. (Or the crontab event already exists) /// - `false`: Crontab failed to be added. /// /// ## Note: /// /// If the crontab entry already exists, the retrigger flag can be changed by calling /// this function. This could be useful where a retriggering crontab event is desired /// to be stopped, but ONLY after it has triggered once more. /// add: func(entry: cron-tagged, retrigger: bool) -> bool; /// # Schedule A Single cron event after a fixed delay. /// /// Allows for easy timed wait events to be delivered without /// requiring datetime calculations or formatting cron entries. /// /// ## Parameters /// /// - `duration`: How many nanoseconds to delay. The delay will be AT LEAST this long. /// - `tag`: A tag which will accompany the triggered event. /// /// ## Returns /// /// - `true`: Crontab added successfully. /// - `false`: Crontab failed to be added. /// /// ## Note: /// /// This is a convenience function which will automatically calculate the crontab /// entry needed to trigger the event after the requested `duration`. /// It is added as a non-retriggering event. /// Listing the crontabs after this call will list the delay in addition to all other /// crontab entries. /// delay: func(duration: instant, tag: cron-event-tag) -> bool; /// # List currently active cron schedule. /// /// Allows for management of scheduled cron events. /// /// ## Parameters /// /// - `tag`: Optional, the tag to limit the list to. If `none` then all crons listed. /// /// ## Returns /// /// - A list of tuples containing the scheduled crontabs and their tags, along with the current retrigger flag. /// The list is sorted from most crontab that will trigger soonest to latest. /// Crontabs are only listed once, in the case where a crontab may be scheduled /// may times before a later one. /// - `0` - `cron-tagged` - The Tagged crontab event. /// - `1` - `bool` - The state of the retrigger flag. /// ls: func(tag: option<cron-event-tag>) -> list<tuple<cron-tagged, bool>>; /// # Remove the requested crontab. /// /// Allows for management of scheduled cron events. /// /// ## Parameters /// /// - `when`: The crontab entry to add. Standard crontab format. /// - `tag`: A tag which will accompany the triggered event. /// /// ## Returns /// /// - `true`: The requested crontab was deleted and will not trigger. /// - `false`: The requested crontab does not exist. /// rm: func(entry: cron-tagged) -> bool; /// # Make a crontab entry from individual time values. /// /// Crates the properly formatted cron entry /// from numeric cron time components. /// Convenience function to make building cron strings simpler when they are /// calculated from data. /// /// ## Parameters /// /// - `dow` - DayOfWeek (0-7, 0 or 7 = Sunday) /// - `month` - Month of the year (1-12, 1 = January) /// - `day` - Day in the month (1-31) /// - `hour` - Hour in the day (0-23) /// - `minute` - Minute in the hour (0-59) /// /// ## Returns /// /// - A matching `cron-sched` ready for use in the cron functions above. /// /// ## Note: /// No checking is done to determine if the requested date is valid. /// If a particular component is out of its allowable range it will be silently /// clamped within the allowable range of each parameter. /// Redundant entries will be removed. /// - For example specifying a `month` as `3` and `2-4` will /// remove the individual month and only produce the range. mkcron: func(dow: cron-time, month: cron-time, day: cron-time, hour: cron-time, minute: cron-time ) -> cron-sched; } /// World just for the Hermes 'cron' API and Event. world cron-api { import api; } Hermes events \u00b6 on-cron: func(event: cron-tagged, last: bool) -> bool; HRE api \u00b6 add: func(entry: cron-tagged, retrigger: bool) -> bool; delay: func(duration: instant, tag: cron-event-tag) -> bool; ls: func(tag: option<cron-event-tag>) -> list<tuple<cron-tagged, bool>>; mkcron: func(dow: cron-time, month: cron-time, day: cron-time, hour: cron-time, minute: cron-time ) -> cron-sched; rm: func(entry: cron-tagged) -> bool; Host implementation structure \u00b6 The Hermes host runtime is implemented using the wasmtime . It automatically generates code based on the WIT files: use wasmtime :: component :: bindgen ; bindgen ! ({ world : \"hermes\" , path : \"path/to/the/wit/files/dir\" , }); Internally, it generates a diverse set of traits, structs, functions, and more derived from the WIT files. This process results in a type-safe interface for interacting with WASM modules and implementing host functionalities. All host implementations specific to a particular HRE are defined within the corresponding host.rs files. Example ../hermes/cron/host.rs \u00b6 use crate ::{ runtime_extensions ::{ bindings ::{ hermes :: cron :: api ::{ CronEventTag , CronTagged , Host }, wasi :: clocks :: monotonic_clock :: Instant , }, }, state :: HermesState , }; impl Host for HermesState { fn add ( & mut self , entry : CronTagged , retrigger : bool ) -> wasmtime :: Result < bool > { .. . } fn rm ( & mut self , entry : CronTagged ) -> wasmtime :: Result < bool > { .. . } .. . } All Hermes events implementations specific to a particular HRE are defined within the corresponding event.rs files. Example ../hermes/cron/event.rs \u00b6 /// On cron event struct OnCronEvent { /// The tagged cron event that was triggered. tag : CronTagged , /// This cron event will not retrigger. last : bool , } impl HermesEventPayload for OnCronEvent { fn event_name ( & self ) -> & str { \"on-cron\" } fn execute ( & self , module : & mut crate :: wasm :: module :: ModuleInstance ) -> anyhow :: Result < () > { module . instance . call_hermes_cron_event_on_cron ( & mut module . store , & self . tag , self . last , ) ? ; Ok (()) } } NOTE that these Hermes event host definitions are not an implementation of the Hermes event itself. It is the method that allows the hermes runtime to execute Hermes event and pass corresponding data for the Hermes event handler, implemented by the Hermes application , inside Hermes engine runtime.","title":"HRE structure"},{"location":"architecture/08_concepts/hermes_runtime_engine/hre_structure/#hre-structure","text":"Hermes Runtime Extension ( HRE ) - stands as logically separate module (like a library) of the Hermes engine and provides an additional functionality to the Hermes runtime, therefore to Hermes application . WIT files represent a source of truth of the Hermes events and HRE api definitions for a specific HRE , and describe a standardized communication interface between Hermes application and Hermes engine's runtime itself. Each HRE implementation take place inside hermes/bin/srs/runtime_extensions directory, for both Hermes related and WASI specific.","title":"HRE structure"},{"location":"architecture/08_concepts/hermes_runtime_engine/hre_structure/#example-wit-files-for-the-hermes-cron","text":"","title":"Example WIT files for the hermes-cron"},{"location":"architecture/08_concepts/hermes_runtime_engine/hre_structure/#worldwit","text":"package hermes:cron; world all { import api; export event; }","title":"world.wit"},{"location":"architecture/08_concepts/hermes_runtime_engine/hre_structure/#eventwit","text":"/// # Cron API /// /// Event triggered on CRON schedule. /// /// ## Event Scheduling /// /// **Guarantee**: Cron events with the same tag will be delivered and executed in the order /// they occur. /// /// **Guarantee**: Later cron events with the same tag will not begin processing until the /// previous cron event with that tag has been fully processed by all processors of the event. /// /// **Warning**: Events with different tags can arrive out of sequence with respect to each other. /// Sequence is only guaranteed by the tag. /// CRON API Interface - Export ONLY interface event { use api.{cron-event-tag, cron-tagged}; /// Triggered when a cron event fires. /// /// This event is only ever generated for the application that added /// the cron job. /// /// The module must export this interface to use it. /// /// ## Parameters /// /// - `event` : The tagged cron event that was triggered. /// - `last` : This cron event will not retrigger. /// /// Returns: /// - `true` - retrigger. (Ignored if the cron event is `final`). /// - `false` - stop the cron. on-cron: func(event: cron-tagged, last: bool) -> bool; } world cron-event { export event; }","title":"event.wit"},{"location":"architecture/08_concepts/hermes_runtime_engine/hre_structure/#apiwit","text":"/// # Cron API /// /// Allow time based scheduling of events. /// /// ## Permissions /// /// This API is ALWAYS available. // cspell: words crontabs mkcron retrigger retriggering /// CRON API Interface - Imports ONLY interface api { /// Get the `instant` type from the `wasi:clocks` module. use wasi:clocks/monotonic-clock@0.2.6.{instant}; /// A Tag used to mark a delivered cron event. type cron-event-tag = string; /// A cron schedule in crontab format. type cron-sched = string; /// A tagged crontab entry /// It is valid for multiple crontab entries at the same time to have different tags. /// It is valid for crontab entries at different times to have the same tag. /// BUT there can only ever be 1 crontab entry at a specified time with a specified tag. /// ie, `when` + `tag` is uniquely identifying of every crontab entry. /// See: [crontab.5 man page](https://www.man7.org/linux/man-pages/man5/crontab.5.html) for details on cron schedule format. record cron-tagged { /// The crontab entry in standard cron format. /// The Time is ALWAYS relative to UTC and does not account for local time. /// If Localtime adjustment is required it must be handled by the module. when: cron-sched, /// The tag associated with the crontab entry. tag: cron-event-tag } /// A discreet time entry used to help convert numeric times into crontab entries. variant cron-component { // Maps to `*` in a cron schedule (ie, match all) all, // Match an absolute time/date at(u8), // Match an inclusive list of time/date values. range(tuple<u8,u8>), } /// A list of cron time components type cron-time = list<cron-component>; /// # Schedule Recurrent CRON event /// /// Cron events will be delivered to the `on-cron` event handler. /// /// ## Parameters /// /// - `entry`: The crontab entry to add. /// - `when`: When the event triggers. Standard crontab format. /// - `tag`: A tag which will accompany the triggered event. /// - `retrigger`: /// - `true`: The event will re-trigger every time the crontab entry matches until cancelled. /// - `false`: The event will automatically cancel after it is generated once. /// /// ## Returns /// /// - `true`: Crontab added successfully. (Or the crontab event already exists) /// - `false`: Crontab failed to be added. /// /// ## Note: /// /// If the crontab entry already exists, the retrigger flag can be changed by calling /// this function. This could be useful where a retriggering crontab event is desired /// to be stopped, but ONLY after it has triggered once more. /// add: func(entry: cron-tagged, retrigger: bool) -> bool; /// # Schedule A Single cron event after a fixed delay. /// /// Allows for easy timed wait events to be delivered without /// requiring datetime calculations or formatting cron entries. /// /// ## Parameters /// /// - `duration`: How many nanoseconds to delay. The delay will be AT LEAST this long. /// - `tag`: A tag which will accompany the triggered event. /// /// ## Returns /// /// - `true`: Crontab added successfully. /// - `false`: Crontab failed to be added. /// /// ## Note: /// /// This is a convenience function which will automatically calculate the crontab /// entry needed to trigger the event after the requested `duration`. /// It is added as a non-retriggering event. /// Listing the crontabs after this call will list the delay in addition to all other /// crontab entries. /// delay: func(duration: instant, tag: cron-event-tag) -> bool; /// # List currently active cron schedule. /// /// Allows for management of scheduled cron events. /// /// ## Parameters /// /// - `tag`: Optional, the tag to limit the list to. If `none` then all crons listed. /// /// ## Returns /// /// - A list of tuples containing the scheduled crontabs and their tags, along with the current retrigger flag. /// The list is sorted from most crontab that will trigger soonest to latest. /// Crontabs are only listed once, in the case where a crontab may be scheduled /// may times before a later one. /// - `0` - `cron-tagged` - The Tagged crontab event. /// - `1` - `bool` - The state of the retrigger flag. /// ls: func(tag: option<cron-event-tag>) -> list<tuple<cron-tagged, bool>>; /// # Remove the requested crontab. /// /// Allows for management of scheduled cron events. /// /// ## Parameters /// /// - `when`: The crontab entry to add. Standard crontab format. /// - `tag`: A tag which will accompany the triggered event. /// /// ## Returns /// /// - `true`: The requested crontab was deleted and will not trigger. /// - `false`: The requested crontab does not exist. /// rm: func(entry: cron-tagged) -> bool; /// # Make a crontab entry from individual time values. /// /// Crates the properly formatted cron entry /// from numeric cron time components. /// Convenience function to make building cron strings simpler when they are /// calculated from data. /// /// ## Parameters /// /// - `dow` - DayOfWeek (0-7, 0 or 7 = Sunday) /// - `month` - Month of the year (1-12, 1 = January) /// - `day` - Day in the month (1-31) /// - `hour` - Hour in the day (0-23) /// - `minute` - Minute in the hour (0-59) /// /// ## Returns /// /// - A matching `cron-sched` ready for use in the cron functions above. /// /// ## Note: /// No checking is done to determine if the requested date is valid. /// If a particular component is out of its allowable range it will be silently /// clamped within the allowable range of each parameter. /// Redundant entries will be removed. /// - For example specifying a `month` as `3` and `2-4` will /// remove the individual month and only produce the range. mkcron: func(dow: cron-time, month: cron-time, day: cron-time, hour: cron-time, minute: cron-time ) -> cron-sched; } /// World just for the Hermes 'cron' API and Event. world cron-api { import api; }","title":"api.wit"},{"location":"architecture/08_concepts/hermes_runtime_engine/hre_structure/#hermes-events","text":"on-cron: func(event: cron-tagged, last: bool) -> bool;","title":"Hermes events"},{"location":"architecture/08_concepts/hermes_runtime_engine/hre_structure/#hre-api","text":"add: func(entry: cron-tagged, retrigger: bool) -> bool; delay: func(duration: instant, tag: cron-event-tag) -> bool; ls: func(tag: option<cron-event-tag>) -> list<tuple<cron-tagged, bool>>; mkcron: func(dow: cron-time, month: cron-time, day: cron-time, hour: cron-time, minute: cron-time ) -> cron-sched; rm: func(entry: cron-tagged) -> bool;","title":"HRE api"},{"location":"architecture/08_concepts/hermes_runtime_engine/hre_structure/#host-implementation-structure","text":"The Hermes host runtime is implemented using the wasmtime . It automatically generates code based on the WIT files: use wasmtime :: component :: bindgen ; bindgen ! ({ world : \"hermes\" , path : \"path/to/the/wit/files/dir\" , }); Internally, it generates a diverse set of traits, structs, functions, and more derived from the WIT files. This process results in a type-safe interface for interacting with WASM modules and implementing host functionalities. All host implementations specific to a particular HRE are defined within the corresponding host.rs files.","title":"Host implementation structure"},{"location":"architecture/08_concepts/hermes_runtime_engine/hre_structure/#example-hermescronhostrs","text":"use crate ::{ runtime_extensions ::{ bindings ::{ hermes :: cron :: api ::{ CronEventTag , CronTagged , Host }, wasi :: clocks :: monotonic_clock :: Instant , }, }, state :: HermesState , }; impl Host for HermesState { fn add ( & mut self , entry : CronTagged , retrigger : bool ) -> wasmtime :: Result < bool > { .. . } fn rm ( & mut self , entry : CronTagged ) -> wasmtime :: Result < bool > { .. . } .. . } All Hermes events implementations specific to a particular HRE are defined within the corresponding event.rs files.","title":"Example ../hermes/cron/host.rs"},{"location":"architecture/08_concepts/hermes_runtime_engine/hre_structure/#example-hermescroneventrs","text":"/// On cron event struct OnCronEvent { /// The tagged cron event that was triggered. tag : CronTagged , /// This cron event will not retrigger. last : bool , } impl HermesEventPayload for OnCronEvent { fn event_name ( & self ) -> & str { \"on-cron\" } fn execute ( & self , module : & mut crate :: wasm :: module :: ModuleInstance ) -> anyhow :: Result < () > { module . instance . call_hermes_cron_event_on_cron ( & mut module . store , & self . tag , self . last , ) ? ; Ok (()) } } NOTE that these Hermes event host definitions are not an implementation of the Hermes event itself. It is the method that allows the hermes runtime to execute Hermes event and pass corresponding data for the Hermes event handler, implemented by the Hermes application , inside Hermes engine runtime.","title":"Example ../hermes/cron/event.rs"},{"location":"architecture/08_concepts/hermes_runtime_engine/wasm_parallel/","text":"WASM execution parallelization \u00b6 Looking for potential optimization, an obvious solution to parallelize Hermes event's processing. One problem with this approach is the possibility of the queue order being disrupted. Desired properties: Any event source can ensure dependent events are fully processed before sending new events. Unrelated events are not blocked by another events sources dependencies We can have multiple WASM components running concurrently, 1 per CPU core. We keep the WASM execution as busy as possible. We do not block WASM execution because of dependencies. A general solution that can be used by any event source. Event sources do not need dependencies where their events do not require earlier complete execution. Generalized Dependency Tracking \u00b6 One of the potential solution","title":"WASM execution parallelization"},{"location":"architecture/08_concepts/hermes_runtime_engine/wasm_parallel/#wasm-execution-parallelization","text":"Looking for potential optimization, an obvious solution to parallelize Hermes event's processing. One problem with this approach is the possibility of the queue order being disrupted. Desired properties: Any event source can ensure dependent events are fully processed before sending new events. Unrelated events are not blocked by another events sources dependencies We can have multiple WASM components running concurrently, 1 per CPU core. We keep the WASM execution as busy as possible. We do not block WASM execution because of dependencies. A general solution that can be used by any event source. Event sources do not need dependencies where their events do not require earlier complete execution.","title":"WASM execution parallelization"},{"location":"architecture/08_concepts/hermes_runtime_engine/wasm_parallel/#generalized-dependency-tracking","text":"One of the potential solution","title":"Generalized Dependency Tracking"},{"location":"architecture/08_concepts/hermes_signing_procedure/","text":"Hermes Signing Procedure \u00b6 In various parts of the Hermes system, it is necessary to authenticate and cryptographically prove ownership or authorship. In this section, a detailed explanation of the generalized signing approach is described. This approach can be applied for different purposes, such as signing application packages, WASM module packages, and more.","title":"Hermes Signing Procedure"},{"location":"architecture/08_concepts/hermes_signing_procedure/#hermes-signing-procedure","text":"In various parts of the Hermes system, it is necessary to authenticate and cryptographically prove ownership or authorship. In this section, a detailed explanation of the generalized signing approach is described. This approach can be applied for different purposes, such as signing application packages, WASM module packages, and more.","title":"Hermes Signing Procedure"},{"location":"architecture/08_concepts/hermes_signing_procedure/certificate_and_keys/","text":"Certificate and Keys \u00b6 Hermes utilizes the x.509 standard as the foundation for signing and verification procedures. Users can either have their key pair certified by a Certificate Authority (CA) or they can generate a self-signed certificate. The signing procedure itself does not differentiate between the two. By default, Hermes does not enforce any strict rules for certificates and will only issue a warning to the user. This allows for flexibility in the certificate management process. Signing Algorithm \u00b6 The cryptography algorithm used for signing in Hermes is Ed25519 , which is an EdDSA signature scheme that utilizes SHA-512 (SHA-2) and Curve25519 . Ed25519 provides strong security and is widely supported. Keys and Certificate Format \u00b6 Private/Public keys or certificates should be stored in the PEM format. This format is defined in RFC 7468 and is widely recognized and supported. It is the preferred format for storing and distributing keys and certificates. Private key example: -----BEGIN PRIVATE KEY----- MC4CAQAwBQYDK2VwBCIEIP1iI3LF7h89yY6QZmhDp4Y5FmTQ4oasbz2lEiaqqTzV -----END PRIVATE KEY----- Public key example: -----BEGIN PUBLIC KEY----- MCowBQYDK2VwAyEAtFuCleJwHS28jUCT+ulLl5c1+MXhehhDz2SimOhmWaI= -----END PUBLIC KEY----- Certificate example: -----BEGIN CERTIFICATE----- MIIByzCCAX2gAwIBAgIUXSsFYOzs6TCwKZ4ASbby0XbUuI8wBQYDK2VwMFsxCzAJ BgNVBAYTAnVhMQowCAYDVQQIDAFhMQowCAYDVQQHDAFhMQowCAYDVQQKDAFhMQow CAYDVQQLDAFhMQowCAYDVQQDDAFhMRAwDgYJKoZIhvcNAQkBFgFhMB4XDTI0MDYx MDExMDEzMloXDTI0MDkxODExMDEzMlowWzELMAkGA1UEBhMCdWExCjAIBgNVBAgM AWExCjAIBgNVBAcMAWExCjAIBgNVBAoMAWExCjAIBgNVBAsMAWExCjAIBgNVBAMM AWExEDAOBgkqhkiG9w0BCQEWAWEwKjAFBgMrZXADIQC0W4KV4nAdLbyNQJP66UuX lzX4xeF6GEPPZKKY6GZZoqNTMFEwHQYDVR0OBBYEFGAwFd05R9zFSYqT3C9xvFgI zwKhMB8GA1UdIwQYMBaAFGAwFd05R9zFSYqT3C9xvFgIzwKhMA8GA1UdEwEB/wQF MAMBAf8wBQYDK2VwA0EAqGmRv75DXvjtLrvmuc5KCAuE4jJ2AHCcImWzOYj+m4pT n6SS3ECqDuMa5Pz3NKue2fsvNucerJgbn6lKlRJ1BQ== -----END CERTIFICATE----- Certificate and keys generation \u00b6 For key generation and certificate signing we'll use OpenSSl command-line tools. To generate private and public keys run the following: openssl genpkey -algorithm = ED25519 -out = private.pem -outpubkey = public.pem After that a self-signed certificate could be generated by: openssl req -new -x509 -key = private.pem -out = cert.pem -config = x509_cert.config Where x509_cert.config could look like this [req] prompt = no days = 365 distinguished_name = req_distinguished_name [req_distinguished_name] countryName = AB stateOrProvinceName = CD localityName = EFG_HIJ organizationName = MyOrg organizationalUnitName = MyOrgUnit commonName = mycommname.com emailAddress = emailaddress@myemail.com To double check the content of the certificate and certificate details run: openssl x509 -text -in = cert.pem","title":"Certificate and keys"},{"location":"architecture/08_concepts/hermes_signing_procedure/certificate_and_keys/#certificate-and-keys","text":"Hermes utilizes the x.509 standard as the foundation for signing and verification procedures. Users can either have their key pair certified by a Certificate Authority (CA) or they can generate a self-signed certificate. The signing procedure itself does not differentiate between the two. By default, Hermes does not enforce any strict rules for certificates and will only issue a warning to the user. This allows for flexibility in the certificate management process.","title":"Certificate and Keys"},{"location":"architecture/08_concepts/hermes_signing_procedure/certificate_and_keys/#signing-algorithm","text":"The cryptography algorithm used for signing in Hermes is Ed25519 , which is an EdDSA signature scheme that utilizes SHA-512 (SHA-2) and Curve25519 . Ed25519 provides strong security and is widely supported.","title":"Signing Algorithm"},{"location":"architecture/08_concepts/hermes_signing_procedure/certificate_and_keys/#keys-and-certificate-format","text":"Private/Public keys or certificates should be stored in the PEM format. This format is defined in RFC 7468 and is widely recognized and supported. It is the preferred format for storing and distributing keys and certificates. Private key example: -----BEGIN PRIVATE KEY----- MC4CAQAwBQYDK2VwBCIEIP1iI3LF7h89yY6QZmhDp4Y5FmTQ4oasbz2lEiaqqTzV -----END PRIVATE KEY----- Public key example: -----BEGIN PUBLIC KEY----- MCowBQYDK2VwAyEAtFuCleJwHS28jUCT+ulLl5c1+MXhehhDz2SimOhmWaI= -----END PUBLIC KEY----- Certificate example: -----BEGIN CERTIFICATE----- MIIByzCCAX2gAwIBAgIUXSsFYOzs6TCwKZ4ASbby0XbUuI8wBQYDK2VwMFsxCzAJ BgNVBAYTAnVhMQowCAYDVQQIDAFhMQowCAYDVQQHDAFhMQowCAYDVQQKDAFhMQow CAYDVQQLDAFhMQowCAYDVQQDDAFhMRAwDgYJKoZIhvcNAQkBFgFhMB4XDTI0MDYx MDExMDEzMloXDTI0MDkxODExMDEzMlowWzELMAkGA1UEBhMCdWExCjAIBgNVBAgM AWExCjAIBgNVBAcMAWExCjAIBgNVBAoMAWExCjAIBgNVBAsMAWExCjAIBgNVBAMM AWExEDAOBgkqhkiG9w0BCQEWAWEwKjAFBgMrZXADIQC0W4KV4nAdLbyNQJP66UuX lzX4xeF6GEPPZKKY6GZZoqNTMFEwHQYDVR0OBBYEFGAwFd05R9zFSYqT3C9xvFgI zwKhMB8GA1UdIwQYMBaAFGAwFd05R9zFSYqT3C9xvFgIzwKhMA8GA1UdEwEB/wQF MAMBAf8wBQYDK2VwA0EAqGmRv75DXvjtLrvmuc5KCAuE4jJ2AHCcImWzOYj+m4pT n6SS3ECqDuMa5Pz3NKue2fsvNucerJgbn6lKlRJ1BQ== -----END CERTIFICATE-----","title":"Keys and Certificate Format"},{"location":"architecture/08_concepts/hermes_signing_procedure/certificate_and_keys/#certificate-and-keys-generation","text":"For key generation and certificate signing we'll use OpenSSl command-line tools. To generate private and public keys run the following: openssl genpkey -algorithm = ED25519 -out = private.pem -outpubkey = public.pem After that a self-signed certificate could be generated by: openssl req -new -x509 -key = private.pem -out = cert.pem -config = x509_cert.config Where x509_cert.config could look like this [req] prompt = no days = 365 distinguished_name = req_distinguished_name [req_distinguished_name] countryName = AB stateOrProvinceName = CD localityName = EFG_HIJ organizationName = MyOrg organizationalUnitName = MyOrgUnit commonName = mycommname.com emailAddress = emailaddress@myemail.com To double check the content of the certificate and certificate details run: openssl x509 -text -in = cert.pem","title":"Certificate and keys generation"},{"location":"architecture/08_concepts/hermes_signing_procedure/signature_format/","text":"Signature format \u00b6 Hermes signatures, whether for application package or WASM module package, adhere to a specific format. This format is based on the COSE standard, which is a CBOR -defined object. The COSE format is a widely adopted standard for secure communication and data exchange. It provides a flexible and compact way to represent cryptographic objects, such as digital signatures. By using COSE , Hermes ensures the integrity and authenticity of its signatures, ensuring the security and trustworthiness of the signed content. COSE Headers \u00b6 The COSE standard defines two types of headers: protected and unprotected . The protected headers contain parameters about the current layer that are to be cryptographically protected. These headers are mandatory for certain cryptographic computations and must be included in the signature. If no cryptographic computation is required, the protected headers can be empty. The unprotected headers contain parameters about the current layer that are not cryptographically protected. These headers are optional and can be used to provide additional information or metadata. In Hermes, the following headers with its values MUST be included in the COSE signature. protected : alg : EdDSA (this parameter is used to indicate the algorithm used for the security processing). content type : application/json (this parameter is used to indicate the content type of the data in the payload or ciphertext fields). Signature type \u00b6 COSE is a flexible security protocol that supports various types of security messages. The comprehensive list includes: COSE Signed Data Object COSE Single Signer Data Object COSE Encrypted Data Object COSE Single Recipient Encrypted Data Object COSE MACed Data Object COSE Mac w/o Recipients Object However, Hermes will utilize only COSE Signed Data Object to enable signing with multiple users. So every COSE signature MUST be encoded as COSE Signed Data Object even if it contains only one signature in it. Signature payload \u00b6 As mentioned earlier, the content type of the COSE signature payload is JSON and should follows the defined schema. Each particular signature payload schema defined for specific Hermes entities. Signature headers \u00b6 COSE Signed Data Object signature type defined as a CBOR structure, which includes the same meaning headers. In Hermes, the following headers with its values MUST be included in the COSE signature. protected : kid : a Blake2B hash of the signer's x.509 certificate (ASN.1 DER encoded bytes) associated with its keys (this parameter identifies one piece of data that can be used as input to find the needed cryptographic key).","title":"Signature format"},{"location":"architecture/08_concepts/hermes_signing_procedure/signature_format/#signature-format","text":"Hermes signatures, whether for application package or WASM module package, adhere to a specific format. This format is based on the COSE standard, which is a CBOR -defined object. The COSE format is a widely adopted standard for secure communication and data exchange. It provides a flexible and compact way to represent cryptographic objects, such as digital signatures. By using COSE , Hermes ensures the integrity and authenticity of its signatures, ensuring the security and trustworthiness of the signed content.","title":"Signature format"},{"location":"architecture/08_concepts/hermes_signing_procedure/signature_format/#cose-headers","text":"The COSE standard defines two types of headers: protected and unprotected . The protected headers contain parameters about the current layer that are to be cryptographically protected. These headers are mandatory for certain cryptographic computations and must be included in the signature. If no cryptographic computation is required, the protected headers can be empty. The unprotected headers contain parameters about the current layer that are not cryptographically protected. These headers are optional and can be used to provide additional information or metadata. In Hermes, the following headers with its values MUST be included in the COSE signature. protected : alg : EdDSA (this parameter is used to indicate the algorithm used for the security processing). content type : application/json (this parameter is used to indicate the content type of the data in the payload or ciphertext fields).","title":"COSE Headers"},{"location":"architecture/08_concepts/hermes_signing_procedure/signature_format/#signature-type","text":"COSE is a flexible security protocol that supports various types of security messages. The comprehensive list includes: COSE Signed Data Object COSE Single Signer Data Object COSE Encrypted Data Object COSE Single Recipient Encrypted Data Object COSE MACed Data Object COSE Mac w/o Recipients Object However, Hermes will utilize only COSE Signed Data Object to enable signing with multiple users. So every COSE signature MUST be encoded as COSE Signed Data Object even if it contains only one signature in it.","title":"Signature type"},{"location":"architecture/08_concepts/hermes_signing_procedure/signature_format/#signature-payload","text":"As mentioned earlier, the content type of the COSE signature payload is JSON and should follows the defined schema. Each particular signature payload schema defined for specific Hermes entities.","title":"Signature payload"},{"location":"architecture/08_concepts/hermes_signing_procedure/signature_format/#signature-headers","text":"COSE Signed Data Object signature type defined as a CBOR structure, which includes the same meaning headers. In Hermes, the following headers with its values MUST be included in the COSE signature. protected : kid : a Blake2B hash of the signer's x.509 certificate (ASN.1 DER encoded bytes) associated with its keys (this parameter identifies one piece of data that can be used as input to find the needed cryptographic key).","title":"Signature headers"},{"location":"architecture/09_architecture_decisions/0001-arch-std/","text":"Context \u00b6 There needs to be a commonly understood and well documented structure to Architecture Documentation. Architecture Documentation is the responsibility of the entire team. A standardized structure to that documentation helps with collaboration. Assumptions \u00b6 Architecture documentation is the collective responsibility of the development team. A well documented structure to that documentation will aid in collaboration and maintenance of the documentation. Decision \u00b6 We will be using the arc42 standard for organizing architecture documentation. Risks \u00b6 That arc42 becomes unmaintained upstream, or some flaw is found with its methodology. That the team does not understand the structure of the architecture documentation or necessity to maintain it. Consequences \u00b6 If we do: It is easier to maintain documentation when there is an agreed structure to it. It is easier to on-board new members of the team when there are resources to help understand the documentation and its structure. Architecture Documentation will be of higher quality and more meaningfully reviewed in the context of an agreed structure. If we don't: Architecture docs will be \"ad-hoc\". Difficult for the team to meaningfully collaborate on Architecture. Difficult to maintain. Difficult to ensure the necessary information is captured. Difficult to iterate and be agile. More Information \u00b6 arc42 Original Templates Main Documentation Books Examples","title":"0001 Architecture Documentation Standard"},{"location":"architecture/09_architecture_decisions/0001-arch-std/#context","text":"There needs to be a commonly understood and well documented structure to Architecture Documentation. Architecture Documentation is the responsibility of the entire team. A standardized structure to that documentation helps with collaboration.","title":"Context"},{"location":"architecture/09_architecture_decisions/0001-arch-std/#assumptions","text":"Architecture documentation is the collective responsibility of the development team. A well documented structure to that documentation will aid in collaboration and maintenance of the documentation.","title":"Assumptions"},{"location":"architecture/09_architecture_decisions/0001-arch-std/#decision","text":"We will be using the arc42 standard for organizing architecture documentation.","title":"Decision"},{"location":"architecture/09_architecture_decisions/0001-arch-std/#risks","text":"That arc42 becomes unmaintained upstream, or some flaw is found with its methodology. That the team does not understand the structure of the architecture documentation or necessity to maintain it.","title":"Risks"},{"location":"architecture/09_architecture_decisions/0001-arch-std/#consequences","text":"If we do: It is easier to maintain documentation when there is an agreed structure to it. It is easier to on-board new members of the team when there are resources to help understand the documentation and its structure. Architecture Documentation will be of higher quality and more meaningfully reviewed in the context of an agreed structure. If we don't: Architecture docs will be \"ad-hoc\". Difficult for the team to meaningfully collaborate on Architecture. Difficult to maintain. Difficult to ensure the necessary information is captured. Difficult to iterate and be agile.","title":"Consequences"},{"location":"architecture/09_architecture_decisions/0001-arch-std/#more-information","text":"arc42 Original Templates Main Documentation Books Examples","title":"More Information"},{"location":"architecture/09_architecture_decisions/0002-adr/","text":"Context \u00b6 Architecture Decision Records are part of arc42 . We need an efficient and automated way to manage them. The system needs to be easy for anyone to use as documenting Architecture Decisions is a team responsibility. Assumptions \u00b6 The team as a whole is responsible for creating and maintaining Architecture Decision Records. Decision \u00b6 We will use the MkDocs Material ADR Plugin to assist in ADR documentation and automation. Risks \u00b6 The plugin doesn't get maintained or has technical issues This risk can be mitigated because the plugin is simple, and it would be easy for us to fork and maintain it as required. Consequences \u00b6 ADR become easier for people to author. This should assist in making the team more pro-active in their creation and maintenance. More Information \u00b6 arc42 arc42 ADR Guide MkDocs Material ADR Plugin Fixed fork of MkDocs Material ADR Plugin","title":"0002 Architecture Decision Records"},{"location":"architecture/09_architecture_decisions/0002-adr/#context","text":"Architecture Decision Records are part of arc42 . We need an efficient and automated way to manage them. The system needs to be easy for anyone to use as documenting Architecture Decisions is a team responsibility.","title":"Context"},{"location":"architecture/09_architecture_decisions/0002-adr/#assumptions","text":"The team as a whole is responsible for creating and maintaining Architecture Decision Records.","title":"Assumptions"},{"location":"architecture/09_architecture_decisions/0002-adr/#decision","text":"We will use the MkDocs Material ADR Plugin to assist in ADR documentation and automation.","title":"Decision"},{"location":"architecture/09_architecture_decisions/0002-adr/#risks","text":"The plugin doesn't get maintained or has technical issues This risk can be mitigated because the plugin is simple, and it would be easy for us to fork and maintain it as required.","title":"Risks"},{"location":"architecture/09_architecture_decisions/0002-adr/#consequences","text":"ADR become easier for people to author. This should assist in making the team more pro-active in their creation and maintenance.","title":"Consequences"},{"location":"architecture/09_architecture_decisions/0002-adr/#more-information","text":"arc42 arc42 ADR Guide MkDocs Material ADR Plugin Fixed fork of MkDocs Material ADR Plugin","title":"More Information"},{"location":"architecture/09_architecture_decisions/0003-app-ver-control/","text":"Context \u00b6 Hermes should be a robust and reliable platform for Hermes applications to be run on. So it has to have a defined boundaries of which application would be executed and which not. NOTE There is an acknowledged need for version control of the APIs in a mature Hermes state, however at this stage we will not define such a policy until the core hermes engine and libraries have matured enough to make an informed choice. Assumptions \u00b6 Hermes runtime extensions api could not be stable and evolve during the development process. Decision \u00b6 As a part of the metadata of the Hermes application, provide a api_version field. During the application loading step it should be validated, against the current Hermes api_version on which this application going to be executed. Validation is a equality check. Risks \u00b6 Failing to specify a version control policy and method of enforcement at a sufficiently advanced state of maturity could make it difficult to interoperate with Hermes applications over time. Consequences \u00b6 Consequences to consider: Eliminates maintenance and support complexity for the Hermes development itself. Eliminates the need of the internal api version management system. Force Hermes application developers and it's users to use the latest version of the Hermes engine. As api_version is separated from the Hermes version itself, allows to continue deliver new versions which does not change runtime extensions api.","title":"0003 Hermes runtime extensions api version control"},{"location":"architecture/09_architecture_decisions/0003-app-ver-control/#context","text":"Hermes should be a robust and reliable platform for Hermes applications to be run on. So it has to have a defined boundaries of which application would be executed and which not. NOTE There is an acknowledged need for version control of the APIs in a mature Hermes state, however at this stage we will not define such a policy until the core hermes engine and libraries have matured enough to make an informed choice.","title":"Context"},{"location":"architecture/09_architecture_decisions/0003-app-ver-control/#assumptions","text":"Hermes runtime extensions api could not be stable and evolve during the development process.","title":"Assumptions"},{"location":"architecture/09_architecture_decisions/0003-app-ver-control/#decision","text":"As a part of the metadata of the Hermes application, provide a api_version field. During the application loading step it should be validated, against the current Hermes api_version on which this application going to be executed. Validation is a equality check.","title":"Decision"},{"location":"architecture/09_architecture_decisions/0003-app-ver-control/#risks","text":"Failing to specify a version control policy and method of enforcement at a sufficiently advanced state of maturity could make it difficult to interoperate with Hermes applications over time.","title":"Risks"},{"location":"architecture/09_architecture_decisions/0003-app-ver-control/#consequences","text":"Consequences to consider: Eliminates maintenance and support complexity for the Hermes development itself. Eliminates the need of the internal api version management system. Force Hermes application developers and it's users to use the latest version of the Hermes engine. As api_version is separated from the Hermes version itself, allows to continue deliver new versions which does not change runtime extensions api.","title":"Consequences"},{"location":"architecture/09_architecture_decisions/0004-app-loading/","text":"Context \u00b6 Hermes, as an engine that runs user-developed applications, should have the functionality to load and execute the provided assembled application. This process must validate the application's integrity and correctness and prepare the application's state before executing it. Assumptions \u00b6 Hermes application package could be corrupted or modified. Decision \u00b6 During each application loading and running process, the application package should be provided. All possible validations and initialization should be performed based on the package data. Risks \u00b6 Potential bad user experience (UX) for each application run due to time consumption in validations and state preparation Alternatives \u00b6 Split loading application (installing) and running into two different procedures. So during loading all validations will be performed along with state initialization and saved somewhere. Run procedure will not require an original application package and will pick up already validated and initialized data to run application. Consequences \u00b6 Adds better integrity and consistency over application's initial state/code among each application run. Eliminates possibility to execute corrupted application.","title":"0004 Hermes application loading procedure"},{"location":"architecture/09_architecture_decisions/0004-app-loading/#context","text":"Hermes, as an engine that runs user-developed applications, should have the functionality to load and execute the provided assembled application. This process must validate the application's integrity and correctness and prepare the application's state before executing it.","title":"Context"},{"location":"architecture/09_architecture_decisions/0004-app-loading/#assumptions","text":"Hermes application package could be corrupted or modified.","title":"Assumptions"},{"location":"architecture/09_architecture_decisions/0004-app-loading/#decision","text":"During each application loading and running process, the application package should be provided. All possible validations and initialization should be performed based on the package data.","title":"Decision"},{"location":"architecture/09_architecture_decisions/0004-app-loading/#risks","text":"Potential bad user experience (UX) for each application run due to time consumption in validations and state preparation","title":"Risks"},{"location":"architecture/09_architecture_decisions/0004-app-loading/#alternatives","text":"Split loading application (installing) and running into two different procedures. So during loading all validations will be performed along with state initialization and saved somewhere. Run procedure will not require an original application package and will pick up already validated and initialized data to run application.","title":"Alternatives"},{"location":"architecture/09_architecture_decisions/0004-app-loading/#consequences","text":"Adds better integrity and consistency over application's initial state/code among each application run. Eliminates possibility to execute corrupted application.","title":"Consequences"},{"location":"getting-started/","text":"Getting Started \u00b6","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"","title":"Getting Started"},{"location":"getting-started/advanced/","text":"Advanced \u00b6","title":"Advanced"},{"location":"getting-started/advanced/#advanced","text":"","title":"Advanced"},{"location":"getting-started/development/","text":"Development \u00b6","title":"Development"},{"location":"getting-started/development/#development","text":"","title":"Development"},{"location":"getting-started/quick-start/","text":"Quick Start \u00b6","title":"Quick Start"},{"location":"getting-started/quick-start/#quick-start","text":"","title":"Quick Start"},{"location":"architecture/09_architecture_decisions/","text":"Architecture Decisions \u00b6 Index graph TD 0001-arch-std[0001 Architecture Documentation Standard] click 0001-arch-std \"/hermes/architecture/09_architecture_decisions/0001-arch-std/\" _blank 0001-arch-std:::mermaid-accepted 0001-arch-std:::mermaid-common 0002-adr[0002 Architecture Decision Records] click 0002-adr \"/hermes/architecture/09_architecture_decisions/0002-adr/\" _blank 0002-adr:::mermaid-accepted 0002-adr:::mermaid-common 0001-arch-std -- Extended --> 0002-adr 0003-app-ver-control[0003 Hermes runtime extensions api version control] click 0003-app-ver-control \"/hermes/architecture/09_architecture_decisions/0003-app-ver-control/\" _blank 0003-app-ver-control:::mermaid-draft 0003-app-ver-control:::mermaid-common 0004-app-loading[0004 Hermes application loading procedure] click 0004-app-loading \"/hermes/architecture/09_architecture_decisions/0004-app-loading/\" _blank 0004-app-loading:::mermaid-draft 0004-app-loading:::mermaid-common classDef mermaid-draft fill:#a3a3a3; classDef mermaid-common color:#595959; classDef mermaid-proposed fill:#b6d8ff; classDef mermaid-common color:#595959; classDef mermaid-accepted fill:#b4eda0; classDef mermaid-common color:#595959; classDef mermaid-rejected fill:#ffd5d1; classDef mermaid-common color:#595959; classDef mermaid-superseded fill:#ffebb6; classDef mermaid-common color:#595959;","title":"Architecture Decisions"},{"location":"architecture/09_architecture_decisions/#architecture-decisions","text":"Index graph TD 0001-arch-std[0001 Architecture Documentation Standard] click 0001-arch-std \"/hermes/architecture/09_architecture_decisions/0001-arch-std/\" _blank 0001-arch-std:::mermaid-accepted 0001-arch-std:::mermaid-common 0002-adr[0002 Architecture Decision Records] click 0002-adr \"/hermes/architecture/09_architecture_decisions/0002-adr/\" _blank 0002-adr:::mermaid-accepted 0002-adr:::mermaid-common 0001-arch-std -- Extended --> 0002-adr 0003-app-ver-control[0003 Hermes runtime extensions api version control] click 0003-app-ver-control \"/hermes/architecture/09_architecture_decisions/0003-app-ver-control/\" _blank 0003-app-ver-control:::mermaid-draft 0003-app-ver-control:::mermaid-common 0004-app-loading[0004 Hermes application loading procedure] click 0004-app-loading \"/hermes/architecture/09_architecture_decisions/0004-app-loading/\" _blank 0004-app-loading:::mermaid-draft 0004-app-loading:::mermaid-common classDef mermaid-draft fill:#a3a3a3; classDef mermaid-common color:#595959; classDef mermaid-proposed fill:#b6d8ff; classDef mermaid-common color:#595959; classDef mermaid-accepted fill:#b4eda0; classDef mermaid-common color:#595959; classDef mermaid-rejected fill:#ffd5d1; classDef mermaid-common color:#595959; classDef mermaid-superseded fill:#ffebb6; classDef mermaid-common color:#595959;","title":"Architecture Decisions"}]}