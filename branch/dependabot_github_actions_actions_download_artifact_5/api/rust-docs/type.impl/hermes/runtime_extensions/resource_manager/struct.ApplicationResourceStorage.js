(function() {
    var type_impls = Object.fromEntries([["hermes",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ApplicationResourceStorage%3CWitType,+RustType%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hermes/runtime_extensions/resource_manager.rs.html#120-175\">Source</a><a href=\"#impl-ApplicationResourceStorage%3CWitType,+RustType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;WitType, RustType&gt; <a class=\"struct\" href=\"hermes/runtime_extensions/resource_manager/struct.ApplicationResourceStorage.html\" title=\"struct hermes::runtime_extensions::resource_manager::ApplicationResourceStorage\">ApplicationResourceStorage</a>&lt;WitType, RustType&gt;<div class=\"where\">where\n    WitType: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/hermes/runtime_extensions/resource_manager.rs.html#124-128\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"hermes/runtime_extensions/resource_manager/struct.ApplicationResourceStorage.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates new <code>ApplicationResourceStorage</code> instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_app\" class=\"method\"><a class=\"src rightside\" href=\"src/hermes/runtime_extensions/resource_manager.rs.html#132-139\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"hermes/runtime_extensions/resource_manager/struct.ApplicationResourceStorage.html#tymethod.add_app\" class=\"fn\">add_app</a>(&amp;self, app_name: <a class=\"struct\" href=\"hermes/app/struct.ApplicationName.html\" title=\"struct hermes::app::ApplicationName\">ApplicationName</a>)</h4></section></summary><div class=\"docblock\"><p>Adds new application to the resource manager.\nIf the application state already exists, do nothing.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_app_state\" class=\"method\"><a class=\"src rightside\" href=\"src/hermes/runtime_extensions/resource_manager.rs.html#148-155\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"hermes/runtime_extensions/resource_manager/struct.ApplicationResourceStorage.html#tymethod.get_app_state\" class=\"fn\">get_app_state</a>&lt;'a&gt;(\n    &amp;'a self,\n    app_name: &amp;<a class=\"struct\" href=\"hermes/app/struct.ApplicationName.html\" title=\"struct hermes::app::ApplicationName\">ApplicationName</a>,\n) -&gt; <a class=\"type\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a>&lt;Target = <a class=\"struct\" href=\"hermes/runtime_extensions/resource_manager/struct.ResourceStorage.html\" title=\"struct hermes::runtime_extensions::resource_manager::ResourceStorage\">ResourceStorage</a>&lt;WitType, RustType&gt;&gt; + 'a&gt;</h4></section></summary><div class=\"docblock\"><p>Get application state from the resource manager.\nTo increase performance and reduce locking time, it’s better to call\n<code>drop(app_state)</code> immediately when the <code>app_state</code> is not needed anymore and don’t\nwait until it will be released by the compiler.</p>\n<p><strong>Locking behavior:</strong> May deadlock if called when holding any sort of reference\ninto the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_app\" class=\"method\"><a class=\"src rightside\" href=\"src/hermes/runtime_extensions/resource_manager.rs.html#159-164\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"hermes/runtime_extensions/resource_manager/struct.ApplicationResourceStorage.html#tymethod.remove_app\" class=\"fn\">remove_app</a>(&amp;self, app_name: &amp;<a class=\"struct\" href=\"hermes/app/struct.ApplicationName.html\" title=\"struct hermes::app::ApplicationName\">ApplicationName</a>)</h4></section></summary><div class=\"docblock\"><p>Removes application and all associated resources from the resource manager.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.app_not_found_err\" class=\"method\"><a class=\"src rightside\" href=\"src/hermes/runtime_extensions/resource_manager.rs.html#167-174\">Source</a><h4 class=\"code-header\">fn <a href=\"hermes/runtime_extensions/resource_manager/struct.ApplicationResourceStorage.html#tymethod.app_not_found_err\" class=\"fn\">app_not_found_err</a>() -&gt; <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a></h4></section></summary><div class=\"docblock\"><p>Application not found error message.</p>\n</div></details></div></details>",0,"hermes::runtime_extensions::hermes::crypto::state::State","hermes::runtime_extensions::hermes::sqlite::state::DbState","hermes::runtime_extensions::hermes::sqlite::state::StatementState","hermes::runtime_extensions::wasi::filesystem::state::Descriptors","hermes::runtime_extensions::wasi::io::streams::state::InputStreams","hermes::runtime_extensions::wasi::io::streams::state::OutputStreams"]]],["hermes",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ApplicationResourceStorage%3CWitType,+RustType%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hermes/runtime_extensions/resource_manager.rs.html#120-175\">Source</a><a href=\"#impl-ApplicationResourceStorage%3CWitType,+RustType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;WitType, RustType&gt; <a class=\"struct\" href=\"hermes/runtime_extensions/resource_manager/struct.ApplicationResourceStorage.html\" title=\"struct hermes::runtime_extensions::resource_manager::ApplicationResourceStorage\">ApplicationResourceStorage</a>&lt;WitType, RustType&gt;<div class=\"where\">where\n    WitType: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/hermes/runtime_extensions/resource_manager.rs.html#124-128\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"hermes/runtime_extensions/resource_manager/struct.ApplicationResourceStorage.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates new <code>ApplicationResourceStorage</code> instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_app\" class=\"method\"><a class=\"src rightside\" href=\"src/hermes/runtime_extensions/resource_manager.rs.html#132-139\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"hermes/runtime_extensions/resource_manager/struct.ApplicationResourceStorage.html#tymethod.add_app\" class=\"fn\">add_app</a>(&amp;self, app_name: <a class=\"struct\" href=\"hermes/app/struct.ApplicationName.html\" title=\"struct hermes::app::ApplicationName\">ApplicationName</a>)</h4></section></summary><div class=\"docblock\"><p>Adds new application to the resource manager.\nIf the application state already exists, do nothing.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_app_state\" class=\"method\"><a class=\"src rightside\" href=\"src/hermes/runtime_extensions/resource_manager.rs.html#148-155\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"hermes/runtime_extensions/resource_manager/struct.ApplicationResourceStorage.html#tymethod.get_app_state\" class=\"fn\">get_app_state</a>&lt;'a&gt;(\n    &amp;'a self,\n    app_name: &amp;<a class=\"struct\" href=\"hermes/app/struct.ApplicationName.html\" title=\"struct hermes::app::ApplicationName\">ApplicationName</a>,\n) -&gt; <a class=\"type\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a>&lt;Target = <a class=\"struct\" href=\"hermes/runtime_extensions/resource_manager/struct.ResourceStorage.html\" title=\"struct hermes::runtime_extensions::resource_manager::ResourceStorage\">ResourceStorage</a>&lt;WitType, RustType&gt;&gt; + 'a&gt;</h4></section></summary><div class=\"docblock\"><p>Get application state from the resource manager.\nTo increase performance and reduce locking time, it’s better to call\n<code>drop(app_state)</code> immediately when the <code>app_state</code> is not needed anymore and don’t\nwait until it will be released by the compiler.</p>\n<p><strong>Locking behavior:</strong> May deadlock if called when holding any sort of reference\ninto the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_app\" class=\"method\"><a class=\"src rightside\" href=\"src/hermes/runtime_extensions/resource_manager.rs.html#159-164\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"hermes/runtime_extensions/resource_manager/struct.ApplicationResourceStorage.html#tymethod.remove_app\" class=\"fn\">remove_app</a>(&amp;self, app_name: &amp;<a class=\"struct\" href=\"hermes/app/struct.ApplicationName.html\" title=\"struct hermes::app::ApplicationName\">ApplicationName</a>)</h4></section></summary><div class=\"docblock\"><p>Removes application and all associated resources from the resource manager.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.app_not_found_err\" class=\"method\"><a class=\"src rightside\" href=\"src/hermes/runtime_extensions/resource_manager.rs.html#167-174\">Source</a><h4 class=\"code-header\">fn <a href=\"hermes/runtime_extensions/resource_manager/struct.ApplicationResourceStorage.html#tymethod.app_not_found_err\" class=\"fn\">app_not_found_err</a>() -&gt; <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.99/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a></h4></section></summary><div class=\"docblock\"><p>Application not found error message.</p>\n</div></details></div></details>",0,"hermes::runtime_extensions::hermes::crypto::state::State","hermes::runtime_extensions::wasi::filesystem::state::Descriptors","hermes::runtime_extensions::wasi::io::streams::state::InputStreams","hermes::runtime_extensions::wasi::io::streams::state::OutputStreams"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[5380,5252]}