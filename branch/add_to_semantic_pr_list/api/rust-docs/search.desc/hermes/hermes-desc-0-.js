searchState.loadedDescShard("hermes", 0, "The Hermes Node.\nHermes app implementation.\nCLI interpreter for the service\nErrors module.\nHermes event’s primitives.\nModule provides different objects, abstractions for …\nHermes IPFS service.\nSetup for logging for the service.\nHermes packaging.\nHermes Reactor implementation.\nHermes runtime context implementation.\nHermes runtime extensions\nGenerally used utility functions.\nHermes virtual file system.\nWASM related structures and functions which are specific …\nHermes application\nHermes App Name type\nDispatch event for all available modules.\nDispatch event for the target module by the <code>module_id</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWASM modules\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDispatch event\nGet app name\nApplication name\nCreate a new Hermes app\nGet vfs\nApplication’s <code>Vfs</code> instance\napp commands\nHermes\nHermes cli commands\nA parameter identifier specifying the log level.\nmodule commands\nRun the hermes node\ncli app command\nHermes binary build info\nHermes cli subcommand\nExecute cli commands of the hermes\nReturns the argument unchanged.\nReturns the argument unchanged.\nHermes home directory\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ncli module command\nRun cli command\nHermes cli app commands\npackage application\nsign application\nExecute cli module command\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\ncli app package command\ncli app sign command\nHermes application packaging\nRun cli command\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefines the location of all the src artifacts needed to …\nThe package name, instead of taking it from the manifest …\nBy default the module will be created in the same …\nApplication package signing\nDefines the location of the x.509 certificate associated …\nRun cli command\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefines the location of the builded application package.\nDefines the location of the ED2559 private key associated …\nFormatted hermes binary build info\nHermes cli module commands\npackage wasm module\nsign wasm module package\nExecute cli module command\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\ncli module package command\ncli module sign command\nHermes WASM module packaging\nRun cli command\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefines the location of all the src artifacts needed to …\nThe package name, instead of taking it from the manifest …\nBy default the module will be created in the same …\nWASM module package signing\nDefines the location of the x.509 certificate associated …\nRun cli command\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefines the location of the builded WASM module package.\nDefines the location of the ED2559 private key associated …\nRun cli command\nPath to the Hermes application package to run\nPath to the trusted certificate\nRun the hermes application\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFlag which disables package signature verification\nErrors struct which holds a collection of errors\nAdd an error to the <code>Errors</code>\nReturns the argument unchanged.\nReturn a closure that adds an error to the <code>Errors</code>\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the <code>Errors</code> contains no elements.\nCreate a new empty <code>Errors</code>\nReturn errors if <code>Errors</code> is not empty or return <code>Ok(val)</code>\nExecute for all available apps\nExecute for all available modules\nHermes event\nA trait for defining the behavior of a Hermes event.\nExecute for a specific list of apps\nExecute for a specific list of modules\nTarget Hermes app to execute the event\nTarget WASM module to execute the event\nReturns the name of the event associated with the payload.\nExecutes the behavior associated with the payload, using …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new Hermes event\nGet event’s payload\nThe payload carried by the <code>HermesEvent</code>.\nHermes event queue implementation.\nGet event’s target app\nTarget app\nGet event’s target module\nTarget module\nFailed when event queue already been initialized.\nFailed to add event into the event queue. Event queue is …\nSingleton instance of the Hermes event queue.\nHermes event queue. It is a singleton struct.\nFailed when event queue not been initialized.\nExecutes Hermes events from the provided receiver .\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new instance of the <code>HermesEventQueue</code>. Runs an …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdd event into the event queue\nHermes event queue sender\nExecutes provided Hermes event filtering by target app.\nExecutes provided Hermes event filtering by target module.\nEnabling blosc compression for the hdf5 package.\nA Hermes HDF5 directory abstraction over the HDF5 Group …\nA Hermes HDF5 file abstraction over the HDF5 dataset …\nA Hermes HDF5 path abstraction.\nResources module functionality.\nStatically initialize blosc on the first call only once.\nCompression algorithm.\nCompression level. zstd compressor of 9 to get a good …\nMinimum blosc threads. 8 threads being a minimum likely …\nMinimum chunk size in kb, 8mb. 1mb per …\nInitialize blosc.\nEnable blosc compression.\nHermes HDF5 directory object, wrapper of <code>hdf5::Group</code>\nCopy other <code>Dir</code> recursively content to the current one.\nCopy resource dir recursively to the provided path.\nCopy resource file to the provided path.\nCreate dir recursively from path related to current dir. …\nCreate a new empty file in the provided path.\nFlushes internal HDF5 to the disk\nReturns the argument unchanged.\nGet dir by the provided path. Return error if dir does not …\nGet all dirs from the provided path. If path is empty it …\nGet file if present from path. Return error if file does …\nGet all files from the provided path. If path is empty it …\nCalls <code>U::from(self)</code>.\nMount directory from the another HDF5 package to the …\nMount file from the another HDF5 package to the provided …\nReturn dir name.\nCreate new <code>Dir</code>.\nReturn dir <code>Path</code>.\nRemove directory by the provided path.\nRemove file by the provided path.\nHermes HDF5 file object, wrapper of <code>hdf5::Dataset</code>\nCreate a new file.\nReturns the argument unchanged.\nHDF5 dataset object.\nCalls <code>U::from(self)</code>.\nConvert arbitrary error to <code>std::io::Error</code>.\nReturn file name.\nOpen an existing <code>File</code> from the provided dataset.\nReturn file <code>Path</code>.\nReading/Writing position of the <code>hdf5_ds</code>.\nReturn file size.\nPackage path.\nReturns the argument unchanged.\nCreate new <code>PackagePath</code> from str.\nCalls <code>U::from(self)</code>.\nReturns an iterator over the path elements.\nPop the last path element of the path from the path …\nPush a new path element to the path at the end.\nResource trait definition.\nResource builder type implementation. This type defines …\nRaw bytes resource implementation.\nFilesystem resource implementation.\nGet directory content.\nGet data reader for the resource.\nHDF5 based resource implementation.\nCheck if resource is a directory.\nCheck if resource is a file.\nGet resource name (e.g. file name or dir name).\nURI hermes specific parsing implementation.\nFile system resource.\nResource builder definition with the <code>serde::Deserialize</code> …\nGet <code>ResourceTrait</code> obj.\nReturns the argument unchanged.\nCreate resource from URI.\nCalls <code>U::from(self)</code>.\nUpdate current resource to make it relative to the given …\nUpload resource to the file system, returning its path.\nRaw bytes resource struct.\nraw bytes\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nname of the resource\nCreate a new <code>BytesResource</code> instance.\nFile system resource. A simple wrapper over <code>PathBuf</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new <code>FsResource</code> instance.\nHDF5 group.\nHDF5 dataset.\nHDF5 resource struct.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nURI resource definition. This definition mainly based on …\nReturns the argument unchanged.\nURI host component.\nCalls <code>U::from(self)</code>.\nParse URI from string with the following pattern: …\nURI path component.\nURI schema component.\nIPFS app state\nHermes IPFS Internal Node\nHermes IPFS Internal Node\nKeep track of <code>topic</code> subscription added by an app.\nKeep track of <code>dht_key</code> of DHT value added by an app.\nKeep track of <code>topic</code> stream handle.\nHermes IPFS State API\nState related to <code>ApplicationName</code>\nBootstrap <code>HERMES_IPFS</code> node.\nGet DHT Value by Key\nList of DHT values per app.\nPut DHT Key-Value\nAdd <code>peer_id</code> of evicted peer by an app.\nList of evicted peers per app.\nAdd file\nGet file\nPin file\nUn-in file\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate, initialize, and bootstrap a new <code>HermesIpfsNode</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks for <code>DhtKey</code>, and <code>DhtValue</code> validity.\nChecks for <code>PubsubTopic</code>, and <code>MessageData</code> validity.\nList of pinned files by an app.\nCreate new <code>AppIpfsState</code>\nEvict peer\nKeep track of <code>ipfs_path</code> of file pinned by an app.\nList of pinned files per app.\nPublish message to a <code>PubSub</code> topic\nSubscribe to a <code>PubSub</code> topic\nSend events to the IPFS node.\nReturns a list of apps subscribed to a topic.\nCollection of stream join handles per topic subscription.\nIPFS Task\nList of subscriptions per app.\nCheck if a topic subscription already exists.\nUn-pin a file with <code>ipfs_path</code> pinned by an app.\nAdd File to IPFS\nValidate IPFS Content from DHT or <code>PubSub</code>\nEvict Peer from node\nGet DHT Value\nGet File from Ipfs\nList pinned files\nPin IPFS File\nPublish message to a topic\nPut DHT Value\nSubscribe to a topic\nUn-pin IPFS File\nAdd a new IPFS file\nEvict Peer from node\nGet DHT value\nGet a file from IPFS\nIPFS Command\nPin a file\nPublish to a topic\nPut DHT value\nSubscribe to a topic\nUn-pin a file\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHandle IPFS commands in asynchronous task.\nSend the response of the IPFS command\nHandler function for topic message streams.\nDebug messages\nErrors\nInformational Messages\nAll valid logging levels.\nLogger configuration.\nLogger configuration builder.\nTracing\nWarnings\nBuild the logger configuration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitializes the subscriber for the logger with the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet log level.\nLog level.\nBuilder log level.\nEnable/disable file logging.\nEnable/disable file logging.\nBuilder enable/disable file logging.\nEnable/disable line number logging.\nEnable/disable line number logging.\nBuilder enable/disable line number logging.\nEnable/disable thread logging.\nEnable/disable thread logging.\nBuilder enable/disable thread logging.\nFile open and read error.\nMissing package file error.\nHermes application package.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>FileError</code> instance from a path location.\nCreate a new <code>FileError</code> instance from a string location.\nBlake2b-256 hash implementation.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFile location.\nA generalized metadata object which is used an specified …\nHermes WASM module package.\nFile open and read error.\nImplementation of the generalized Hermes package struct as …\nJSON schema validation module.\nHermes signing procedure implementation. Follows …\nApplication package signature file path.\nHermes application package.\nApplication package file extension.\nApplication package icon file path.\nApplication package ‘lib’ directory path.\nApplication package metadata file path.\nApplication package overridden module’s config file name.\nApplication package overridden module’s ‘share’ dir …\nApplication package <code>srv</code> directory name.\nApplication package <code>srv/share</code> directory path.\nApplication package <code>srv/www</code> directory path.\nApplication package ‘usr’ directory path.\nApplication package ‘usr/lib’ directory path.\nApplication builder from the application package.\nA signature payload object for author.cose Hermes …\nSign the package as an author and store signature inside …\nCreate a new Hermes application package package from a …\nReturns the argument unchanged.\nOpen an existing application package.\nGet application package name.\nGet author <code>Signature</code> object from package.\nBuild and return <code>author_payload::SignaturePayload</code>.\nGet icon <code>File</code> object from package.\nGet <code>Metadata</code> object from package.\nGet metadata <code>File</code> object from package.\nGet <code>Vec&lt;WasmModulePackage&gt;</code> from package.\nGet share dir from package if present.\nGet www dir from package if present.\nCalls <code>U::from(self)</code>.\nHermes application package manifest.json struct.\nAn application’s module info object\nValidate package with its signature and other contents. If …\nValidate and write all content of the <code>Manifest</code> to the …\nValidate icon.svg file and write it to the package to the …\nValidate metadata.json file and write it to the package to …\nValidate WASM module package and write it to the package …\nVerify author package signature.\nWrite share dir to the package to the provided dir path.\nWrite www dir to the package to the provided dir path to …\nBuild application from the application package.\nMount <code>ApplicationPackage</code> content to the <code>Vfs</code>\nWASM module cose signature payload JSON schema.\nA signature payload object.\n<code>SignaturePayload</code> builder object.\nA <code>SignaturePayload</code> module object.\n<code>SignaturePayload</code> builder object.\nCreate a new <code>SignaturePayload</code>.\nCreate a new <code>SignaturePayloadModule</code>.\nHash of the replaced module’s config.json package file.\nHash of the replaced module’s config.json package file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHash of the icon SVG file.\nHash of the icon SVG file.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHash of the metadata JSON file.\nHash of the metadata JSON file.\nModules list.\nModules list.\nName of the WASM module.\nName of the WASM module.\nCreate a new <code>SignaturePayloadBuilder</code>.\nCreate a new <code>SignaturePayloadModuleBuilder</code>.\nHash of the of the entire WASM module package.\nHash of the of the entire WASM module package.\nHash of the share directory content.\nHash of the whole replaced module’s share package …\nHash of the share directory content.\nHash of the whole replaced module’s share package …\nSet the config.json file hash.\nAdd a new <code>SignaturePayloadModule</code> into the list.\nSet the share directory hash.\nSet the share directory hash.\nSet the www directory hash.\nHash of the www directory content.\nHash of the www directory content.\nWASM module manifest.json schema.\nHermes application package manifest.json definition.\n<code>Manifest</code> <code>modules</code> item field definition.\nPath to the WASM module config JSON file.\nDefault icon.svg file path.\nDefault metadata.json file path.\nDefault package name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>Manifest</code> from a path.\nPath to the icon svg file.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPath to the metadata JSON file.\nApplication WASM Modules.\nPackage name.\nApplication WASM module name.\nPath to the WASM module package file.\nSerde definition of the manifest objects.\nPath to the share directory.\nPath to the WASM module share directory.\nPath to the www directory.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nApplication package module info.\nApplication defined module’s <code>config.json</code> file\nApplication defined module’s <code>share</code> directory\nReturns the argument unchanged.\nGet module’s WASM component\nGet module’s WASM component file\nGet module’s WASM config file\nGet module’s config info\nGet module’s WASM config schema file\nGet module’s metadata\nGet module’s WASM metadata file\nGet module’s name\nGet module’s WASM settings schema file\nGet module’s share dir\nGet module’s author signature\nCalls <code>U::from(self)</code>.\nModule name.\nCreate a new <code>AppModuleInfo</code> instance\nModule package.\nValidate module package with its signature and other …\nBlake2b-256 hash instance.\nBlake2b-256 hasher instance.\nBlake2b-256 hash size.\nFinalize the state and return a <code>Hash</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>Blake2b256</code> from bytes.\nCreate a new <code>Blake2b256</code> from bytes. It does not validate …\nCreate a new <code>Blake2b256</code> from hex string.\nCalculate a new <code>Blake2b256</code> from bytes.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>Blake2b256Hasher</code>.\nReturn the hash bytes.\nConvert the hash to a hexadecimal string.\nIncrementally add bytes to the hasher.\nMetadata schema JSON string definition.\nMetadata object.\nTraits defines a specific metadata schema specified for …\n<code>T</code> type marker.\nReturns the argument unchanged.\nCreate <code>Metadata</code> from reader.\nGet <code>name</code> property from the <code>Metadata</code> object.\nCalls <code>U::from(self)</code>.\nmetadata JSON object.\nSet <code>build_date</code> property to the <code>Metadata</code> object.\nSet <code>name</code> property to the <code>Metadata</code> object.\nConvert <code>Metadata</code> object to json bytes.\nModule package signature file path.\nModule package WASM component file path.\nModule package config file path.\nModule package config schema file path.\nModule package file extension.\nModule package metadata file path.\nHermes WASM module package.\nModule package settings schema file path.\nModule package share directory path.\nA signature payload object for author.cose Hermes WASM …\nCreate a new module package from a manifest file.\nWASM module package config JSON\nHermes WASM module’s config info object.\nCopy all content of the <code>ModulePackage</code> to the provided <code>Dir</code>.\nReturns the argument unchanged.\nOpen an existing WASM module package.\nCreate <code>ModulePackage</code> from a <code>Package</code>.\nGet <code>wasm::module::Module</code> object from package.\nGet component <code>File</code> object from package.\nGet config <code>File</code> object from package.\nGet <code>Config</code> and <code>ConfigSchema</code> objects from package if …\nGet <code>ConfigSchema</code> object from package.\nGet config schema <code>File</code> object from package.\nGet <code>Metadata</code> object from package.\nGet metadata <code>File</code> object from package.\nGet <code>SettingsSchema</code> object from package if present.\nGet settings schema <code>File</code> object from package if present.\nGet share dir from package if present.\nGet <code>Signature</code> object from package.\nBuild and return <code>SignaturePayload</code>.\nCalls <code>U::from(self)</code>.\nWASM module package manifest.json struct.\nWASM module package settings JSON\nSign the package and store signature inside it. If …\nValidate package with its signature and other contents. If …\nValidate WASM component file and write it to the package …\nValidate config schema and config file and write them to …\nValidate config file and write it to the package.\nValidate config schema and write it to the package to the …\nValidate and write all content of the <code>Manifest</code> to the …\nValidate metadata.json file and write it to the package to …\nValidate settings schema file and it to the package.\nVerify package signature.\nWrite share dir to the package.\nWASM module cose signature payload JSON schema.\nA signature payload object.\n<code>SignaturePayload</code> builder object.\nA <code>SignaturePayload</code> config object.\nA <code>SignaturePayload</code> settings object.\nCreate a new <code>SignaturePayload</code>.\nHash of the WASM component file.\nHash of the WASM component file.\nConfig instance.\nHash of the config JSON file.\nHash of the config schema JSON file.\nHash of the config JSON file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHash of the metadata JSON file.\nHash of the metadata JSON file.\nCreate a new <code>SignaturePayloadBuilder</code>.\nHash of the config schema JSON file.\nHash of the settings schema JSON file.\nSettings instance.\nHash of the settings schema JSON file.\nHash of the share directory content.\nHash of the share directory content.\nSet the config file hash.\nSet the config schema hash.\nSet the settings schema hash.\nSet the share directory hash.\nConfig object.\nConfig schema object.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate <code>ConfigSchema</code> from reader.\nCreate <code>Config</code> from reader.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nconfig schema JSON object.\nconfig JSON object.\nConvert <code>ConfigSchema</code> object to json bytes\nConvert <code>Config</code> object to json bytes\nGet JSON schema validator.\nJSON schema validator.\nConfig info object.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConfig schema.\nConfig value itself.\nWASM module manifest JSON schema.\nWASM module package manifest.json definition.\n<code>Manifest</code> config definition.\n<code>Manifest</code> settings definition.\nPath to the  WASM component file.\nWASM module config.\nDefault WASM component file path.\nDefault metadata JSON file path.\nDefault package name.\nPath to the config JSON file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>Manifest</code> from a path.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPath to the metadata JSON file.\nPackage name.\nPath to the config schema JSON file.\nPath to the settings schema JSON file.\nSerde definition of the manifest objects.\nWASM module settings.\nPath to the share directory.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSettings schema object.\nReturns the argument unchanged.\nCreate <code>SettingsSchema</code> from reader.\nCalls <code>U::from(self)</code>.\nsettings schema JSON object.\nConvert <code>SettingsSchema</code> object to json bytes\nGet JSON schema validator.\nJSON schema validator.\nBuffer size for hash calculation. 1024 * 1024 = 1MB.\nHermes package object. Wrapper over HDF5 file object.\nCalculates recursively directory contents hash with the …\nCalculates recursively package directory contents hash …\nCalculates file hash with the provided hasher.\nCalculates file hash, if present\nCreate new <code>Package</code> instance from path.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new <code>Package</code> instance mounting a <code>dir</code> as a root for …\nOpen existing <code>Package</code> instance from path.\nJSON Schema Draft 7 Validator.\nValidate and deserialize JSON value from reader against …\nReturns the argument unchanged.\nCreate a new json schema validator from JSON value.\nCreate a new json schema validator from reader.\nCreate a new json schema validator from string.\nCalls <code>U::from(self)</code>.\nJSON schema validator instance.\nValidate JSON value against current schema.\nx.509 certificate implementation.\nED25519 public and private key implementation.\nHermes COSE signature implementation.\nx.509 cert instance. Wrapper over <code>x509_cert::Certificate</code>\nCertificate decoding from string error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate new certificate from file decoded in PEM format\nCreate new certificate from string decoded in PEM format\n<code>Blake2b256</code> hash of the certificate DER encoded bytes.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA concurrent certificates storage.\nGet certificate’s subject public key.\n<code>Certificate</code>’s storage, implemented as a key-value store. …\nSingleton <code>CertificateStorage</code> instance.\nAdd new <code>Certificate</code> to the storage.\nReturns the argument unchanged.\nGet <code>Certificate</code> from the storage.\nGet <code>Certificate</code> from the storage.\nInsert new <code>Certificate</code> into the storage.\nCalls <code>U::from(self)</code>.\nCreate new <code>CertificateStorage</code> instance.\nPublic or private key decoding from string error.\nEd25519 private key instance. Wrapper over …\nEd25519 public key instance. Wrapper over …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate new public key from raw bytes.\nCreate new private key from file decoded in PEM format\nCreate new public key from file decoded in PEM format.\nCreate new private key from string decoded in PEM format\nCreate new public key from string decoded in PEM format.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet associated public key.\nSign the message with the current private key. Returns the …\nVerify signature of the message with the current public …\nCOSE signature object.\nSignature payload encoding trait. Defines how to encode …\nAdd a new signature to the <code>Self::cose_signatures</code> field.\nAdd a new signature to the <code>CoseSign</code> object.\nReturn a protected header for <code>CoseSignBuilder</code>.\nBuild a <code>CoseSign</code> object.\nReturn a protected header for <code>CoseSignatureBuilder</code>.\nBuild empty <code>CoseSignature</code> object.\nSignatures collection.\nReturns the argument unchanged.\nCreate new <code>Signature</code> object from CBOR encoded bytes.\nDecode signature payload object from bytes.\nCreate new <code>Signature</code> object from CBOR encoded bytes reader.\nCalls <code>U::from(self)</code>.\nCreate new <code>Signature</code> object.\nGet the payload object.\nSignature payload object.\nPrepare <code>CoseSignBuilder</code> object with necessary data.\nConvert <code>Signature</code> object to CBOR decoded bytes.\nEncode signature payload object to bytes.\nValidate <code>CoseSign</code> protected header.\nVerify the <code>Signature</code> object. Validate all signatures, how …\nVerify the <code>CoseSignature</code> object.\nFailed when reactor already been initialized.\nFailed when event queue not been initialized.\nGlobal Hermes reactor state\nHermes Reactor struct. This object orchestrates all Hermes …\nLoaded hermes apps\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet all available Hermes application names from the Hermes …\nGet Hermes application from the Hermes Reactor.\nInitialize Hermes Reactor. Setup and runs all necessary …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad Hermes application into the Hermes Reactor.\nHermes Runtime Context. This is passed to the WASM runtime.\nSchedule Recurrent CRON event\nProvide file advisory information on a descriptor.\nGet a new localtime from a localtime, by recalculating …\nGet the application name\nHermes application name\nAppend a value for a key. Does not change or delete any …\nReturn a stream for appending to a file, if available.\nGet the HTTP Authority for the Request. A value of <code>none</code> …\nReturns the authority from the request, if it was present.\nThe timeout for receiving subsequent chunks of bytes in …\nStores application data into parameters of the original …\nHash a binary buffer with <code>BLAKE2b</code>\nHash a binary buffer with <code>BLAKE2b</code> with <code>MAC</code> (Message …\nHash a binary buffer with BLAKE2s\nHash a binary buffer with <code>BLAKE2s</code> with <code>MAC</code> (Message …\nHash a binary buffer with BLAKE3\nRequest to flush buffered output, and block until flush …\nRead bytes from a stream, after blocking until at least …\nSkip bytes from a stream, after blocking until at least …\nRead from one stream and write to another, with blocking.\nPerform a write of up to 4096 bytes, and then flush the …\nPerform a write of up to 4096 zeroes, and then flush the …\nReturns the resource corresponding to the outgoing Body …\nReturns the resource corresponding to the outgoing Body …\nCheck a signature on a set of data.\nCheck readiness for writing. This function never blocks.\nMake a deep copy of the Fields. Equivalent in behavior to …\nCloses a database connection, destructor for <code>sqlite3</code>.\nReturns information about a single column of the current …\nThe timeout for the initial connect to the HTTP Server.\nReturns the incoming body. May be called at most once. …\nGives the <code>incoming-body</code> associated with this request. Will …\nCreate a directory.\nSchedule A Single cron event after a fixed delay.\nDelete all values for a key. Does nothing if no values for …\nDerive a new private key from the current private key.\nRetrieve the full set of keys and values in the Fields. …\nRetrieves the numeric result code for the most recent …\nGet the event name\nevent name to be executed\nGet the counter value\nmodule’s execution counter\nExecutes an SQL query directly without preparing it into a …\nFetch a block from the requested blockchain at the …\nAttempts to extract a filesystem-related <code>error-code</code> from …\nDestroys a prepared statement object. If the most recent …\nTakes ownership of <code>incoming-body</code>, and returns a …\nFinalize an outgoing body, optionally providing trailers. …\nThe timeout for receiving the first byte of the Response …\nRequest to flush buffered output. This function never …\nReturns the argument unchanged.\nConstruct an HTTP Fields.\nGenerate BIP39 Mnemonic Function\nReturns the incoming HTTP Response, or an error, once one …\nGet all of the values corresponding to a key. If the key …\nReturns the contents of the trailers, or an error which …\nGet the POSIX-style arguments to the program.\nGet a datetime from a localtime.\nReturn the set of preopened directories, and their path.\nGet the POSIX-style environment variables.\nGet flags associated with a descriptor.\nReturn <code>len</code> insecure pseudo-random bytes.\nReturn an insecure pseudo-random <code>u64</code> value.\nGet localtime from a datetime or now.\nReturn <code>len</code> cryptographically-secure random or …\nReturn a cryptographically-secure random or pseudo-random …\nGet transactions from a block.\nGet the dynamic type of a descriptor.\nThis function is invoked with an outgoing HTTP Request, …\nReturns <code>true</code> when the key is present in this <code>fields</code>. If …\nGet the <code>headers</code> associated with the request.\nGet the headers associated with the Request.\nReturns the headers from the incoming response.\nGet the headers associated with the Request.\nAttempts to extract a http-related <code>error</code> from the wasi:io …\nReturn a path that programs should use as their initial …\nReturn a 128-bit value that may contain a pseudo-random …\nCalls <code>U::from(self)</code>.\nTest whether two descriptors refer to the same filesystem …\nGet a value, and then add to it (Atomic) Adding to a …\nCheck if the Key equals a test value (exact match) and if …\nGet a value from the local key-value store Returns None if …\nGet a value from the local key-value store Returns the …\nGet a value, and then set it (Atomic) Setting None will …\nSet a value in the local key-value store Setting None will …\nSubscribe to any updates made to a particular Key. After …\nUnsubscribe to any updates made to a particular Key. After …\nCreate a hard link.\nGenerate a Log\nList currently active cron schedule.\nReturn a hash of the metadata associated with a filesystem …\nReturn a hash of the metadata associated with a filesystem …\nGet the Method for the Request.\nReturns the method of the incoming request.\nMake a crontab entry from individual time values.\nGet the module id\nmodule’s id\nConstruct an empty HTTP Fields.\nConstruct an <code>outgoing-response</code>, with a default <code>status-code</code> …\nConstruct a new <code>outgoing-request</code> with a default <code>method</code> of …\nCreates a new instance of the <code>Context</code>.\nCreate a new ED25519-BIP32 Crypto resource\nConstruct a default <code>request-options</code> value.\nRead the current value of the clock.\nRead the current value of the clock.\nOpens a connection to a new or existing <code>SQLite</code> database.\nOpen a file or directory.\nReturns the path with query parameters from the request, …\nGet the combination of the HTTP Path and Query for the …\nPost a transactions to the blockchain.\nCompiles SQL text into byte-code that will do the work of …\nGet the public key for this private key.\nRead from a descriptor, without using and updating the …\nPerform a non-blocking read from the stream.\nRead directory entries from a directory.\nRead a single directory entry from a <code>directory-entry-stream</code>…\nReturn a stream for reading from a file, if available.\nRead the contents of a symbolic link.\nRemove a directory.\nRename a filesystem object.\nQuery the resolution of the clock. Returns the duration of …\nQuery the resolution of the clock.\nRemove the requested crontab.\nGet the HTTP Related Scheme for the Request. When <code>none</code>, the\nReturns the protocol scheme from the request.\nSet all of the values for a key. Clears any existing …\nSet the value of the <code>response-outparam</code> to either send a …\nSet the HTTP Authority for the Request. A value of <code>none</code> …\nSet the timeout for receiving subsequent chunks of bytes …\nSet the timeout for the initial connect to the HTTP …\nSet the timeout for receiving the first byte of the …\nSet the Method for the Request. Fails if the string …\nSet the combination of the HTTP Path and Query for the …\nSet the HTTP Related Scheme for the Request. When <code>none</code>, the\nAdjust the size of an open file. If this increases the file…\nSet the HTTP Status Code for the Response. Fails if the …\nAdjust the timestamps of an open file or directory.\nAdjust the timestamps of a file or directory.\nSign data with the Private key, and return it.\nSkip bytes from a stream. Returns number of bytes skipped.\nRead from one stream and write to another.\nReturn the attributes of an open file or directory.\nReturn the attributes of a file or directory.\nReturns the status code from the incoming response.\nGet the HTTP Status Code for the Response.\nAdvances a statement to the next result row or to …\nReturns the contents of the body, as a stream of bytes.\nSubscribe to the Blockchain block data.\nSubscribe to blockchain rollback events, does not alter …\nSubscribe to transaction data events, does not alter the …\nCreate a symbolic link (also known as a “symlink”).\nSynchronize the data and metadata of a file to disk.\nSynchronize the data of a file to disk.\nReturns a string that is suitable to assist humans in …\nUnlink a filesystem object that is not a directory.\nUnsubscribe from the blockchain events listed.\nGet virtual file system\nApp Virtual file system\nReturns a stream for writing the body contents.\nWrite to a descriptor, without using and updating the …\nPerform a write. This function never blocks.\nReturn a stream for writing to a file, if available.\nWrite zeroes to a stream.\nHermes application configuration for modules.\nHermes <code>wasmtime::component::bindgen</code> generated code\nHermes runtime extensions implementations - HERMES custom …\nAdvise Runtime Extensions of a new context\nGeneralized, type safe <code>wasmtime::component::Resource&lt;T&gt;</code> …\nHermes runtime extensions implementations - WASI standard …\nMaximum configurable DB Size.\nConfiguration struct for <code>SQLite</code> database.\nPath to the <code>SQLite</code> database file, not set if it’s …\nReturns the argument unchanged.\nGets <code>SQLite</code> config for in-memory datastore\nGets <code>SQLite</code> config for persistent datastore\nCalls <code>U::from(self)</code>.\nMaximum size of the <code>SQLite</code> database in bytes.\nReturns the argument unchanged.\nInstantiates the provided <code>module</code> using the specified …\nInstantiates a pre-instantiated module using the specified …\nCalls <code>U::from(self)</code>.\nLow-level creation wrapper for wrapping up the exports of …\nCardano Preview Network\nCardano Mainnet\nCardano Preprod Network\nTriggered when a cardano block event fires.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCardano Preview Network\nCardano Mainnet\nCardano Preprod Network\nTriggered when a cardano rollback event fires.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCardano Preview Network\nCardano Mainnet\nCardano Preprod Network\nTriggered when a cardano transaction event fires.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTriggered when a cron event fires.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe tag associated with the crontab entry.\nThe crontab entry in standard cron format. The Time is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPerform application start up initialization.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTime in localtime format.\nRun or List a WASM provided benchmark test.\nRun or List a WASM provided integration test.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nName of the test\nTriggers when a message is received on a topic.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe contents of the message.\nOptional Peer ID that published the message.\nThe topic that the message was received on.\nJust use the largest float type supported\nA byte string\nJust use the largest integer type supported\nCBOR data\nA String\nJust use the largest signed integer type supported\nA Subscribed key has updated.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis function is invoked with an incoming HTTP Request, …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n256 bit value\n512 bit value\nBinary String (bstr) is a list of bytes. This type is used …\nCardano Blocks are CBOR Data\nThe ID of the blockchain to interact with.\nCardano Transactions are CBOR Data\nThe TIP of the blockchain.\nErrors that can happen fetching/subscribing to blocks\nThe blockchain requested is not available.\nCardano Preview Network\nThe blockchain requested is not available.\nThe very start of the blockchain.\nThe transaction is not well formed, and can not be posted.\nCardano Mainnet\nCardano Preprod Network\nThe Slot number to interact with\nA particular slot number.\nErrors that can occur when posting transactions.\nFetch a block from the requested blockchain at the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet transactions from a block.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPost a transactions to the blockchain.\nSubscribe to the Blockchain block data.\nSubscribe to blockchain rollback events, does not alter …\nSubscribe to transaction data events, does not alter the …\nUnsubscribe from the blockchain events listed.\nCBOR is a binary cbor data type. This type is used to …\nRepresents all possible values, <code>&quot;*&quot;</code>.\nMaps to <code>*</code> in a cron schedule (ie, match all)\nMatch an absolute time/date\nA discreet time entry used to help convert numeric times …\nA Tag used to mark a delivered cron event.\nA cron schedule in crontab format.\nA tagged crontab entry It is valid for multiple crontab …\nA list of cron time components\nMaximum value for <code>Day</code>.\nMaximum value for <code>DayOfWeek</code>. Sunday.\nMaximum value for <code>Hour</code>.\nMaximum value for <code>Minute</code>.\nMaximum value for <code>Month</code>.\nMinimum value for <code>Day</code>.\nMinimum value for <code>DayOfWeek</code>. Monday.\nMinimum value for <code>Hour</code>.\nMinimum value for <code>Minute</code>.\nMinimum value for <code>Month</code>.\nMatch an inclusive list of time/date values.\nSchedule Recurrent CRON event\nClamp inner values within the given range values. Returns …\nSchedule A Single cron event after a fixed delay.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList currently active cron schedule.\nMerge two <code>CronComponent</code> values. Returns …\nMake a crontab entry from individual time values.\nRemove the requested crontab.\nThe tag associated with the crontab entry.\nThe crontab entry in standard cron format. The Time is …\nbip32-ed25519 Public Key\nbip32-ed25519 Signature\nErrors that can occurs.\nThe derivational path is invalid.\nThe mnemonic is invalid.\nA word in the mnemonic is not found in the word list.\nThe prefix is longer than the maximum allowed length, max …\nMnemonic\nPassphrase\nDerivation path\nFailed to generate entropy.\nThe mnemonic length is not a multiple of 3 or not in the …\nCheck a signature on a set of data.\nDerive a new private key from the current private key.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate BIP39 Mnemonic Function\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new BIP32-Ed25519 Crypto resource\nGet the public key for this private key.\nSign data with the Private key, and return it.\nErrors that can occur during hashing.\nThe key exceeds the supported size of the hash function.\nThe personal exceeds the supported size of the hash …\nThe salt exceeds the supported size of the hash function.\nThe hash size requested is larger than supported by the …\nBLAKE2b Hash Function\nBLAKE2bMac Hash Function\nBLAKE2s Hash Function\nBLAKE2sMac Hash Function\nBLAKE3 Hash Function\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDHT value\nUnable to get DHT value.\nA DHT key.\nUnable to put DHT value.\nA DHT value.\nErrors that occur in IPFS networking.\nUnable to publish file to IPFS.\nUnable to get file from IPFS.\nUnable to pin file.\nInvalid CID.\nInvalid DHT key.\nInvalid DHT value.\nUnable to parse a valid IPFS path.\nInvalid Peer ID.\nInvalid PubSub message.\nThis is content that can be validated.\nThe binary contents of an IPFS file.\nA path to an IPFS file.\nPubSub Message Data\nPubSub Message ID\nUnable to evict peer.\nThe ID of a peer.\nA PubSub message from a topic subscription.\nUnable to publish to IPFS topic.\nUnable to subscribe to IPFS topic.\nA PubSub topic.\nIPFS service is unavailable.\nGets a DHT key-value from IPFS.\nPuts a DHT key-value into IPFS.\nUploads a file to IPFS.\nRetrieves a file from IPFS.\nPins an IPFS file by path.\nUn-pins an IPFS file by path.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValidates IPFS content from DHT or PubSub.\nThe contents of the message.\nEvict peer from network.\nOptional Peer ID that published the message.\nPublish a message to a topic.\nSubscribes to a PubSub topic.\nThe topic that the message was received on.\nJSON is just a string. This type is used to indicate the …\nJust use the largest float type supported\nA byte string\nJust use the largest integer type supported\nCBOR data\nA String\nJust use the largest signed integer type supported\nA time and date in seconds plus nanoseconds.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet a value, and then add to it (Atomic) Adding to a …\nCheck if the Key equals a test value (exact match) and if …\nGet a value from the local key-value store Returns None if …\nGet a value from the local key-value store Returns the …\nGet a value, and then set it (Atomic) Setting None will …\nSet a value in the local key-value store Setting None will …\nSubscribe to any updates made to a particular Key. After …\nUnsubscribe to any updates made to a particular Key. After …\nErrors that can occur converting times\nTime in localtime format.\nThe timezone we are localized for.\nGet a new localtime from a localtime, by recalculating …\nDay of week (0-6)\nMonth (0-11)\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a datetime from a localtime.\nGet localtime from a datetime or now.\nDay (1-31)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHour (0-23)\nYear\nSecond (0-59)\nMinute (0-59)\nNanoseconds\nDebug Log Level\nA very serious error\nGeneral Informational Log Level\nThe supported logging levels\nTracing Log level\nWarning about something that might be a problem.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGenerate a Log\nA blob or a UTF-8 text in bytes.\nAn error caused during the conversion of a CString.\nThe numeric value is truncated or improperly converted …\nReal number.\nErrors that indicate that something has gone wrong.\nRepresents an error with a code and a message.\nFailed to open the database.\nFailed to set the database size limit.\n<code>PRAGMA</code> commands are not allowed to execute inside Hermes.\n32-bit integer.\n64-bit integer.\nThe in-memory configuration provided is invalid.\nThe persistent configuration provided is invalid.\nThe database name is missing in the persistent …\nNull value.\nUnhandled null pointer is returned while interacting with …\nThe database connection object.\nAn error caused from internal SQLite engine.\nThe prepared statement object.\nUTF-8 text.\nUnknown column type is retrieved.\nThe value of a column in a specific data format.\nStores application data into parameters of the original …\nCloses a database connection, destructor for <code>sqlite3</code>.\nThe numeric result code of the error.\nReturns information about a single column of the current …\nRetrieves the numeric result code for the most recent …\nExecutes an SQL query directly without preparing it into a …\nDestroys a prepared statement object. If the most recent …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe error message associated with the error code.\nOpens a connection to a new or existing SQLite database.\nCompiles SQL text into byte-code that will do the work of …\nAdvances a statement to the next result row or to …\nGet the POSIX-style arguments to the program.\nGet the POSIX-style environment variables.\nReturn a path that programs should use as their initial …\nExit the current instance and any linked instances.\nA duration of time, in nanoseconds.\nHermes does not support <code>poll</code> use …\nRead the current value of the clock.\nQuery the resolution of the clock. Returns the duration of …\nA time and date in seconds plus nanoseconds.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRead the current value of the clock.\nQuery the resolution of the clock.\nReturn the set of preopened directories, and their path.\nPermission denied, similar to <code>EACCES</code> in POSIX.\nFile or memory access pattern advisory information.\nConnection already in progress, similar to <code>EALREADY</code> in …\nBad descriptor, similar to <code>EBADF</code> in POSIX.\nThe descriptor refers to a block device inode.\nDevice or resource busy, similar to <code>EBUSY</code> in POSIX.\nThe descriptor refers to a character device inode.\nCross-device link, similar to <code>EXDEV</code> in POSIX.\nResource deadlock would occur, similar to <code>EDEADLK</code> in POSIX.\nA descriptor is a reference to a filesystem object, which …\nFile attributes.\nThe type of a filesystem object referenced by a descriptor.\nThe descriptor refers to a directory inode.\nA directory entry.\nA stream of directory entries.\nThe application expects that it will not access the …\nError codes returned by functions, similar to <code>errno</code> in …\nFile exists, similar to <code>EEXIST</code> in POSIX.\nThe descriptor refers to a named pipe.\nFile too large, similar to <code>EFBIG</code> in POSIX.\nFile size or length of a region within a file.\nIllegal byte sequence, similar to <code>EILSEQ</code> in POSIX.\nOperation in progress, similar to <code>EINPROGRESS</code> in POSIX.\nNot enough space, similar to <code>ENOMEM</code> in POSIX.\nNo space left on device, similar to <code>ENOSPC</code> in POSIX.\nInterrupted function, similar to <code>EINTR</code> in POSIX.\nInvalid argument, similar to <code>EINVAL</code> in POSIX.\nInvalid seek, similar to <code>ESPIPE</code> in POSIX.\nI/O error, similar to <code>EIO</code> in POSIX.\nIs a directory, similar to <code>EISDIR</code> in POSIX.\nNumber of hard links to an inode.\nToo many levels of symbolic links, similar to <code>ELOOP</code> in …\nMessage too large, similar to <code>EMSGSIZE</code> in POSIX.\nA 128-bit hash value, split into parts because wasm doesn…\nFilename too long, similar to <code>ENAMETOOLONG</code> in POSIX.\nWhen setting a timestamp, this gives the value to set it …\nLeave the timestamp set to its previous value.\nNo such device, similar to <code>ENODEV</code> in POSIX.\nNo such file or directory, similar to <code>ENOENT</code> in POSIX.\nNo locks available, similar to <code>ENOLCK</code> in POSIX.\nThe application expects to access the specified data once …\nNo such device or address, similar to <code>ENXIO</code> in POSIX.\nInappropriate I/O control operation, similar to <code>ENOTTY</code> in …\nThe application has no advice to give on its behavior with …\nNot a directory or a symbolic link to a directory, similar …\nDirectory not empty, similar to <code>ENOTEMPTY</code> in POSIX.\nOperation not permitted, similar to <code>EPERM</code> in POSIX.\nState not recoverable, similar to <code>ENOTRECOVERABLE</code> in POSIX.\nSet the timestamp to the current time of the system clock …\nValue too large to be stored in data type, similar to …\nBroken pipe, similar to <code>EPIPE</code> in POSIX.\nStorage quota exceeded, similar to <code>EDQUOT</code> in POSIX.\nThe application expects to access the specified data in a …\nRead-only file system, similar to <code>EROFS</code> in POSIX.\nThe descriptor refers to a regular file inode.\nThe application expects to access the specified data …\nThe descriptor refers to a socket.\nThe file refers to a symbolic link inode.\nText file busy, similar to <code>ETXTBSY</code> in POSIX.\nSet the timestamp to the given value.\nToo many links, similar to <code>EMLINK</code> in POSIX.\nThe type of the descriptor or file is unknown or is …\nNot supported, similar to <code>ENOTSUP</code> and <code>ENOSYS</code> in POSIX.\nThe application expects to access the specified data in …\nResource unavailable, or operation would block, similar to …\nProvide file advisory information on a descriptor.\nReturn a stream for appending to a file, if available.\nCreate a directory.\nLast data access timestamp.\nLast data modification timestamp.\nAttempts to extract a filesystem-related <code>error-code</code> from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet flags associated with a descriptor.\nGet the dynamic type of a descriptor.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTest whether two descriptors refer to the same filesystem …\nCreate a hard link.\nNumber of hard links to the file.\n64 bits of a 128-bit hash value.\nReturn a hash of the metadata associated with a filesystem …\nReturn a hash of the metadata associated with a filesystem …\nThe name of the object.\nOpen a file or directory.\nRead from a descriptor, without using and updating the …\nRead directory entries from a directory.\nRead a single directory entry from a <code>directory-entry-stream</code>…\nReturn a stream for reading from a file, if available.\nRead the contents of a symbolic link.\nRemove a directory.\nRename a filesystem object.\nAdjust the size of an open file. If this increases the file…\nAdjust the timestamps of an open file or directory.\nAdjust the timestamps of a file or directory.\nFor regular files, the file size in bytes. For symbolic …\nReturn the attributes of an open file or directory.\nReturn the attributes of a file or directory.\nLast file status-change timestamp.\nCreate a symbolic link (also known as a “symlink”).\nSynchronize the data and metadata of a file to disk.\nSynchronize the data of a file to disk.\nFile type.\nThe type of the file referred to by this directory entry.\nUnlink a filesystem object that is not a directory.\nAnother 64 bits of a 128-bit hash value.\nWrite to a descriptor, without using and updating the …\nReturn a stream for writing to a file, if available.\nThis is a catch-all error for anything that doesn’t fit …\nThis function is invoked with an outgoing HTTP Request, …\nDefines the case payload type for <code>DNS-error</code> above:\nThese cases are inspired by the IANA HTTP Proxy Error …\nField keys are always strings.\nDefines the case payload type for …\nField values should always be ASCII strings. However, in …\nThis following block defines the <code>fields</code> resource which …\nThis error indicates that a forbidden <code>field-key</code> was used …\nRepresents a future which may eventaully return an …\nRepresents a future which may eventaully return trailers, …\nThis type enumerates the different kinds of errors that …\nHeaders is an alias for Fields.\nThis error indicates that the operation on the <code>fields</code> was …\nRepresents an incoming HTTP Request or Response’s Body.\nRepresents an incoming HTTP Request.\nRepresents an incoming HTTP Response.\nThis is a catch-all error for anything that doesn’t fit …\nThis error indicates that a <code>field-key</code> or <code>field-value</code> was …\nHermes doews not support <code>poll</code> use …\nRepresents an outgoing HTTP Request or Response’s Body.\nRepresents an outgoing HTTP Request.\nRepresents an outgoing HTTP Response.\nParameters for making an HTTP Request. Each of these …\nRepresents the ability to send an HTTP Response.\nThis type corresponds to HTTP standard Related Schemes.\nThis type corresponds to the HTTP standard Status Code.\nDefines the case payload type for <code>TLS-alert-received</code> above:\nTrailers is an alias for Fields.\nAppend a value for a key. Does not change or delete any …\nReturns the authority from the request, if it was present.\nGet the HTTP Authority for the Request. A value of <code>none</code> …\nThe timeout for receiving subsequent chunks of bytes in …\nReturns the resource corresponding to the outgoing Body …\nReturns the resource corresponding to the outgoing Body …\nMake a deep copy of the Fields. Equivelant in behavior to …\nThe timeout for the initial connect to the HTTP Server.\nGives the <code>incoming-body</code> associated with this request. Will …\nReturns the incoming body. May be called at most once. …\nDelete all values for a key. Does nothing if no values for …\nRetrieve the full set of keys and values in the Fields. …\nTakes ownership of <code>incoming-body</code>, and returns a …\nFinalize an outgoing body, optionally providing trailers. …\nThe timeout for receiving the first byte of the Response …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct an HTTP Fields.\nGet all of the values corresponding to a key. If the key …\nReturns a pollable which becomes ready when either the …\nReturns a pollable which becomes ready when either the …\nReturns <code>true</code> when the key is present in this <code>fields</code>. If …\nGet the <code>headers</code> associated with the request.\nGet the headers associated with the Request.\nReturns the headers from the incoming response.\nGet the headers associated with the Request.\nAttempts to extract a http-related <code>error</code> from the wasi:io …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the method of the incoming request.\nGet the Method for the Request.\nConstruct an empty HTTP Fields.\nConstruct a new <code>outgoing-request</code> with a default <code>method</code> of …\nConstruct a default <code>request-options</code> value.\nConstruct an <code>outgoing-response</code>, with a default <code>status-code</code> …\nReturns the path with query parameters from the request, …\nGet the combination of the HTTP Path and Query for the …\nReturns the protocol scheme from the request.\nGet the HTTP Related Scheme for the Request. When <code>none</code>, the\nSet all of the values for a key. Clears any existing …\nSet the value of the <code>response-outparam</code> to either send a …\nSet the HTTP Authority for the Request. A value of <code>none</code> …\nSet the timeout for receiving subsequent chunks of bytes …\nSet the timeout for the initial connect to the HTTP …\nSet the timeout for receiving the first byte of the …\nSet the Method for the Request. Fails if the string …\nSet the combination of the HTTP Path and Query for the …\nSet the HTTP Related Scheme for the Request. When <code>none</code>, the\nSet the HTTP Status Code for the Response. Fails if the …\nReturns the status code from the incoming response.\nGet the HTTP Status Code for the Response.\nReturns the contents of the body, as a stream of bytes.\nReturns a stream for writing the body contents.\nA resource which represents some error information.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns a string that is suitable to assist humans in …\nThe stream is closed: no more input will be accepted by the\nAn input bytestream.\nThe last operation (a write or flush) failed before …\nAn output bytestream.\n// Hermes does not support <code>poll</code> use poll.{pollable}; */ An …\nRequest to flush buffered output, and block until flush …\nRead bytes from a stream, after blocking until at least …\nSkip bytes from a stream, after blocking until at least …\nRead from one stream and write to another, with blocking.\nPerform a write of up to 4096 bytes, and then flush the …\nPerform a write of up to 4096 zeroes, and then flush the …\nCheck readiness for writing. This function never blocks.\nRequest to flush buffered output. This function never …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPerform a non-blocking read from the stream.\nSkip bytes from a stream. Returns number of bytes skipped.\nRead from one stream and write to another.\nPerform a write. This function never blocks.\nCreate a <code>pollable</code> which will resolve once the output-stream\nReturn <code>len</code> insecure pseudo-random bytes.\nReturn an insecure pseudo-random <code>u64</code> value.\nReturn a 128-bit value that may contain a pseudo-random …\nReturn <code>len</code> cryptographically-secure random or …\nReturn a cryptographically-secure random or pseudo-random …\nBinary runtime extension implementation.\nCardano Blockchain runtime extension implementation.\nCBOR runtime extension implementation.\nCron runtime extension implementation.\nCrypto runtime extension implementation.\nHash runtime extension implementation.\nHTTP Gateway\nInit runtime extension implementation.\nIntegration test runtime extension implementation for test …\nHermes IPFS runtime extension.\nJSON runtime extension implementation.\nKV-Store runtime extension implementation.\nLocaltime runtime extension implementation.\nLogging runtime extension implementation.\nAdvise Runtime Extensions of a new context\n<code>SQLite</code> runtime extension implementation.\nBinary host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nSubscribe to block events from a given point.\nContinue previously stopped subscription event generation.\nContains the error value\nTriple representing the key of the subscription state map.\nContains the success value\nCardano Runtime Extension internal result type.\nSubscribe to rollback events.\nCardano Runtime Extension internal state.\nCardano Runtime Extension state.\nHermes application module subscription state.\nAvailable subscription types.\nSubscribe to transaction events.\nA Chain Follower task is responsible for managing a …\nCurrent slot that the subscription is at.\nCardano Blockchain runtime extension event handler …\nHandle to the cardano chain follower from which the module …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCardano Blockchain host implementation for WASM runtime.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdvise Runtime Extensions of a new context\nReads a block from a Cardano network.\nChain followers configured only for reading blocks.\nSubscribes a module or resumes the generation of …\nWhether the module is subscribed to receive block events.\nWhether the module is subscribed to receive rollback …\nWhether the module is subscribed to receive transaction …\nMapping of application module subscription states.\nHandle to the Tokio runtime background thread.\nThe Tokio Runtime task is responsible for executing a …\nUnsubscribes a module or stops the generation of …\nChain follower executor commands.\nChain follower handle command channel receiver.\nChain follower handle command channel sender.\nInstructs the chain follower to resume generating events.\nHolds flags specifying which event subscriptions are …\nHandle used to communicate with a chain follower executor …\nInstructs the chain follower executor to set the read …\nInstructs the chain follower to stop generating events.\nWhether the module is subscribed to block events.\nBuilds a <code>super::event::OnCardanoBlockEvent</code> from the block …\nBuilds a <code>super::event::OnCardanoRollback</code> from the block …\nBuilds <code>super::event::OnCardanoTxnEvent</code> for every …\nCommands channel sender.\nRuns a Cardano chain follower that generates events for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the event subscription flags for a given module.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProcesses a block chain update.\nProcesses a single chain update.\nProcesses a chain follower task command.\nProcesses a rollback chain update.\nSends a command to the chain follower executor task to …\nWhether the module is subscribed to rollback events.\nSends a command to the chain follower executor task to set …\nSpawns a new Chain Follower task in the current Tokio …\nSends a command to the chain follower executor task to …\nWhether the module is subscribed to transaction events.\nUpdates the module’s state with the current slot the …\nOn Cardano block event\nOn Cardano rollback event\nOn Cardano txn event\nThis raw CBOR block data.\nThe blockchain id the block originated from.\nThe blockchain id the block originated from.\nThe blockchain id the block originated from.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe slot the transaction is in.\nThe slot the transaction is in.\nSource information about where the block came from, and if …\nThe raw transaction data itself.\nThe offset in the block this transaction is at.\nCommand data that can be send to the Tokio runtime …\nTokio runtime handle command channel receiver type.\nTokio runtime handle command channel sender type.\nHandle used for communicating with the Tokio runtime …\nInstructs the Tokio runtime background thread to read a …\nInstructs the Tokio runtime background thread to spawn a …\nCommands channel sender.\nRuns the Cardano Runtime Extension Tokio runtime.\nReturns the peer address used to connect to each Cardano …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads a block from the given chain at the given point.\nReads a block from a Cardano network.\nSpawns a OS thread running the Tokio runtime task.\nSpawns a follower which will follow the given chain and …\nSpawns a new chain follower in the background Tokio …\nName of the app that the follower will be tied to.\nChain point at which the block is to be fetched.\nCardano blockchain that the follower will connect to.\nCardano blockchain from which the block will be fetched.\nFollower’s starting point.\nID of the module that the follower will be tied to.\nResponse channel sender.\nResponse channel sender.\nCBOR host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nThe Cron Queue Task failed to start.\nCron Error.\nInvalid timestamp.\nClamp values within the specified <code>min_val..=max_val</code> range\nConvert a <code>CronTime</code> to a <code>CronSched</code>.\nConvert a <code>CronTime</code> to a <code>CronSched</code> for the day of month.\nConvert a <code>CronTime</code> to a <code>CronSched</code> for the day of week.\nConvert a <code>CronTime</code> to a <code>CronSched</code> for the hour of day.\nConvert a <code>CronTime</code> to a <code>CronSched</code> for the minute of hour.\nConvert a <code>CronTime</code> to a <code>CronSched</code> for the month.\nCron runtime extension event handler implementation.\nReturns the argument unchanged.\nCron host implementation for WASM runtime.\nCalls <code>U::from(self)</code>.\nScan and merge components if they overlap.\nConvert <code>CronTime</code> arguments to a <code>CronSched</code>.\nCreate a delayed crontab entry.\nAdvise Runtime Extensions of a new context\nCron Event Queue implementation.\nCron State.\nDuration in nanoseconds used for the Cron Service.\nOn cron event\nGet the <code>Cron</code> from the inner <code>CronSchedule</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis cron event will not retrigger.\nSaturating integer subtraction. Computes <code>self - rhs</code>, …\nGet the UTC datetime from an optional start timestamp.\nThe tagged cron event that was triggered.\nGet the next scheduled cron event after the optional start …\nGet the next scheduled cron event from the optional start …\nAdd a new cron job for the given app.\nThe crontab queue task runs in the background.\nScheduled Date and Time for sending a cron event.\nCron Job Delay.\nAdd a delayed cron job for the given app.\nList all the cron jobs for the given app.\nRemove a cron job from the given app.\nThe waiting event task id.\nAdd a new crontab entry.\nThe crontab event.\nThe crontab events.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList all the crontab entries for the given app.\nCreate a new <code>CronQueueTask</code>.\nCreate a new thread that will sleep for <code>duration</code> …\nGet the next timestamp to schedule, collected from all the …\nPop the first item from all the <code>BTreeMap</code>s belonging to …\nPop the first item from the <code>BTreeMap</code>.\nRemove a crontab entry for the given app.\nSend events to the crontab queue.\nSpawn a new cron job.\nScheduled time for running the event.\nTrigger the queue.\nUpdate the waiting task.\nNext scheduled Cron Task.\nCron Internal State\nInternal State.\nAdd a new crontab entry.\nThe send events to the crontab queue.\nAdd a crontab to the cron queue.\nDelay a crontab in the cron queue.\nList crontabs from the cron queue.\nRemove a crontab from the cron queue.\nThe crontab queue task runs in the background.\nTrigger the cron queue events dispatch.\nSchedule a single cron event after a fixed delay.\nReturns the argument unchanged.\nHandle the <code>CronJob::Add</code> command.\nHandle the <code>CronJob::Delay</code> command.\nHandle the <code>CronJob::List</code> command.\nHandle the <code>CronJob::Remove</code> command.\nCalls <code>U::from(self)</code>.\nList crontabs for an application.\nCreate a new <code>InternalState</code>.\nRemove the requested crontab.\nSend event to the Hermes Event Queue.\nImplementation of Bip32-Ed25519.\nImplementation of BIP39.\nCrypto host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nCrypto state\nConvert a 32 bytes array to a tuple of u64 values.\nConvert a 64 bytes array to a tuple of u64 values.\nConvert a tuple of u64 values to a 64 bytes array.\nCheck the signature on the given data.\nDerive a new extended private key from the given extended …\nGet public key from the given extended private key.\nSign data with the given extended private key.\nTurns bit of array to bytes of arrays\nConvert bytes entropy to bits.\nTurns decimal into binary array of length 11.\nGenerate entropy bytes and return the value.\nGenerate a new mnemonic. Number of bytes entropy required …\nGenerate checksum bits from entropy bits.\nGet the mnemonic from the BIP39 dictionary using word …\nGet the index bits of the prefix words from a BIP39 …\nGet the word indices from the entropy bits.\nCheck if the word count is invalid. Valid word count is a …\nGenerate a new extended private key (<code>XPrv</code>) from a mnemonic …\nConvert string to BIP39 language.\nGlobal state to hold the resources.\nMap of app name to resource holder\nGet the crypto state.\nMap of app name to resources.\nImplementation of blake2b and blake2bmac hash functions.\nHash host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nImplementation of the Blake2b hash function.\nImplementation of the Blake2b Message Authentication Code.\nState.\nHTTP-Gateway handler implementation.\nHTTP Gateway task\nNew context\nGateway routing logic\nReq body\nHTTP response code\nHTTP Event\nMsg type for MPSC\nReceiver\nHeaders in kv form\nEvent response\nHTTP method e.g GET\nHTTP Path\nHTTP Body\nReturns the argument unchanged.\nReturns the argument unchanged.\nHTTP Headers\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHTTP Method\nHTTP Path\nWaits for wasm modules to complete and sends the response …\nIncoming request client IP\nConfig for gateway setup\nManages and tracks client connections\nUnique identifier for incoming request\nHTTP Gateway port\nhostname (node name)\nIs the connection still live\nHas the event been processed\nConnection metadata\nStarts the HTTP Gateway\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet connection context\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocal address for boot strap\nSpawns a OS thread running the Tokio runtime task.\nValid host names\nAttempts to wait for a value on this receiver, returning …\nhostname (node name)\nCheck path is valid for static files\nEverything that hits /api routes to Webasm Component …\nCompose http event and send to global queue, await queue …\nHTTP error response generator\nReturns the argument unchanged.\nExtractor that resolves the hostname of the request. …\nCalls <code>U::from(self)</code>.\nCheck if valid path to static files.\nHTTP not found response generator\nRoute single request to hermes backend\nRouting by hostname is a mechanism for isolating API …\nServes static data with 1:1 mapping\nEmit Init event for a provided Hermes app target\nInit runtime extension event handler implementation.\nAdvise Runtime Extensions of a new context\nInit event\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIntegration test runtime extension event handler …\nStoring results from calling a bench event.\nRepresents a benchmark event.\nRepresents different types of events.\nOn bench event\nOn test event\nStoring results from calling a test event.\nRepresents a test event.\nExecutes an event from a module and returns a testing …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue = Run the test, False = Just list the test name.\nTrue = Run the benchmark, False = Just list the test name.\nThe bench number to run/list.\nThe bench number to run/list.\nHermes IPFS runtime extension event handler implementation.\nIPFS host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nEvent handler for the <code>on-topic</code> event.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTopic message received.\nJSON host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nKV-Store runtime extension event handler implementation.\nKV-Store host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nKV update event\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nKey.\nValue.\nGet <code>Tz</code> from an optional <code>Timezone</code>.\nLocaltime host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nLocaltime host implementation for WASM runtime.\n(Implementation) Get a new localtime from a localtime, by …\n(Implementation) Get localtime from a datetime or now.\nLogging host implementation for WASM runtime.\nImplementation of logging API\nAdvise Runtime Extensions of a new context\nLog a message\n<code>SQLite</code> connection object runtime extension implementation.\nCore functionality implementation for the <code>SQLite</code> open …\n<code>SQLite</code> host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nInternal state implementation for the <code>SQLite</code> module.\n<code>SQLite</code> statement runtime extension implementation.\nCore functionality implementation for <code>SQLite</code> connection …\n<code>SQLite</code> connection object host implementation for WASM …\nAdvise Runtime Extensions of a new context\nCloses a database connection, destructor for <code>sqlite3</code>.\nRetrieves runtime status information about a single …\nExecutes an SQL query directly without preparing it into a …\nCompiles SQL text into byte-code that will do the work of …\nChecks if the provided SQL string contains a <code>PRAGMA</code> …\nThe default page size of <code>SQLite</code>.\nOpens a connection to a new or existing <code>SQLite</code> database.\nMap of app name to db resource holder\nThe object pointer used specifically with C objects like …\nGlobal state to hold <code>SQLite</code> db resources.\nGlobal state to hold <code>SQLite</code> statement resources.\nMap of app name to db statement resource holder\nGet the global state of <code>SQLite</code> db resources.\nGet the global state of <code>SQLite</code> statement resources.\nMap of app name to resources.\nMap of app name to resources.\nCore functionality implementation for <code>SQLite</code> statement …\n<code>SQLite</code> statement host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nStores application data into parameters of the original …\nReturns information about a single column of the current …\nDestroys a prepared statement object. If the most recent …\nAdvances a statement to the next result row or to …\n<code>ApplicationResourceStorage</code> struct.\n<code>ResourceStorage</code> struct.\n<code>WitType</code> type phantom.\nAdds new application to the resource manager. If the …\nApplication not found error message.\nNext available address id of the resource.\nCreates a new owned resource from the given object. Stores …\nRemoves the resource from the resource manager. Similar to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet application state from the resource manager. To …\nCreates a new owned resource from the given object. Stores …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates new <code>ResourceStorage</code> instance.\nCreates new <code>ApplicationResourceStorage</code> instance.\nRemoves application and all associated resources from the …\nResource not found error message.\nMap of id to resource object.\nMap of app name to resources.\nCLI runtime extension implementation.\nHost - WASI - Clock implementations\nFilesystem runtime extension implementation.\nHTTP runtime extension implementation.\nHost - WASI IO Implementation\nAdvise Runtime Extensions of a new context\nHost - WASI - Random implementations\nCLI host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nMonotonic clock runtime extension implementation.\nAdvise Runtime Extensions of a new context\nClock State.\nWall clock runtime extension implementation.\nMonotonic clock host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nClock state singleton.\nClock state.\nMonotonic clock base instant.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMonotonic clock resolution.\nMonotonic Clock current time.\nMonotonic Clock resolution.\nReturns the current value of the monotonic clock.\nCreates a new instance of the <code>ClockState</code>.\nWall Clock current time.\nWall Clock resolution.\nWall clock resolution.\nWall clock host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nFilesystem host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nFilesystem state.\nGlobal state to hold the descriptors resources.\nRepresents an open file or directory.\nMap of app name to descriptors.\nDirectory descriptor.\nFile descriptor.\nReturns the argument unchanged.\nGet the filesystem state.\nCalls <code>U::from(self)</code>.\nMap of app name to resources.\nHTTP host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nIO Error runtime extension implementation.\nAdvise Runtime Extensions of a new context\nIO Streams runtime extension implementation.\nIO Error host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nIO Streams host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nStreams state.\nGlobal state to hold the input streams resources.\nHelper super trait for <code>InputStream</code> which wraps a …\nMap of app name to input streams resource holder.\nGlobal state to hold the input streams resources.\nHelper super trait for <code>OutputStream</code> which wraps a …\nMap of app name to output streams resource holder.\nGet the input streams state.\nGet the output streams state.\nMap of app name to resources.\nMap of app name to resources.\nInsecure RNG runtime extension implementation.\nInsecure RNG seed runtime extension implementation.\nAdvise Runtime Extensions of a new context\nRandom RNG runtime extension implementation.\nInsecure RNG host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nInsecure RNG seed host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nRandom RNG host implementation for WASM runtime.\nAdvise Runtime Extensions of a new context\nParse a path string into a vector of path elements …\nVirtual file system <code>etc</code> directory name.\nVirtual file system file extension.\nVirtual file system <code>ipfs</code> directory name.\nVirtual file system <code>lib</code> directory name.\nVirtual file system <code>srv</code> directory name.\nVirtual file system <code>tmp</code> directory name.\nVirtual file system <code>usr</code> directory name.\nVirtual file system <code>usr/lib</code> directory name.\nHermes virtual file system type.\nHermes virtual file system bootstrapper.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIPFS virtual file system.\nPermissions state management of the Hermes virtual file …\nVFS permissions state.\nReads in data in bytes, the number of which is specified …\nGet the root directory of the VFS.\nHDF5 root directory of the virtual file system.\nWrites data from a buffer declared by the user to a hdf5 …\nDirectory to create object.\nMounted directory object.\nMounted file object.\nHermes virtual file system builder.\nBootstrap the virtual file system from the provided …\nCreate dir for the VFS.\nHDF5 directory.\nHDF5 directories to create\nHDF5 file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMount dir of the VFS.\nMount file of the VFS.\nMounted module’s directories.\nMounted module’s files\nCreate a new <code>VfsBootstrapper</code> instance.\nPath where create directory.\nPermission level.\nPermission level.\nPermission level.\nSetup initial content of the VFS.\nSetup VFS directories permissions.\nSetup VFS directories structure.\nPath where to mount file.\nPath where to mount directory.\nPath to the VFS HDF5 file’s directory.\nVFS file name.\nAdd a <code>Dir</code> creation by the provided path during …\nAdd a mounted dir\nAdd a mounted file\nIPFS virtual file.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPermission level type.\n<code>PermissionsTree</code> node type.\nConvenient type of the referenced <code>PermissionNode</code>.\nVFS permissions state stored in the radix tree structure, …\nRead only permission level.\nRead and write permission level.\nAdds a new path to the <code>PermissionsTree</code> with the provided …\nNode childs.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the permission level for the provided path.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>PermissionsTree</code> instance with the root node …\nNode permission level.\nTree’s root node.\nWASM engine implementation Wrapper over the …\nWASM module implementation. Wrapper over the …\nWASM engine configuration error\nWASM Engine struct\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new instance of the <code>Engine</code>.\nBad WASM module error\nStructure defines an abstraction over the WASM module It …\nModule id type\nStructure defines an abstraction over the WASM module …\n<code>Engine</code> entity\nModule’s execution counter\nGet the module’s execution counter\nExecutes a Hermes event by calling some WASM function. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstantiate WASM module from bytes\nInstantiate WASM module reader\nGet the module id\nModule id\n<code>Instance</code> entity\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>wasmtime::InstancePre</code> entity\n<code>wasmtime::Store</code> entity")