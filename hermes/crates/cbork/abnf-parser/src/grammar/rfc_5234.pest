//! ABNF Grammar adapted from RFC5234 Section 4 and Appendix B
//! https://datatracker.ietf.org/doc/html/rfc5234#section-4
//! https://datatracker.ietf.org/doc/html/rfc5234#appendix-B.1

// cspell: words VCHAR DQUOTE ONEOF

// correction: https://www.rfc-editor.org/errata/eid3076
abnf = ${
    SOI
    ~ (rule | (WHITESPACE* ~ c_nl))+
    ~ EOI
}

// -----------------------------------------------------------------------------
// Rules

/// continues if next line starts with white space
rule = ${ rulename ~ defined_as ~ elements ~ c_nl }

/// basic rules definition and incremental alternatives
defined_as = ${ c_wsp* ~ ("=/" | "=") ~ c_wsp* }

/// correction: https://www.rfc-editor.org/errata/eid2968
elements = ${ alternation ~ WHITESPACE* }

// -----------------------------------------------------------------------------
// Groups and Options

group = ${ "(" ~ c_wsp* ~ alternation ~ c_wsp* ~ ")" }

option = ${ "[" ~ c_wsp* ~ alternation ~ c_wsp* ~ "]" }

// -----------------------------------------------------------------------------
// Alternations

alternation = ${ concatenation ~ (c_wsp* ~ "/" ~ c_wsp* ~ concatenation)* }

concatenation = ${ repetition ~ (c_wsp+ ~ repetition)* }

// -----------------------------------------------------------------------------
// Repetitions

repetition = ${ repeat? ~ element }

repeat = ${ (ASCII_DIGIT* ~ "*" ~ ASCII_DIGIT*) | ASCII_DIGIT+ }

// -----------------------------------------------------------------------------
// Elements

element = ${ rulename | group | option | char_val | num_val | prose_val }

// -----------------------------------------------------------------------------
// Values

/// quoted string of SP and VCHAR without DQUOTE
char_val = ${ "\"" ~ ('\u{20}'..'\u{21}' | '\u{23}'..'\u{7E}')* ~ "\"" }

num_val = ${ "%" ~ (bin_val | dec_val | hex_val) }

/// series of concatenated bit values or single ONEOF range
bin_val = ${ "b" ~ ASCII_BIN_DIGIT+ ~ (("." ~ ASCII_BIN_DIGIT+)+ | ("-" ~ ASCII_BIN_DIGIT+))? }

dec_val = ${ "d" ~ ASCII_DIGIT+ ~ (("." ~ ASCII_DIGIT+)+ | ("-" ~ ASCII_DIGIT+))? }

hex_val = ${ "x" ~ ASCII_HEX_DIGIT+ ~ (("." ~ ASCII_HEX_DIGIT+)+ | ("-" ~ ASCII_HEX_DIGIT+))? }

/// bracketed string of SP and VCHAR without ">"
/// prose description, to be used as last resort
/// correction: https://www.rfc-editor.org/errata/eid2914
prose_val = ${ "<" ~ ('\u{20}'..'\u{3D}' | '\u{3F}'..'\u{7E}')* ~ ">" }

// -----------------------------------------------------------------------------
// Identifiers

rulename = ${ ASCII_ALPHA ~ (ASCII_ALPHA | ASCII_DIGIT | "-" )* }

// -----------------------------------------------------------------------------
// Characters, Whitespace and Comments

c_wsp = _{ WHITESPACE | (c_nl ~ WHITESPACE) }

/// comment or newline
c_nl = _{ COMMENT | NEWLINE }

COMMENT = { ";" ~ (VCHAR | WHITESPACE)* ~ NEWLINE }
WHITESPACE = _{ " " | "\t" }

/// visible (printing) characters
VCHAR = _{ '\u{21}'..'\u{7E}' }
